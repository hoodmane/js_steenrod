(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (global){
!function(){"use strict";var e,t,n,r,i,s,o,a,u,p,c,l,h,g,m,f,d,y,S,x,b,E,v,C,A,q;function w(e){return H.Statement.hasOwnProperty(e.type)}i=require("estraverse"),s=require("esutils"),e=i.Syntax,n={"||":(t={Sequence:0,Yield:1,Await:1,Assignment:1,Conditional:2,ArrowFunction:2,LogicalOR:3,LogicalAND:4,BitwiseOR:5,BitwiseXOR:6,BitwiseAND:7,Equality:8,Relational:9,BitwiseSHIFT:10,Additive:11,Multiplicative:12,Unary:13,Postfix:14,Call:15,New:16,TaggedTemplate:17,Member:18,Primary:19}).LogicalOR,"&&":t.LogicalAND,"|":t.BitwiseOR,"^":t.BitwiseXOR,"&":t.BitwiseAND,"==":t.Equality,"!=":t.Equality,"===":t.Equality,"!==":t.Equality,is:t.Equality,isnt:t.Equality,"<":t.Relational,">":t.Relational,"<=":t.Relational,">=":t.Relational,in:t.Relational,instanceof:t.Relational,"<<":t.BitwiseSHIFT,">>":t.BitwiseSHIFT,">>>":t.BitwiseSHIFT,"+":t.Additive,"-":t.Additive,"*":t.Multiplicative,"%":t.Multiplicative,"/":t.Multiplicative};var k=7,B=1;function P(e,t){var n="";for(t|=0;t>0;t>>>=1,e+=e)1&t&&(n+=e);return n}function F(e){var t=e.length;return t&&s.code.isLineTerminator(e.charCodeAt(t-1))}function I(e,t){var n;for(n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function M(e,t){var n,r;function i(e){return"object"==typeof e&&e instanceof Object&&!(e instanceof RegExp)}for(n in t)t.hasOwnProperty(n)&&(i(r=t[n])?i(e[n])?M(e[n],r):e[n]=M({},r):e[n]=r);return e}function D(e,t){return 8232==(-2&e)?(t?"u":"\\u")+(8232===e?"2028":"2029"):10===e||13===e?(t?"":"\\")+(10===e?"n":"r"):String.fromCharCode(e)}function L(e,t){var n;return 8===e?"\\b":12===e?"\\f":9===e?"\\t":(n=e.toString(16).toUpperCase(),u||e>255?"\\u"+"0000".slice(n.length)+n:0!==e||s.code.isDecimalDigit(t)?11===e?"\\x0B":"\\x"+"00".slice(n.length)+n:"\\0")}function R(e){if(92===e)return"\\\\";if(10===e)return"\\n";if(13===e)return"\\r";if(8232===e)return"\\u2028";if(8233===e)return"\\u2029";throw new Error("Incorrectly classified character")}function T(e,t){if(!E)return Array.isArray(e)?function e(t){var n,r,i,s="";for(n=0,r=t.length;n<r;++n)i=t[n],s+=Array.isArray(i)?e(i):i;return s}(e):e;if(null==t){if(e instanceof r)return e;t={}}return null==t.loc?new r(null,null,E,e,t.name||null):new r(t.loc.start.line,t.loc.start.column,!0===E?t.loc.source||null:E,e,t.name||null)}function O(){return m||" "}function N(e,t){var n,r,i,o;return 0===(n=T(e).toString()).length?[t]:0===(r=T(t).toString()).length?[e]:(i=n.charCodeAt(n.length-1),o=r.charCodeAt(0),(43===i||45===i)&&i===o||s.code.isIdentifierPartES5(i)&&s.code.isIdentifierPartES5(o)||47===i&&105===o?[e,O(),t]:s.code.isWhiteSpace(i)||s.code.isLineTerminator(i)||s.code.isWhiteSpace(o)||s.code.isLineTerminator(o)?[e,t]:[e,m,t])}function W(e){return[o,e]}function j(e){var t;t=o,e(o+=a),o=t}function z(e,t){if("Line"===e.type){if(F(e.value))return"//"+e.value;var n="//"+e.value;return C||(n+="\n"),n}return x.format.indent.adjustMultilineComment&&/[\n\r]/.test(e.value)?function(e,t){var n,r,i,a,u,p,c,l;for(n=e.split(/\r\n|[\r\n]/),p=Number.MAX_VALUE,r=1,i=n.length;r<i;++r){for(a=n[r],u=0;u<a.length&&s.code.isWhiteSpace(a.charCodeAt(u));)++u;p>u&&(p=u)}for(void 0!==t?(c=o,"*"===n[1][p]&&(t+=" "),o=t):(1&p&&--p,c=o),r=1,i=n.length;r<i;++r)l=T(W(n[r].slice(p))),n[r]=E?l.join(""):l;return o=c,n.join("\n")}("/*"+e.value+"*/",t):"/*"+e.value+"*/"}function U(t,n){var r,i,u,p,c,l,h,g,m,f,d,S;if(t.leadingComments&&t.leadingComments.length>0){if(p=n,C){for(n=[],g=(u=t.leadingComments[0]).extendedRange,m=u.range,(S=((d=v.substring(g[0],m[0])).match(/\n/g)||[]).length)>0?(n.push(P("\n",S)),n.push(W(z(u)))):(n.push(d),n.push(z(u))),f=m,r=1,i=t.leadingComments.length;r<i;r++)m=(u=t.leadingComments[r]).range,S=(v.substring(f[1],m[0]).match(/\n/g)||[]).length,n.push(P("\n",S)),n.push(W(z(u))),f=m;S=(v.substring(m[1],g[1]).match(/\n/g)||[]).length,n.push(P("\n",S))}else for(u=t.leadingComments[0],n=[],y&&t.type===e.Program&&0===t.body.length&&n.push("\n"),n.push(z(u)),F(T(n).toString())||n.push("\n"),r=1,i=t.leadingComments.length;r<i;++r)F(T(h=[z(u=t.leadingComments[r])]).toString())||h.push("\n"),n.push(W(h));n.push(W(p))}if(t.trailingComments)if(C)g=(u=t.trailingComments[0]).extendedRange,m=u.range,(S=((d=v.substring(g[0],m[0])).match(/\n/g)||[]).length)>0?(n.push(P("\n",S)),n.push(W(z(u)))):(n.push(d),n.push(z(u)));else for(c=!F(T(n).toString()),l=P(" ",function(e){var t;for(t=e.length-1;t>=0&&!s.code.isLineTerminator(e.charCodeAt(t));--t);return e.length-1-t}(T([o,n,a]).toString())),r=0,i=t.trailingComments.length;r<i;++r)u=t.trailingComments[r],c?(n=0===r?[n,a]:[n,l]).push(z(u,l)):n=[n,W(z(u))],r===i-1||F(T(n).toString())||(n=[n,"\n"]);return n}function K(e,t,n){var r,i=0;for(r=e;r<t;r++)"\n"===v[r]&&i++;for(r=1;r<i;r++)n.push(g)}function V(e,t,n){return t<n?["(",e,")"]:e}function G(e){var t,n,r;for(t=1,n=(r=e.split(/\r\n|\n/)).length;t<n;t++)r[t]=g+o+r[t];return r}function H(){}function Y(e){return T(e.name,e)}function X(e,t){return e.async?"async"+(t?O():m):""}function $(e){return e.generator&&!x.moz.starlessGenerator?"*"+m:""}function _(e){var t=e.value,n="";return t.async&&(n+=X(t,!e.computed)),t.generator&&(n+=$(t)?"*":""),n}function J(e){var n;if(n=new H,w(e))return n.generateStatement(e,B);if(function(e){return H.Expression.hasOwnProperty(e.type)}(e))return n.generateExpression(e,t.Sequence,k);throw new Error("Unknown node type: "+e.type)}H.prototype.maybeBlock=function(t,n){var r,i,s=this;return i=!x.comment||!t.leadingComments,t.type===e.BlockStatement&&i?[m,this.generateStatement(t,n)]:t.type===e.EmptyStatement&&i?";":(j(function(){r=[g,W(s.generateStatement(t,n))]}),r)},H.prototype.maybeBlockSuffix=function(t,n){var r=F(T(n).toString());return t.type!==e.BlockStatement||x.comment&&t.leadingComments||r?r?[n,o]:[n,g,o]:[n,m]},H.prototype.generatePattern=function(t,n,r){return t.type===e.Identifier?Y(t):this.generateExpression(t,n,r)},H.prototype.generateFunctionParams=function(n){var r,i,s,o;if(o=!1,n.type!==e.ArrowFunctionExpression||n.rest||n.defaults&&0!==n.defaults.length||1!==n.params.length||n.params[0].type!==e.Identifier){for((s=n.type===e.ArrowFunctionExpression?[X(n,!1)]:[]).push("("),n.defaults&&(o=!0),r=0,i=n.params.length;r<i;++r)o&&n.defaults[r]?s.push(this.generateAssignment(n.params[r],n.defaults[r],"=",t.Assignment,k)):s.push(this.generatePattern(n.params[r],t.Assignment,k)),r+1<i&&s.push(","+m);n.rest&&(n.params.length&&s.push(","+m),s.push("..."),s.push(Y(n.rest))),s.push(")")}else s=[X(n,!0),Y(n.params[0])];return s},H.prototype.generateFunctionBody=function(n){var r,i;return r=this.generateFunctionParams(n),n.type===e.ArrowFunctionExpression&&(r.push(m),r.push("=>")),n.expression?(r.push(m),"{"===(i=this.generateExpression(n.body,t.Assignment,k)).toString().charAt(0)&&(i=["(",i,")"]),r.push(i)):r.push(this.maybeBlock(n.body,9)),r},H.prototype.generateIterationForStatement=function(n,r,i){var s=["for"+m+(r.await?"await"+m:"")+"("],o=this;return j(function(){r.left.type===e.VariableDeclaration?j(function(){s.push(r.left.kind+O()),s.push(o.generateStatement(r.left.declarations[0],0))}):s.push(o.generateExpression(r.left,t.Call,k)),s=N(s,n),s=[N(s,o.generateExpression(r.right,t.Sequence,k)),")"]}),s.push(this.maybeBlock(r.body,i)),s},H.prototype.generatePropertyKey=function(e,n){var r=[];return n&&r.push("["),r.push(this.generateExpression(e,t.Sequence,k)),n&&r.push("]"),r},H.prototype.generateAssignment=function(e,n,r,i,s){return t.Assignment<i&&(s|=1),V([this.generateExpression(e,t.Call,s),m+r+m,this.generateExpression(n,t.Assignment,s)],t.Assignment,i)},H.prototype.semicolon=function(e){return!d&&32&e?"":";"},H.Statement={BlockStatement:function(e,t){var n,r,i=["{",g],s=this;return j(function(){var o,a,u,p;for(0===e.body.length&&C&&(n=e.range)[1]-n[0]>2&&("\n"===(r=v.substring(n[0]+1,n[1]-1))[0]&&(i=["{"]),i.push(r)),p=B,8&t&&(p|=16),o=0,a=e.body.length;o<a;++o)C&&(0===o&&(e.body[0].leadingComments&&(n=e.body[0].leadingComments[0].extendedRange,"\n"===(r=v.substring(n[0],n[1]))[0]&&(i=["{"])),e.body[0].leadingComments||K(e.range[0],e.body[0].range[0],i)),o>0&&(e.body[o-1].trailingComments||e.body[o].leadingComments||K(e.body[o-1].range[1],e.body[o].range[0],i))),o===a-1&&(p|=32),u=e.body[o].leadingComments&&C?s.generateStatement(e.body[o],p):W(s.generateStatement(e.body[o],p)),i.push(u),F(T(u).toString())||C&&o<a-1&&e.body[o+1].leadingComments||i.push(g),C&&o===a-1&&(e.body[o].trailingComments||K(e.body[o].range[1],e.range[1],i))}),i.push(W("}")),i},BreakStatement:function(e,t){return e.label?"break "+e.label.name+this.semicolon(t):"break"+this.semicolon(t)},ContinueStatement:function(e,t){return e.label?"continue "+e.label.name+this.semicolon(t):"continue"+this.semicolon(t)},ClassBody:function(e,n){var r=["{",g],i=this;return j(function(n){var s,o;for(s=0,o=e.body.length;s<o;++s)r.push(n),r.push(i.generateExpression(e.body[s],t.Sequence,k)),s+1<o&&r.push(g)}),F(T(r).toString())||r.push(g),r.push(o),r.push("}"),r},ClassDeclaration:function(e,n){var r,i;return r=["class"],e.id&&(r=N(r,this.generateExpression(e.id,t.Sequence,k))),e.superClass&&(i=N("extends",this.generateExpression(e.superClass,t.Assignment,k)),r=N(r,i)),r.push(m),r.push(this.generateStatement(e.body,33)),r},DirectiveStatement:function(e,t){return x.raw&&e.raw?e.raw+this.semicolon(t):function(e){var t,n,r,i;for(i="double"===l?'"':"'",t=0,n=e.length;t<n;++t){if(39===(r=e.charCodeAt(t))){i='"';break}if(34===r){i="'";break}92===r&&++t}return i+e+i}(e.directive)+this.semicolon(t)},DoWhileStatement:function(e,n){var r=N("do",this.maybeBlock(e.body,B));return N(r=this.maybeBlockSuffix(e.body,r),["while"+m+"(",this.generateExpression(e.test,t.Sequence,k),")"+this.semicolon(n)])},CatchClause:function(e,n){var r,i=this;return j(function(){var n;r=["catch"+m+"(",i.generateExpression(e.param,t.Sequence,k),")"],e.guard&&(n=i.generateExpression(e.guard,t.Sequence,k),r.splice(2,0," if ",n))}),r.push(this.maybeBlock(e.body,B)),r},DebuggerStatement:function(e,t){return"debugger"+this.semicolon(t)},EmptyStatement:function(e,t){return";"},ExportDefaultDeclaration:function(e,n){var r,i=["export"];return r=32&n?33:B,i=N(i,"default"),i=w(e.declaration)?N(i,this.generateStatement(e.declaration,r)):N(i,this.generateExpression(e.declaration,t.Assignment,k)+this.semicolon(n))},ExportNamedDeclaration:function(n,r){var i,s=["export"],a=this;return i=32&r?33:B,n.declaration?N(s,this.generateStatement(n.declaration,i)):(n.specifiers&&(0===n.specifiers.length?s=N(s,"{"+m+"}"):n.specifiers[0].type===e.ExportBatchSpecifier?s=N(s,this.generateExpression(n.specifiers[0],t.Sequence,k)):(s=N(s,"{"),j(function(e){var r,i;for(s.push(g),r=0,i=n.specifiers.length;r<i;++r)s.push(e),s.push(a.generateExpression(n.specifiers[r],t.Sequence,k)),r+1<i&&s.push(","+g)}),F(T(s).toString())||s.push(g),s.push(o+"}")),n.source?s=N(s,["from"+m,this.generateExpression(n.source,t.Sequence,k),this.semicolon(r)]):s.push(this.semicolon(r))),s)},ExportAllDeclaration:function(e,n){return["export"+m,"*"+m,"from"+m,this.generateExpression(e.source,t.Sequence,k),this.semicolon(n)]},ExpressionStatement:function(n,r){var i,o;return 123===(o=T(i=[this.generateExpression(n.expression,t.Sequence,k)]).toString()).charCodeAt(0)||function(e){var t;return"class"===e.slice(0,5)&&(123===(t=e.charCodeAt(5))||s.code.isWhiteSpace(t)||s.code.isLineTerminator(t))}(o)||function(e){var t;return"function"===e.slice(0,8)&&(40===(t=e.charCodeAt(8))||s.code.isWhiteSpace(t)||42===t||s.code.isLineTerminator(t))}(o)||function(e){var t,n,r;if("async"!==e.slice(0,5))return!1;if(!s.code.isWhiteSpace(e.charCodeAt(5)))return!1;for(n=6,r=e.length;n<r&&s.code.isWhiteSpace(e.charCodeAt(n));++n);return n!==r&&"function"===e.slice(n,n+8)&&(40===(t=e.charCodeAt(n+8))||s.code.isWhiteSpace(t)||42===t||s.code.isLineTerminator(t))}(o)||S&&16&r&&n.expression.type===e.Literal&&"string"==typeof n.expression.value?i=["(",i,")"+this.semicolon(r)]:i.push(this.semicolon(r)),i},ImportDeclaration:function(n,r){var i,s,a=this;return 0===n.specifiers.length?["import",m,this.generateExpression(n.source,t.Sequence,k),this.semicolon(r)]:(i=["import"],s=0,n.specifiers[s].type===e.ImportDefaultSpecifier&&(i=N(i,[this.generateExpression(n.specifiers[s],t.Sequence,k)]),++s),n.specifiers[s]&&(0!==s&&i.push(","),n.specifiers[s].type===e.ImportNamespaceSpecifier?i=N(i,[m,this.generateExpression(n.specifiers[s],t.Sequence,k)]):(i.push(m+"{"),n.specifiers.length-s==1?(i.push(m),i.push(this.generateExpression(n.specifiers[s],t.Sequence,k)),i.push(m+"}"+m)):(j(function(e){var r,o;for(i.push(g),r=s,o=n.specifiers.length;r<o;++r)i.push(e),i.push(a.generateExpression(n.specifiers[r],t.Sequence,k)),r+1<o&&i.push(","+g)}),F(T(i).toString())||i.push(g),i.push(o+"}"+m)))),i=N(i,["from"+m,this.generateExpression(n.source,t.Sequence,k),this.semicolon(r)]))},VariableDeclarator:function(e,n){var r=1&n?k:6;return e.init?[this.generateExpression(e.id,t.Assignment,r),m,"=",m,this.generateExpression(e.init,t.Assignment,r)]:this.generatePattern(e.id,t.Assignment,r)},VariableDeclaration:function(e,t){var n,r,i,s,o,a=this;function u(){for(s=e.declarations[0],x.comment&&s.leadingComments?(n.push("\n"),n.push(W(a.generateStatement(s,o)))):(n.push(O()),n.push(a.generateStatement(s,o))),r=1,i=e.declarations.length;r<i;++r)s=e.declarations[r],x.comment&&s.leadingComments?(n.push(","+g),n.push(W(a.generateStatement(s,o)))):(n.push(","+m),n.push(a.generateStatement(s,o)))}return n=[e.kind],o=1&t?B:0,e.declarations.length>1?j(u):u(),n.push(this.semicolon(t)),n},ThrowStatement:function(e,n){return[N("throw",this.generateExpression(e.argument,t.Sequence,k)),this.semicolon(n)]},TryStatement:function(e,t){var n,r,i,s;if(n=["try",this.maybeBlock(e.block,B)],n=this.maybeBlockSuffix(e.block,n),e.handlers)for(r=0,i=e.handlers.length;r<i;++r)n=N(n,this.generateStatement(e.handlers[r],B)),(e.finalizer||r+1!==i)&&(n=this.maybeBlockSuffix(e.handlers[r].body,n));else{for(r=0,i=(s=e.guardedHandlers||[]).length;r<i;++r)n=N(n,this.generateStatement(s[r],B)),(e.finalizer||r+1!==i)&&(n=this.maybeBlockSuffix(s[r].body,n));if(e.handler)if(Array.isArray(e.handler))for(r=0,i=e.handler.length;r<i;++r)n=N(n,this.generateStatement(e.handler[r],B)),(e.finalizer||r+1!==i)&&(n=this.maybeBlockSuffix(e.handler[r].body,n));else n=N(n,this.generateStatement(e.handler,B)),e.finalizer&&(n=this.maybeBlockSuffix(e.handler.body,n))}return e.finalizer&&(n=N(n,["finally",this.maybeBlock(e.finalizer,B)])),n},SwitchStatement:function(e,n){var r,i,s,o,a,u=this;if(j(function(){r=["switch"+m+"(",u.generateExpression(e.discriminant,t.Sequence,k),")"+m+"{"+g]}),e.cases)for(a=B,s=0,o=e.cases.length;s<o;++s)s===o-1&&(a|=32),i=W(this.generateStatement(e.cases[s],a)),r.push(i),F(T(i).toString())||r.push(g);return r.push(W("}")),r},SwitchCase:function(n,r){var i,s,o,a,u,p=this;return j(function(){for(i=n.test?[N("case",p.generateExpression(n.test,t.Sequence,k)),":"]:["default:"],o=0,(a=n.consequent.length)&&n.consequent[0].type===e.BlockStatement&&(s=p.maybeBlock(n.consequent[0],B),i.push(s),o=1),o===a||F(T(i).toString())||i.push(g),u=B;o<a;++o)o===a-1&&32&r&&(u|=32),s=W(p.generateStatement(n.consequent[o],u)),i.push(s),o+1===a||F(T(s).toString())||i.push(g)}),i},IfStatement:function(n,r){var i,s,o=this;return j(function(){i=["if"+m+"(",o.generateExpression(n.test,t.Sequence,k),")"]}),s=B,32&r&&(s|=32),n.alternate?(i.push(this.maybeBlock(n.consequent,B)),i=this.maybeBlockSuffix(n.consequent,i),i=n.alternate.type===e.IfStatement?N(i,["else ",this.generateStatement(n.alternate,s)]):N(i,N("else",this.maybeBlock(n.alternate,s)))):i.push(this.maybeBlock(n.consequent,s)),i},ForStatement:function(n,r){var i,s=this;return j(function(){i=["for"+m+"("],n.init?n.init.type===e.VariableDeclaration?i.push(s.generateStatement(n.init,0)):(i.push(s.generateExpression(n.init,t.Sequence,6)),i.push(";")):i.push(";"),n.test?(i.push(m),i.push(s.generateExpression(n.test,t.Sequence,k)),i.push(";")):i.push(";"),n.update?(i.push(m),i.push(s.generateExpression(n.update,t.Sequence,k)),i.push(")")):i.push(")")}),i.push(this.maybeBlock(n.body,32&r?33:B)),i},ForInStatement:function(e,t){return this.generateIterationForStatement("in",e,32&t?33:B)},ForOfStatement:function(e,t){return this.generateIterationForStatement("of",e,32&t?33:B)},LabeledStatement:function(e,t){return[e.label.name+":",this.maybeBlock(e.body,32&t?33:B)]},Program:function(e,t){var n,r,i,s,o;for(s=e.body.length,n=[y&&s>0?"\n":""],o=17,i=0;i<s;++i)y||i!==s-1||(o|=32),C&&(0===i&&(e.body[0].leadingComments||K(e.range[0],e.body[i].range[0],n)),i>0&&(e.body[i-1].trailingComments||e.body[i].leadingComments||K(e.body[i-1].range[1],e.body[i].range[0],n))),r=W(this.generateStatement(e.body[i],o)),n.push(r),i+1<s&&!F(T(r).toString())&&(C&&e.body[i+1].leadingComments||n.push(g)),C&&i===s-1&&(e.body[i].trailingComments||K(e.body[i].range[1],e.range[1],n));return n},FunctionDeclaration:function(e,t){return[X(e,!0),"function",$(e)||O(),e.id?Y(e.id):"",this.generateFunctionBody(e)]},ReturnStatement:function(e,n){return e.argument?[N("return",this.generateExpression(e.argument,t.Sequence,k)),this.semicolon(n)]:["return"+this.semicolon(n)]},WhileStatement:function(e,n){var r,i=this;return j(function(){r=["while"+m+"(",i.generateExpression(e.test,t.Sequence,k),")"]}),r.push(this.maybeBlock(e.body,32&n?33:B)),r},WithStatement:function(e,n){var r,i=this;return j(function(){r=["with"+m+"(",i.generateExpression(e.object,t.Sequence,k),")"]}),r.push(this.maybeBlock(e.body,32&n?33:B)),r}},I(H.prototype,H.Statement),H.Expression={SequenceExpression:function(e,n,r){var i,s,o;for(t.Sequence<n&&(r|=1),i=[],s=0,o=e.expressions.length;s<o;++s)i.push(this.generateExpression(e.expressions[s],t.Assignment,r)),s+1<o&&i.push(","+m);return V(i,t.Sequence,n)},AssignmentExpression:function(e,t,n){return this.generateAssignment(e.left,e.right,e.operator,t,n)},ArrowFunctionExpression:function(e,n,r){return V(this.generateFunctionBody(e),t.ArrowFunction,n)},ConditionalExpression:function(e,n,r){return t.Conditional<n&&(r|=1),V([this.generateExpression(e.test,t.LogicalOR,r),m+"?"+m,this.generateExpression(e.consequent,t.Assignment,r),m+":"+m,this.generateExpression(e.alternate,t.Assignment,r)],t.Conditional,n)},LogicalExpression:function(e,t,n){return this.BinaryExpression(e,t,n)},BinaryExpression:function(e,t,r){var i,o,a,u;return(o=n[e.operator])<t&&(r|=1),i=47===(u=(a=this.generateExpression(e.left,o,r)).toString()).charCodeAt(u.length-1)&&s.code.isIdentifierPartES5(e.operator.charCodeAt(0))?[a,O(),e.operator]:N(a,e.operator),a=this.generateExpression(e.right,o+1,r),"/"===e.operator&&"/"===a.toString().charAt(0)||"<"===e.operator.slice(-1)&&"!--"===a.toString().slice(0,3)?(i.push(O()),i.push(a)):i=N(i,a),"in"!==e.operator||1&r?V(i,o,t):["(",i,")"]},CallExpression:function(e,n,r){var i,s,o;for((i=[this.generateExpression(e.callee,t.Call,3)]).push("("),s=0,o=e.arguments.length;s<o;++s)i.push(this.generateExpression(e.arguments[s],t.Assignment,k)),s+1<o&&i.push(","+m);return i.push(")"),2&r?V(i,t.Call,n):["(",i,")"]},NewExpression:function(e,n,r){var i,s,o,a,u;if(s=e.arguments.length,u=4&r&&!f&&0===s?5:1,i=N("new",this.generateExpression(e.callee,t.New,u)),!(4&r)||f||s>0){for(i.push("("),o=0,a=s;o<a;++o)i.push(this.generateExpression(e.arguments[o],t.Assignment,k)),o+1<a&&i.push(","+m);i.push(")")}return V(i,t.New,n)},MemberExpression:function(n,r,i){var o,a;return o=[this.generateExpression(n.object,t.Call,2&i?3:1)],n.computed?(o.push("["),o.push(this.generateExpression(n.property,t.Sequence,2&i?k:5)),o.push("]")):(n.object.type===e.Literal&&"number"==typeof n.object.value&&(a=T(o).toString()).indexOf(".")<0&&!/[eExX]/.test(a)&&s.code.isDecimalDigit(a.charCodeAt(a.length-1))&&!(a.length>=2&&48===a.charCodeAt(0))&&o.push(" "),o.push("."),o.push(Y(n.property))),V(o,t.Member,r)},MetaProperty:function(e,n,r){var i;return(i=[]).push("string"==typeof e.meta?e.meta:Y(e.meta)),i.push("."),i.push("string"==typeof e.property?e.property:Y(e.property)),V(i,t.Member,n)},UnaryExpression:function(e,n,r){var i,o,a,u,p;return o=this.generateExpression(e.argument,t.Unary,k),""===m?i=N(e.operator,o):(i=[e.operator],e.operator.length>2?i=N(i,o):(p=(u=T(i).toString()).charCodeAt(u.length-1),a=o.toString().charCodeAt(0),(43===p||45===p)&&p===a||s.code.isIdentifierPartES5(p)&&s.code.isIdentifierPartES5(a)?(i.push(O()),i.push(o)):i.push(o))),V(i,t.Unary,n)},YieldExpression:function(e,n,r){var i;return i=e.delegate?"yield*":"yield",e.argument&&(i=N(i,this.generateExpression(e.argument,t.Yield,k))),V(i,t.Yield,n)},AwaitExpression:function(e,n,r){return V(N(e.all?"await*":"await",this.generateExpression(e.argument,t.Await,k)),t.Await,n)},UpdateExpression:function(e,n,r){return e.prefix?V([e.operator,this.generateExpression(e.argument,t.Unary,k)],t.Unary,n):V([this.generateExpression(e.argument,t.Postfix,k),e.operator],t.Postfix,n)},FunctionExpression:function(e,t,n){var r=[X(e,!0),"function"];return e.id?(r.push($(e)||O()),r.push(Y(e.id))):r.push($(e)||m),r.push(this.generateFunctionBody(e)),r},ArrayPattern:function(e,t,n){return this.ArrayExpression(e,t,n,!0)},ArrayExpression:function(e,n,r,i){var s,a,u=this;return e.elements.length?(a=!i&&e.elements.length>1,s=["[",a?g:""],j(function(n){var r,i;for(r=0,i=e.elements.length;r<i;++r)e.elements[r]?(s.push(a?n:""),s.push(u.generateExpression(e.elements[r],t.Assignment,k))):(a&&s.push(n),r+1===i&&s.push(",")),r+1<i&&s.push(","+(a?g:m))}),a&&!F(T(s).toString())&&s.push(g),s.push(a?o:""),s.push("]"),s):"[]"},RestElement:function(e,t,n){return"..."+this.generatePattern(e.argument)},ClassExpression:function(e,n,r){var i,s;return i=["class"],e.id&&(i=N(i,this.generateExpression(e.id,t.Sequence,k))),e.superClass&&(s=N("extends",this.generateExpression(e.superClass,t.Assignment,k)),i=N(i,s)),i.push(m),i.push(this.generateStatement(e.body,33)),i},MethodDefinition:function(e,t,n){var r,i;return r=e.static?["static"+m]:[],i="get"===e.kind||"set"===e.kind?[N(e.kind,this.generatePropertyKey(e.key,e.computed)),this.generateFunctionBody(e.value)]:[_(e),this.generatePropertyKey(e.key,e.computed),this.generateFunctionBody(e.value)],N(r,i)},Property:function(e,n,r){return"get"===e.kind||"set"===e.kind?[e.kind,O(),this.generatePropertyKey(e.key,e.computed),this.generateFunctionBody(e.value)]:e.shorthand?"AssignmentPattern"===e.value.type?this.AssignmentPattern(e.value,t.Sequence,k):this.generatePropertyKey(e.key,e.computed):e.method?[_(e),this.generatePropertyKey(e.key,e.computed),this.generateFunctionBody(e.value)]:[this.generatePropertyKey(e.key,e.computed),":"+m,this.generateExpression(e.value,t.Assignment,k)]},ObjectExpression:function(e,n,r){var i,s,a,u,p=this;return e.properties.length?(i=e.properties.length>1,j(function(){a=p.generateExpression(e.properties[0],t.Sequence,k)}),i||(u=T(a).toString(),/[\r\n]/g.test(u))?(j(function(n){var r,o;if(s=["{",g,n,a],i)for(s.push(","+g),r=1,o=e.properties.length;r<o;++r)s.push(n),s.push(p.generateExpression(e.properties[r],t.Sequence,k)),r+1<o&&s.push(","+g)}),F(T(s).toString())||s.push(g),s.push(o),s.push("}"),s):["{",m,a,m,"}"]):"{}"},AssignmentPattern:function(e,t,n){return this.generateAssignment(e.left,e.right,"=",t,n)},ObjectPattern:function(n,r,i){var s,a,u,p,c=this;if(!n.properties.length)return"{}";if(p=!1,1===n.properties.length)n.properties[0].value.type!==e.Identifier&&(p=!0);else for(a=0,u=n.properties.length;a<u;++a)if(!n.properties[a].shorthand){p=!0;break}return s=["{",p?g:""],j(function(e){var r,i;for(r=0,i=n.properties.length;r<i;++r)s.push(p?e:""),s.push(c.generateExpression(n.properties[r],t.Sequence,k)),r+1<i&&s.push(","+(p?g:m))}),p&&!F(T(s).toString())&&s.push(g),s.push(p?o:""),s.push("}"),s},ThisExpression:function(e,t,n){return"this"},Super:function(e,t,n){return"super"},Identifier:function(e,t,n){return Y(e)},ImportDefaultSpecifier:function(e,t,n){return Y(e.id||e.local)},ImportNamespaceSpecifier:function(e,t,n){var r=["*"],i=e.id||e.local;return i&&r.push(m+"as"+O()+Y(i)),r},ImportSpecifier:function(e,t,n){var r=e.imported,i=[r.name],s=e.local;return s&&s.name!==r.name&&i.push(O()+"as"+O()+Y(s)),i},ExportSpecifier:function(e,t,n){var r=e.local,i=[r.name],s=e.exported;return s&&s.name!==r.name&&i.push(O()+"as"+O()+Y(s)),i},Literal:function(t,n,r){var i;if(t.hasOwnProperty("raw")&&b&&x.raw)try{if((i=b(t.raw).body[0].expression).type===e.Literal&&i.value===t.value)return t.raw}catch(e){}return null===t.value?"null":"string"==typeof t.value?function(e){var t,n,r,i,o,a="",p=0,c=0;for(t=0,n=e.length;t<n;++t){if(39===(r=e.charCodeAt(t)))++p;else if(34===r)++c;else if(47===r&&u)a+="\\";else{if(s.code.isLineTerminator(r)||92===r){a+=R(r);continue}if(!s.code.isIdentifierPartES5(r)&&(u&&r<32||!u&&!h&&(r<32||r>126))){a+=L(r,e.charCodeAt(t+1));continue}}a+=String.fromCharCode(r)}if(o=(i=!("double"===l||"auto"===l&&c<p))?"'":'"',!(i?p:c))return o+a+o;for(e=a,a=o,t=0,n=e.length;t<n;++t)(39===(r=e.charCodeAt(t))&&i||34===r&&!i)&&(a+="\\"),a+=String.fromCharCode(r);return a+o}(t.value):"number"==typeof t.value?function(e){var t,n,r,i,s;if(e!=e)throw new Error("Numeric literal whose value is NaN");if(e<0||0===e&&1/e<0)throw new Error("Numeric literal whose value is negative");if(e===1/0)return u?"null":p?"1e400":"1e+400";if(t=""+e,!p||t.length<3)return t;for(n=t.indexOf("."),u||48!==t.charCodeAt(0)||1!==n||(n=0,t=t.slice(1)),r=t,t=t.replace("e+","e"),i=0,(s=r.indexOf("e"))>0&&(i=+r.slice(s+1),r=r.slice(0,s)),n>=0&&(i-=r.length-n-1,r=+(r.slice(0,n)+r.slice(n+1))+""),s=0;48===r.charCodeAt(r.length+s-1);)--s;return 0!==s&&(i-=s,r=r.slice(0,s)),0!==i&&(r+="e"+i),(r.length<t.length||c&&e>1e12&&Math.floor(e)===e&&(r="0x"+e.toString(16)).length<t.length)&&+r===e&&(t=r),t}(t.value):"boolean"==typeof t.value?t.value?"true":"false":t.regex?"/"+t.regex.pattern+"/"+t.regex.flags:function(e){var t,n,r,i,s,o,a,u;if(n=e.toString(),e.source){if(!(t=n.match(/\/([^\/]*)$/)))return n;for(r=t[1],n="",a=!1,u=!1,i=0,s=e.source.length;i<s;++i)o=e.source.charCodeAt(i),u?(n+=D(o,u),u=!1):(a?93===o&&(a=!1):47===o?n+="\\":91===o&&(a=!0),n+=D(o,u),u=92===o);return"/"+n+"/"+r}return n}(t.value)},GeneratorExpression:function(e,t,n){return this.ComprehensionExpression(e,t,n)},ComprehensionExpression:function(n,r,i){var s,o,a,u,p=this;return s=n.type===e.GeneratorExpression?["("]:["["],x.moz.comprehensionExpressionStartsWithAssignment&&(u=this.generateExpression(n.body,t.Assignment,k),s.push(u)),n.blocks&&j(function(){for(o=0,a=n.blocks.length;o<a;++o)u=p.generateExpression(n.blocks[o],t.Sequence,k),o>0||x.moz.comprehensionExpressionStartsWithAssignment?s=N(s,u):s.push(u)}),n.filter&&(s=N(s,"if"+m),u=this.generateExpression(n.filter,t.Sequence,k),s=N(s,["(",u,")"])),x.moz.comprehensionExpressionStartsWithAssignment||(u=this.generateExpression(n.body,t.Assignment,k),s=N(s,u)),s.push(n.type===e.GeneratorExpression?")":"]"),s},ComprehensionBlock:function(n,r,i){var s;return s=N(s=n.left.type===e.VariableDeclaration?[n.left.kind,O(),this.generateStatement(n.left.declarations[0],0)]:this.generateExpression(n.left,t.Call,k),n.of?"of":"in"),s=N(s,this.generateExpression(n.right,t.Sequence,k)),["for"+m+"(",s,")"]},SpreadElement:function(e,n,r){return["...",this.generateExpression(e.argument,t.Assignment,k)]},TaggedTemplateExpression:function(e,n,r){var i=3;return 2&r||(i=1),V([this.generateExpression(e.tag,t.Call,i),this.generateExpression(e.quasi,t.Primary,4)],t.TaggedTemplate,n)},TemplateElement:function(e,t,n){return e.value.raw},TemplateLiteral:function(e,n,r){var i,s,o;for(i=["`"],s=0,o=e.quasis.length;s<o;++s)i.push(this.generateExpression(e.quasis[s],t.Primary,k)),s+1<o&&(i.push("${"+m),i.push(this.generateExpression(e.expressions[s],t.Sequence,k)),i.push(m+"}"));return i.push("`"),i},ModuleSpecifier:function(e,t,n){return this.Literal(e,t,n)}},I(H.prototype,H.Expression),H.prototype.generateExpression=function(n,r,i){var s,o;return o=n.type||e.Property,x.verbatim&&n.hasOwnProperty(x.verbatim)?function(e,n){var r;return T("string"==typeof(r=e[x.verbatim])?V(G(r),t.Sequence,n):V(G(r.content),null!=r.precedence?r.precedence:t.Sequence,n),e)}(n,r):(s=this[o](n,r,i),x.comment&&(s=U(n,s)),T(s,n))},H.prototype.generateStatement=function(t,n){var r,i;return r=this[t.type](t,n),x.comment&&(r=U(t,r)),i=T(r).toString(),t.type!==e.Program||y||""!==g||"\n"!==i.charAt(i.length-1)||(r=E?T(r).replaceRight(/\s+$/,""):i.replace(/\s+$/,"")),T(r,t)},A={indent:{style:"",base:0},renumber:!0,hexadecimal:!0,quotes:"auto",escapeless:!0,compact:!0,parentheses:!1,semicolons:!1},q={indent:{style:"    ",base:0,adjustMultilineComment:!1},newline:"\n",space:" ",json:!1,renumber:!1,hexadecimal:!1,quotes:"single",escapeless:!1,compact:!1,parentheses:!0,semicolons:!0,safeConcatenation:!1,preserveBlankLines:!1},exports.version=require("./package.json").version,exports.generate=function(e,t){var n,i,s={indent:null,base:null,parse:null,comment:!1,format:{indent:{style:"    ",base:0,adjustMultilineComment:!1},newline:"\n",space:" ",json:!1,renumber:!1,hexadecimal:!1,quotes:"single",escapeless:!1,compact:!1,parentheses:!0,semicolons:!0,safeConcatenation:!1,preserveBlankLines:!1},moz:{comprehensionExpressionStartsWithAssignment:!1,starlessGenerator:!1},sourceMap:null,sourceMapRoot:null,sourceMapWithCode:!1,directive:!1,raw:!0,verbatim:null,sourceCode:null};return null!=t?("string"==typeof t.indent&&(s.format.indent.style=t.indent),"number"==typeof t.base&&(s.format.indent.base=t.base),t=M(s,t),a=t.format.indent.style,o="string"==typeof t.base?t.base:P(a,t.format.indent.base)):(a=(t=s).format.indent.style,o=P(a,t.format.indent.base)),u=t.format.json,p=t.format.renumber,c=!u&&t.format.hexadecimal,l=u?"double":t.format.quotes,h=t.format.escapeless,g=t.format.newline,m=t.format.space,t.format.compact&&(g=m=a=o=""),f=t.format.parentheses,d=t.format.semicolons,y=t.format.safeConcatenation,S=t.directive,b=u?null:t.parse,E=t.sourceMap,v=t.sourceCode,C=t.format.preserveBlankLines&&null!==v,x=t,E&&(r=exports.browser?global.sourceMap.SourceNode:require("source-map").SourceNode),n=J(e),E?(i=n.toStringWithSourceMap({file:t.file,sourceRoot:t.sourceMapRoot}),t.sourceContent&&i.map.setSourceContent(t.sourceMap,t.sourceContent),t.sourceMapWithCode?i:i.map.toString()):(i={code:n.toString(),map:null},t.sourceMapWithCode?i:i.code)},exports.attachComments=i.attachComments,exports.Precedence=M({},t),exports.browser=!1,exports.FORMAT_MINIFY=A,exports.FORMAT_DEFAULTS=q}();

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./package.json":13,"estraverse":15,"esutils":20,"source-map":12}],2:[function(require,module,exports){
var util=require("./util"),has=Object.prototype.hasOwnProperty,hasNativeMap="undefined"!=typeof Map;function ArraySet(){this._array=[],this._set=hasNativeMap?new Map:Object.create(null)}ArraySet.fromArray=function(t,r){for(var e=new ArraySet,a=0,i=t.length;a<i;a++)e.add(t[a],r);return e},ArraySet.prototype.size=function(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length},ArraySet.prototype.add=function(t,r){var e=hasNativeMap?t:util.toSetString(t),a=hasNativeMap?this.has(t):has.call(this._set,e),i=this._array.length;a&&!r||this._array.push(t),a||(hasNativeMap?this._set.set(t,i):this._set[e]=i)},ArraySet.prototype.has=function(t){if(hasNativeMap)return this._set.has(t);var r=util.toSetString(t);return has.call(this._set,r)},ArraySet.prototype.indexOf=function(t){if(hasNativeMap){var r=this._set.get(t);if(r>=0)return r}else{var e=util.toSetString(t);if(has.call(this._set,e))return this._set[e]}throw new Error('"'+t+'" is not in the set.')},ArraySet.prototype.at=function(t){if(t>=0&&t<this._array.length)return this._array[t];throw new Error("No element indexed by "+t)},ArraySet.prototype.toArray=function(){return this._array.slice()},exports.ArraySet=ArraySet;

},{"./util":11}],3:[function(require,module,exports){
var base64=require("./base64"),VLQ_BASE_SHIFT=5,VLQ_BASE=1<<VLQ_BASE_SHIFT,VLQ_BASE_MASK=VLQ_BASE-1,VLQ_CONTINUATION_BIT=VLQ_BASE;function toVLQSigned(e){return e<0?1+(-e<<1):0+(e<<1)}function fromVLQSigned(e){var r=e>>1;return 1==(1&e)?-r:r}exports.encode=function(e){var r,_="",n=toVLQSigned(e);do{r=n&VLQ_BASE_MASK,(n>>>=VLQ_BASE_SHIFT)>0&&(r|=VLQ_CONTINUATION_BIT),_+=base64.encode(r)}while(n>0);return _},exports.decode=function(e,r,_){var n,o,S=e.length,t=0,i=0;do{if(r>=S)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(o=base64.decode(e.charCodeAt(r++))))throw new Error("Invalid base64 digit: "+e.charAt(r-1));n=!!(o&VLQ_CONTINUATION_BIT),t+=(o&=VLQ_BASE_MASK)<<i,i+=VLQ_BASE_SHIFT}while(n);_.value=fromVLQSigned(t),_.rest=r};

},{"./base64":4}],4:[function(require,module,exports){
var intToCharMap="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");exports.encode=function(e){if(0<=e&&e<intToCharMap.length)return intToCharMap[e];throw new TypeError("Must be between 0 and 63: "+e)},exports.decode=function(e){return 65<=e&&e<=90?e-65:97<=e&&e<=122?e-97+26:48<=e&&e<=57?e-48+52:43==e?62:47==e?63:-1};

},{}],5:[function(require,module,exports){
function recursiveSearch(r,e,t,E,c,n){var o=Math.floor((e-r)/2)+r,s=c(t,E[o],!0);return 0===s?o:s>0?e-o>1?recursiveSearch(o,e,t,E,c,n):n==exports.LEAST_UPPER_BOUND?e<E.length?e:-1:o:o-r>1?recursiveSearch(r,o,t,E,c,n):n==exports.LEAST_UPPER_BOUND?o:r<0?-1:r}exports.GREATEST_LOWER_BOUND=1,exports.LEAST_UPPER_BOUND=2,exports.search=function(r,e,t,E){if(0===e.length)return-1;var c=recursiveSearch(-1,e.length,r,e,t,E||exports.GREATEST_LOWER_BOUND);if(c<0)return-1;for(;c-1>=0&&0===t(e[c],e[c-1],!0);)--c;return c};

},{}],6:[function(require,module,exports){
var util=require("./util");function generatedPositionAfter(t,e){var r=t.generatedLine,i=e.generatedLine,a=t.generatedColumn,n=e.generatedColumn;return i>r||i==r&&n>=a||util.compareByGeneratedPositionsInflated(t,e)<=0}function MappingList(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}MappingList.prototype.unsortedForEach=function(t,e){this._array.forEach(t,e)},MappingList.prototype.add=function(t){generatedPositionAfter(this._last,t)?(this._last=t,this._array.push(t)):(this._sorted=!1,this._array.push(t))},MappingList.prototype.toArray=function(){return this._sorted||(this._array.sort(util.compareByGeneratedPositionsInflated),this._sorted=!0),this._array},exports.MappingList=MappingList;

},{"./util":11}],7:[function(require,module,exports){
function swap(n,o,r){var t=n[o];n[o]=n[r],n[r]=t}function randomIntInRange(n,o){return Math.round(n+Math.random()*(o-n))}function doQuickSort(n,o,r,t){if(r<t){var a=r-1;swap(n,randomIntInRange(r,t),t);for(var u=n[t],i=r;i<t;i++)o(n[i],u)<=0&&swap(n,a+=1,i);swap(n,a+1,i);var c=a+1;doQuickSort(n,o,r,c-1),doQuickSort(n,o,c+1,t)}}exports.quickSort=function(n,o){doQuickSort(n,o,0,n.length-1)};

},{}],8:[function(require,module,exports){
var util=require("./util"),binarySearch=require("./binary-search"),ArraySet=require("./array-set").ArraySet,base64VLQ=require("./base64-vlq"),quickSort=require("./quick-sort").quickSort;function SourceMapConsumer(e,r){var n=e;return"string"==typeof e&&(n=util.parseSourceMapInput(e)),null!=n.sections?new IndexedSourceMapConsumer(n,r):new BasicSourceMapConsumer(n,r)}function BasicSourceMapConsumer(e,r){var n=e;"string"==typeof e&&(n=util.parseSourceMapInput(e));var o=util.getArg(n,"version"),t=util.getArg(n,"sources"),i=util.getArg(n,"names",[]),u=util.getArg(n,"sourceRoot",null),s=util.getArg(n,"sourcesContent",null),a=util.getArg(n,"mappings"),l=util.getArg(n,"file",null);if(o!=this._version)throw new Error("Unsupported version: "+o);u&&(u=util.normalize(u)),t=t.map(String).map(util.normalize).map(function(e){return u&&util.isAbsolute(u)&&util.isAbsolute(e)?util.relative(u,e):e}),this._names=ArraySet.fromArray(i.map(String),!0),this._sources=ArraySet.fromArray(t,!0),this._absoluteSources=this._sources.toArray().map(function(e){return util.computeSourceURL(u,e,r)}),this.sourceRoot=u,this.sourcesContent=s,this._mappings=a,this._sourceMapURL=r,this.file=l}function Mapping(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}function IndexedSourceMapConsumer(e,r){var n=e;"string"==typeof e&&(n=util.parseSourceMapInput(e));var o=util.getArg(n,"version"),t=util.getArg(n,"sections");if(o!=this._version)throw new Error("Unsupported version: "+o);this._sources=new ArraySet,this._names=new ArraySet;var i={line:-1,column:0};this._sections=t.map(function(e){if(e.url)throw new Error("Support for url field in sections not implemented.");var n=util.getArg(e,"offset"),o=util.getArg(n,"line"),t=util.getArg(n,"column");if(o<i.line||o===i.line&&t<i.column)throw new Error("Section offsets must be ordered and non-overlapping.");return i=n,{generatedOffset:{generatedLine:o+1,generatedColumn:t+1},consumer:new SourceMapConsumer(util.getArg(e,"map"),r)}})}SourceMapConsumer.fromSourceMap=function(e,r){return BasicSourceMapConsumer.fromSourceMap(e,r)},SourceMapConsumer.prototype._version=3,SourceMapConsumer.prototype.__generatedMappings=null,Object.defineProperty(SourceMapConsumer.prototype,"_generatedMappings",{configurable:!0,enumerable:!0,get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),SourceMapConsumer.prototype.__originalMappings=null,Object.defineProperty(SourceMapConsumer.prototype,"_originalMappings",{configurable:!0,enumerable:!0,get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),SourceMapConsumer.prototype._charIsMappingSeparator=function(e,r){var n=e.charAt(r);return";"===n||","===n},SourceMapConsumer.prototype._parseMappings=function(e,r){throw new Error("Subclasses must implement _parseMappings")},SourceMapConsumer.GENERATED_ORDER=1,SourceMapConsumer.ORIGINAL_ORDER=2,SourceMapConsumer.GREATEST_LOWER_BOUND=1,SourceMapConsumer.LEAST_UPPER_BOUND=2,SourceMapConsumer.prototype.eachMapping=function(e,r,n){var o,t=r||null;switch(n||SourceMapConsumer.GENERATED_ORDER){case SourceMapConsumer.GENERATED_ORDER:o=this._generatedMappings;break;case SourceMapConsumer.ORIGINAL_ORDER:o=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var i=this.sourceRoot;o.map(function(e){var r=null===e.source?null:this._sources.at(e.source);return{source:r=util.computeSourceURL(i,r,this._sourceMapURL),generatedLine:e.generatedLine,generatedColumn:e.generatedColumn,originalLine:e.originalLine,originalColumn:e.originalColumn,name:null===e.name?null:this._names.at(e.name)}},this).forEach(e,t)},SourceMapConsumer.prototype.allGeneratedPositionsFor=function(e){var r=util.getArg(e,"line"),n={source:util.getArg(e,"source"),originalLine:r,originalColumn:util.getArg(e,"column",0)};if(n.source=this._findSourceIndex(n.source),n.source<0)return[];var o=[],t=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,binarySearch.LEAST_UPPER_BOUND);if(t>=0){var i=this._originalMappings[t];if(void 0===e.column)for(var u=i.originalLine;i&&i.originalLine===u;)o.push({line:util.getArg(i,"generatedLine",null),column:util.getArg(i,"generatedColumn",null),lastColumn:util.getArg(i,"lastGeneratedColumn",null)}),i=this._originalMappings[++t];else for(var s=i.originalColumn;i&&i.originalLine===r&&i.originalColumn==s;)o.push({line:util.getArg(i,"generatedLine",null),column:util.getArg(i,"generatedColumn",null),lastColumn:util.getArg(i,"lastGeneratedColumn",null)}),i=this._originalMappings[++t]}return o},exports.SourceMapConsumer=SourceMapConsumer,BasicSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype),BasicSourceMapConsumer.prototype.consumer=SourceMapConsumer,BasicSourceMapConsumer.prototype._findSourceIndex=function(e){var r,n=e;if(null!=this.sourceRoot&&(n=util.relative(this.sourceRoot,n)),this._sources.has(n))return this._sources.indexOf(n);for(r=0;r<this._absoluteSources.length;++r)if(this._absoluteSources[r]==e)return r;return-1},BasicSourceMapConsumer.fromSourceMap=function(e,r){var n=Object.create(BasicSourceMapConsumer.prototype),o=n._names=ArraySet.fromArray(e._names.toArray(),!0),t=n._sources=ArraySet.fromArray(e._sources.toArray(),!0);n.sourceRoot=e._sourceRoot,n.sourcesContent=e._generateSourcesContent(n._sources.toArray(),n.sourceRoot),n.file=e._file,n._sourceMapURL=r,n._absoluteSources=n._sources.toArray().map(function(e){return util.computeSourceURL(n.sourceRoot,e,r)});for(var i=e._mappings.toArray().slice(),u=n.__generatedMappings=[],s=n.__originalMappings=[],a=0,l=i.length;a<l;a++){var c=i[a],p=new Mapping;p.generatedLine=c.generatedLine,p.generatedColumn=c.generatedColumn,c.source&&(p.source=t.indexOf(c.source),p.originalLine=c.originalLine,p.originalColumn=c.originalColumn,c.name&&(p.name=o.indexOf(c.name)),s.push(p)),u.push(p)}return quickSort(n.__originalMappings,util.compareByOriginalPositions),n},BasicSourceMapConsumer.prototype._version=3,Object.defineProperty(BasicSourceMapConsumer.prototype,"sources",{get:function(){return this._absoluteSources.slice()}}),BasicSourceMapConsumer.prototype._parseMappings=function(e,r){for(var n,o,t,i,u,s=1,a=0,l=0,c=0,p=0,g=0,m=e.length,h=0,d={},f={},_=[],C=[];h<m;)if(";"===e.charAt(h))s++,h++,a=0;else if(","===e.charAt(h))h++;else{for((n=new Mapping).generatedLine=s,i=h;i<m&&!this._charIsMappingSeparator(e,i);i++);if(t=d[o=e.slice(h,i)])h+=o.length;else{for(t=[];h<i;)base64VLQ.decode(e,h,f),u=f.value,h=f.rest,t.push(u);if(2===t.length)throw new Error("Found a source, but no line and column");if(3===t.length)throw new Error("Found a source and line, but no column");d[o]=t}n.generatedColumn=a+t[0],a=n.generatedColumn,t.length>1&&(n.source=p+t[1],p+=t[1],n.originalLine=l+t[2],l=n.originalLine,n.originalLine+=1,n.originalColumn=c+t[3],c=n.originalColumn,t.length>4&&(n.name=g+t[4],g+=t[4])),C.push(n),"number"==typeof n.originalLine&&_.push(n)}quickSort(C,util.compareByGeneratedPositionsDeflated),this.__generatedMappings=C,quickSort(_,util.compareByOriginalPositions),this.__originalMappings=_},BasicSourceMapConsumer.prototype._findMapping=function(e,r,n,o,t,i){if(e[n]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+e[n]);if(e[o]<0)throw new TypeError("Column must be greater than or equal to 0, got "+e[o]);return binarySearch.search(e,r,t,i)},BasicSourceMapConsumer.prototype.computeColumnSpans=function(){for(var e=0;e<this._generatedMappings.length;++e){var r=this._generatedMappings[e];if(e+1<this._generatedMappings.length){var n=this._generatedMappings[e+1];if(r.generatedLine===n.generatedLine){r.lastGeneratedColumn=n.generatedColumn-1;continue}}r.lastGeneratedColumn=1/0}},BasicSourceMapConsumer.prototype.originalPositionFor=function(e){var r={generatedLine:util.getArg(e,"line"),generatedColumn:util.getArg(e,"column")},n=this._findMapping(r,this._generatedMappings,"generatedLine","generatedColumn",util.compareByGeneratedPositionsDeflated,util.getArg(e,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(n>=0){var o=this._generatedMappings[n];if(o.generatedLine===r.generatedLine){var t=util.getArg(o,"source",null);null!==t&&(t=this._sources.at(t),t=util.computeSourceURL(this.sourceRoot,t,this._sourceMapURL));var i=util.getArg(o,"name",null);return null!==i&&(i=this._names.at(i)),{source:t,line:util.getArg(o,"originalLine",null),column:util.getArg(o,"originalColumn",null),name:i}}}return{source:null,line:null,column:null,name:null}},BasicSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some(function(e){return null==e}))},BasicSourceMapConsumer.prototype.sourceContentFor=function(e,r){if(!this.sourcesContent)return null;var n=this._findSourceIndex(e);if(n>=0)return this.sourcesContent[n];var o,t=e;if(null!=this.sourceRoot&&(t=util.relative(this.sourceRoot,t)),null!=this.sourceRoot&&(o=util.urlParse(this.sourceRoot))){var i=t.replace(/^file:\/\//,"");if("file"==o.scheme&&this._sources.has(i))return this.sourcesContent[this._sources.indexOf(i)];if((!o.path||"/"==o.path)&&this._sources.has("/"+t))return this.sourcesContent[this._sources.indexOf("/"+t)]}if(r)return null;throw new Error('"'+t+'" is not in the SourceMap.')},BasicSourceMapConsumer.prototype.generatedPositionFor=function(e){var r=util.getArg(e,"source");if((r=this._findSourceIndex(r))<0)return{line:null,column:null,lastColumn:null};var n={source:r,originalLine:util.getArg(e,"line"),originalColumn:util.getArg(e,"column")},o=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,util.getArg(e,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(o>=0){var t=this._originalMappings[o];if(t.source===n.source)return{line:util.getArg(t,"generatedLine",null),column:util.getArg(t,"generatedColumn",null),lastColumn:util.getArg(t,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}},exports.BasicSourceMapConsumer=BasicSourceMapConsumer,IndexedSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype),IndexedSourceMapConsumer.prototype.constructor=SourceMapConsumer,IndexedSourceMapConsumer.prototype._version=3,Object.defineProperty(IndexedSourceMapConsumer.prototype,"sources",{get:function(){for(var e=[],r=0;r<this._sections.length;r++)for(var n=0;n<this._sections[r].consumer.sources.length;n++)e.push(this._sections[r].consumer.sources[n]);return e}}),IndexedSourceMapConsumer.prototype.originalPositionFor=function(e){var r={generatedLine:util.getArg(e,"line"),generatedColumn:util.getArg(e,"column")},n=binarySearch.search(r,this._sections,function(e,r){var n=e.generatedLine-r.generatedOffset.generatedLine;return n||e.generatedColumn-r.generatedOffset.generatedColumn}),o=this._sections[n];return o?o.consumer.originalPositionFor({line:r.generatedLine-(o.generatedOffset.generatedLine-1),column:r.generatedColumn-(o.generatedOffset.generatedLine===r.generatedLine?o.generatedOffset.generatedColumn-1:0),bias:e.bias}):{source:null,line:null,column:null,name:null}},IndexedSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return this._sections.every(function(e){return e.consumer.hasContentsOfAllSources()})},IndexedSourceMapConsumer.prototype.sourceContentFor=function(e,r){for(var n=0;n<this._sections.length;n++){var o=this._sections[n].consumer.sourceContentFor(e,!0);if(o)return o}if(r)return null;throw new Error('"'+e+'" is not in the SourceMap.')},IndexedSourceMapConsumer.prototype.generatedPositionFor=function(e){for(var r=0;r<this._sections.length;r++){var n=this._sections[r];if(-1!==n.consumer._findSourceIndex(util.getArg(e,"source"))){var o=n.consumer.generatedPositionFor(e);if(o)return{line:o.line+(n.generatedOffset.generatedLine-1),column:o.column+(n.generatedOffset.generatedLine===o.line?n.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},IndexedSourceMapConsumer.prototype._parseMappings=function(e,r){this.__generatedMappings=[],this.__originalMappings=[];for(var n=0;n<this._sections.length;n++)for(var o=this._sections[n],t=o.consumer._generatedMappings,i=0;i<t.length;i++){var u=t[i],s=o.consumer._sources.at(u.source);s=util.computeSourceURL(o.consumer.sourceRoot,s,this._sourceMapURL),this._sources.add(s),s=this._sources.indexOf(s);var a=null;u.name&&(a=o.consumer._names.at(u.name),this._names.add(a),a=this._names.indexOf(a));var l={source:s,generatedLine:u.generatedLine+(o.generatedOffset.generatedLine-1),generatedColumn:u.generatedColumn+(o.generatedOffset.generatedLine===u.generatedLine?o.generatedOffset.generatedColumn-1:0),originalLine:u.originalLine,originalColumn:u.originalColumn,name:a};this.__generatedMappings.push(l),"number"==typeof l.originalLine&&this.__originalMappings.push(l)}quickSort(this.__generatedMappings,util.compareByGeneratedPositionsDeflated),quickSort(this.__originalMappings,util.compareByOriginalPositions)},exports.IndexedSourceMapConsumer=IndexedSourceMapConsumer;

},{"./array-set":2,"./base64-vlq":3,"./binary-search":5,"./quick-sort":7,"./util":11}],9:[function(require,module,exports){
var base64VLQ=require("./base64-vlq"),util=require("./util"),ArraySet=require("./array-set").ArraySet,MappingList=require("./mapping-list").MappingList;function SourceMapGenerator(e){e||(e={}),this._file=util.getArg(e,"file",null),this._sourceRoot=util.getArg(e,"sourceRoot",null),this._skipValidation=util.getArg(e,"skipValidation",!1),this._sources=new ArraySet,this._names=new ArraySet,this._mappings=new MappingList,this._sourcesContents=null}SourceMapGenerator.prototype._version=3,SourceMapGenerator.fromSourceMap=function(e){var n=e.sourceRoot,r=new SourceMapGenerator({file:e.file,sourceRoot:n});return e.eachMapping(function(e){var t={generated:{line:e.generatedLine,column:e.generatedColumn}};null!=e.source&&(t.source=e.source,null!=n&&(t.source=util.relative(n,t.source)),t.original={line:e.originalLine,column:e.originalColumn},null!=e.name&&(t.name=e.name)),r.addMapping(t)}),e.sources.forEach(function(t){var o=t;null!==n&&(o=util.relative(n,t)),r._sources.has(o)||r._sources.add(o);var i=e.sourceContentFor(t);null!=i&&r.setSourceContent(t,i)}),r},SourceMapGenerator.prototype.addMapping=function(e){var n=util.getArg(e,"generated"),r=util.getArg(e,"original",null),t=util.getArg(e,"source",null),o=util.getArg(e,"name",null);this._skipValidation||this._validateMapping(n,r,t,o),null!=t&&(t=String(t),this._sources.has(t)||this._sources.add(t)),null!=o&&(o=String(o),this._names.has(o)||this._names.add(o)),this._mappings.add({generatedLine:n.line,generatedColumn:n.column,originalLine:null!=r&&r.line,originalColumn:null!=r&&r.column,source:t,name:o})},SourceMapGenerator.prototype.setSourceContent=function(e,n){var r=e;null!=this._sourceRoot&&(r=util.relative(this._sourceRoot,r)),null!=n?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[util.toSetString(r)]=n):this._sourcesContents&&(delete this._sourcesContents[util.toSetString(r)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},SourceMapGenerator.prototype.applySourceMap=function(e,n,r){var t=n;if(null==n){if(null==e.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');t=e.file}var o=this._sourceRoot;null!=o&&(t=util.relative(o,t));var i=new ArraySet,s=new ArraySet;this._mappings.unsortedForEach(function(n){if(n.source===t&&null!=n.originalLine){var l=e.originalPositionFor({line:n.originalLine,column:n.originalColumn});null!=l.source&&(n.source=l.source,null!=r&&(n.source=util.join(r,n.source)),null!=o&&(n.source=util.relative(o,n.source)),n.originalLine=l.line,n.originalColumn=l.column,null!=l.name&&(n.name=l.name))}var u=n.source;null==u||i.has(u)||i.add(u);var a=n.name;null==a||s.has(a)||s.add(a)},this),this._sources=i,this._names=s,e.sources.forEach(function(n){var t=e.sourceContentFor(n);null!=t&&(null!=r&&(n=util.join(r,n)),null!=o&&(n=util.relative(o,n)),this.setSourceContent(n,t))},this)},SourceMapGenerator.prototype._validateMapping=function(e,n,r,t){if(n&&"number"!=typeof n.line&&"number"!=typeof n.column)throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if((!(e&&"line"in e&&"column"in e&&e.line>0&&e.column>=0)||n||r||t)&&!(e&&"line"in e&&"column"in e&&n&&"line"in n&&"column"in n&&e.line>0&&e.column>=0&&n.line>0&&n.column>=0&&r))throw new Error("Invalid mapping: "+JSON.stringify({generated:e,source:r,original:n,name:t}))},SourceMapGenerator.prototype._serializeMappings=function(){for(var e,n,r,t,o=0,i=1,s=0,l=0,u=0,a=0,c="",p=this._mappings.toArray(),g=0,h=p.length;g<h;g++){if(e="",(n=p[g]).generatedLine!==i)for(o=0;n.generatedLine!==i;)e+=";",i++;else if(g>0){if(!util.compareByGeneratedPositionsInflated(n,p[g-1]))continue;e+=","}e+=base64VLQ.encode(n.generatedColumn-o),o=n.generatedColumn,null!=n.source&&(t=this._sources.indexOf(n.source),e+=base64VLQ.encode(t-a),a=t,e+=base64VLQ.encode(n.originalLine-1-l),l=n.originalLine-1,e+=base64VLQ.encode(n.originalColumn-s),s=n.originalColumn,null!=n.name&&(r=this._names.indexOf(n.name),e+=base64VLQ.encode(r-u),u=r)),c+=e}return c},SourceMapGenerator.prototype._generateSourcesContent=function(e,n){return e.map(function(e){if(!this._sourcesContents)return null;null!=n&&(e=util.relative(n,e));var r=util.toSetString(e);return Object.prototype.hasOwnProperty.call(this._sourcesContents,r)?this._sourcesContents[r]:null},this)},SourceMapGenerator.prototype.toJSON=function(){var e={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(e.file=this._file),null!=this._sourceRoot&&(e.sourceRoot=this._sourceRoot),this._sourcesContents&&(e.sourcesContent=this._generateSourcesContent(e.sources,e.sourceRoot)),e},SourceMapGenerator.prototype.toString=function(){return JSON.stringify(this.toJSON())},exports.SourceMapGenerator=SourceMapGenerator;

},{"./array-set":2,"./base64-vlq":3,"./mapping-list":6,"./util":11}],10:[function(require,module,exports){
var SourceMapGenerator=require("./source-map-generator").SourceMapGenerator,util=require("./util"),REGEX_NEWLINE=/(\r?\n)/,NEWLINE_CODE=10,isSourceNode="$$$isSourceNode$$$";function SourceNode(e,n,o,r,t){this.children=[],this.sourceContents={},this.line=null==e?null:e,this.column=null==n?null:n,this.source=null==o?null:o,this.name=null==t?null:t,this[isSourceNode]=!0,null!=r&&this.add(r)}SourceNode.fromStringWithSourceMap=function(e,n,o){var r=new SourceNode,t=e.split(REGEX_NEWLINE),i=0,u=function(){return e()+(e()||"");function e(){return i<t.length?t[i++]:void 0}},l=1,c=0,s=null;return n.eachMapping(function(e){if(null!==s){if(!(l<e.generatedLine)){var n=(o=t[i]||"").substr(0,e.generatedColumn-c);return t[i]=o.substr(e.generatedColumn-c),c=e.generatedColumn,a(s,n),void(s=e)}a(s,u()),l++,c=0}for(;l<e.generatedLine;)r.add(u()),l++;if(c<e.generatedColumn){var o=t[i]||"";r.add(o.substr(0,e.generatedColumn)),t[i]=o.substr(e.generatedColumn),c=e.generatedColumn}s=e},this),i<t.length&&(s&&a(s,u()),r.add(t.splice(i).join(""))),n.sources.forEach(function(e){var t=n.sourceContentFor(e);null!=t&&(null!=o&&(e=util.join(o,e)),r.setSourceContent(e,t))}),r;function a(e,n){if(null===e||void 0===e.source)r.add(n);else{var t=o?util.join(o,e.source):e.source;r.add(new SourceNode(e.originalLine,e.originalColumn,t,n,e.name))}}},SourceNode.prototype.add=function(e){if(Array.isArray(e))e.forEach(function(e){this.add(e)},this);else{if(!e[isSourceNode]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&this.children.push(e)}return this},SourceNode.prototype.prepend=function(e){if(Array.isArray(e))for(var n=e.length-1;n>=0;n--)this.prepend(e[n]);else{if(!e[isSourceNode]&&"string"!=typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);this.children.unshift(e)}return this},SourceNode.prototype.walk=function(e){for(var n,o=0,r=this.children.length;o<r;o++)(n=this.children[o])[isSourceNode]?n.walk(e):""!==n&&e(n,{source:this.source,line:this.line,column:this.column,name:this.name})},SourceNode.prototype.join=function(e){var n,o,r=this.children.length;if(r>0){for(n=[],o=0;o<r-1;o++)n.push(this.children[o]),n.push(e);n.push(this.children[o]),this.children=n}return this},SourceNode.prototype.replaceRight=function(e,n){var o=this.children[this.children.length-1];return o[isSourceNode]?o.replaceRight(e,n):"string"==typeof o?this.children[this.children.length-1]=o.replace(e,n):this.children.push("".replace(e,n)),this},SourceNode.prototype.setSourceContent=function(e,n){this.sourceContents[util.toSetString(e)]=n},SourceNode.prototype.walkSourceContents=function(e){for(var n=0,o=this.children.length;n<o;n++)this.children[n][isSourceNode]&&this.children[n].walkSourceContents(e);var r=Object.keys(this.sourceContents);for(n=0,o=r.length;n<o;n++)e(util.fromSetString(r[n]),this.sourceContents[r[n]])},SourceNode.prototype.toString=function(){var e="";return this.walk(function(n){e+=n}),e},SourceNode.prototype.toStringWithSourceMap=function(e){var n={code:"",line:1,column:0},o=new SourceMapGenerator(e),r=!1,t=null,i=null,u=null,l=null;return this.walk(function(e,c){n.code+=e,null!==c.source&&null!==c.line&&null!==c.column?(t===c.source&&i===c.line&&u===c.column&&l===c.name||o.addMapping({source:c.source,original:{line:c.line,column:c.column},generated:{line:n.line,column:n.column},name:c.name}),t=c.source,i=c.line,u=c.column,l=c.name,r=!0):r&&(o.addMapping({generated:{line:n.line,column:n.column}}),t=null,r=!1);for(var s=0,a=e.length;s<a;s++)e.charCodeAt(s)===NEWLINE_CODE?(n.line++,n.column=0,s+1===a?(t=null,r=!1):r&&o.addMapping({source:c.source,original:{line:c.line,column:c.column},generated:{line:n.line,column:n.column},name:c.name})):n.column++}),this.walkSourceContents(function(e,n){o.setSourceContent(e,n)}),{code:n.code,map:o}},exports.SourceNode=SourceNode;

},{"./source-map-generator":9,"./util":11}],11:[function(require,module,exports){
function getArg(e,r,t){if(r in e)return e[r];if(3===arguments.length)return t;throw new Error('"'+r+'" is a required argument.')}exports.getArg=getArg;var urlRegexp=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,dataUrlRegexp=/^data:.+\,.+$/;function urlParse(e){var r=e.match(urlRegexp);return r?{scheme:r[1],auth:r[2],host:r[3],port:r[4],path:r[5]}:null}function urlGenerate(e){var r="";return e.scheme&&(r+=e.scheme+":"),r+="//",e.auth&&(r+=e.auth+"@"),e.host&&(r+=e.host),e.port&&(r+=":"+e.port),e.path&&(r+=e.path),r}function normalize(e){var r=e,t=urlParse(e);if(t){if(!t.path)return e;r=t.path}for(var n,o=exports.isAbsolute(r),a=r.split(/\/+/),i=0,u=a.length-1;u>=0;u--)"."===(n=a[u])?a.splice(u,1):".."===n?i++:i>0&&(""===n?(a.splice(u+1,i),i=0):(a.splice(u,2),i--));return""===(r=a.join("/"))&&(r=o?"/":"."),t?(t.path=r,urlGenerate(t)):r}function join(e,r){""===e&&(e="."),""===r&&(r=".");var t=urlParse(r),n=urlParse(e);if(n&&(e=n.path||"/"),t&&!t.scheme)return n&&(t.scheme=n.scheme),urlGenerate(t);if(t||r.match(dataUrlRegexp))return r;if(n&&!n.host&&!n.path)return n.host=r,urlGenerate(n);var o="/"===r.charAt(0)?r:normalize(e.replace(/\/+$/,"")+"/"+r);return n?(n.path=o,urlGenerate(n)):o}function relative(e,r){""===e&&(e="."),e=e.replace(/\/$/,"");for(var t=0;0!==r.indexOf(e+"/");){var n=e.lastIndexOf("/");if(n<0)return r;if((e=e.slice(0,n)).match(/^([^\/]+:\/)?\/*$/))return r;++t}return Array(t+1).join("../")+r.substr(e.length+1)}exports.urlParse=urlParse,exports.urlGenerate=urlGenerate,exports.normalize=normalize,exports.join=join,exports.isAbsolute=function(e){return"/"===e.charAt(0)||urlRegexp.test(e)},exports.relative=relative;var supportsNullProto=!("__proto__"in Object.create(null));function identity(e){return e}function toSetString(e){return isProtoString(e)?"$"+e:e}function fromSetString(e){return isProtoString(e)?e.slice(1):e}function isProtoString(e){if(!e)return!1;var r=e.length;if(r<9)return!1;if(95!==e.charCodeAt(r-1)||95!==e.charCodeAt(r-2)||111!==e.charCodeAt(r-3)||116!==e.charCodeAt(r-4)||111!==e.charCodeAt(r-5)||114!==e.charCodeAt(r-6)||112!==e.charCodeAt(r-7)||95!==e.charCodeAt(r-8)||95!==e.charCodeAt(r-9))return!1;for(var t=r-10;t>=0;t--)if(36!==e.charCodeAt(t))return!1;return!0}function compareByOriginalPositions(e,r,t){var n=strcmp(e.source,r.source);return 0!==n?n:0!==(n=e.originalLine-r.originalLine)?n:0!==(n=e.originalColumn-r.originalColumn)||t?n:0!==(n=e.generatedColumn-r.generatedColumn)?n:0!==(n=e.generatedLine-r.generatedLine)?n:strcmp(e.name,r.name)}function compareByGeneratedPositionsDeflated(e,r,t){var n=e.generatedLine-r.generatedLine;return 0!==n?n:0!==(n=e.generatedColumn-r.generatedColumn)||t?n:0!==(n=strcmp(e.source,r.source))?n:0!==(n=e.originalLine-r.originalLine)?n:0!==(n=e.originalColumn-r.originalColumn)?n:strcmp(e.name,r.name)}function strcmp(e,r){return e===r?0:null===e?1:null===r?-1:e>r?1:-1}function compareByGeneratedPositionsInflated(e,r){var t=e.generatedLine-r.generatedLine;return 0!==t?t:0!==(t=e.generatedColumn-r.generatedColumn)?t:0!==(t=strcmp(e.source,r.source))?t:0!==(t=e.originalLine-r.originalLine)?t:0!==(t=e.originalColumn-r.originalColumn)?t:strcmp(e.name,r.name)}function parseSourceMapInput(e){return JSON.parse(e.replace(/^\)]}'[^\n]*\n/,""))}function computeSourceURL(e,r,t){if(r=r||"",e&&("/"!==e[e.length-1]&&"/"!==r[0]&&(e+="/"),r=e+r),t){var n=urlParse(t);if(!n)throw new Error("sourceMapURL could not be parsed");if(n.path){var o=n.path.lastIndexOf("/");o>=0&&(n.path=n.path.substring(0,o+1))}r=join(urlGenerate(n),r)}return normalize(r)}exports.toSetString=supportsNullProto?identity:toSetString,exports.fromSetString=supportsNullProto?identity:fromSetString,exports.compareByOriginalPositions=compareByOriginalPositions,exports.compareByGeneratedPositionsDeflated=compareByGeneratedPositionsDeflated,exports.compareByGeneratedPositionsInflated=compareByGeneratedPositionsInflated,exports.parseSourceMapInput=parseSourceMapInput,exports.computeSourceURL=computeSourceURL;

},{}],12:[function(require,module,exports){
exports.SourceMapGenerator=require("./lib/source-map-generator").SourceMapGenerator,exports.SourceMapConsumer=require("./lib/source-map-consumer").SourceMapConsumer,exports.SourceNode=require("./lib/source-node").SourceNode;

},{"./lib/source-map-consumer":8,"./lib/source-map-generator":9,"./lib/source-node":10}],13:[function(require,module,exports){
module.exports={
  "_args": [
    [
      {
        "raw": "escodegen",
        "scope": null,
        "escapedName": "escodegen",
        "name": "escodegen",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Hood\\WebstormProjects\\Steenrod"
    ]
  ],
  "_from": "escodegen@latest",
  "_id": "escodegen@1.11.0",
  "_inCache": true,
  "_location": "/escodegen",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/escodegen_1.11.0_1531587077447_0.5928377937540485"
  },
  "_npmUser": {
    "name": "michaelficarra",
    "email": "npm@michael.ficarra.me"
  },
  "_npmVersion": "6.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "escodegen",
    "scope": null,
    "escapedName": "escodegen",
    "name": "escodegen",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/jsdom"
  ],
  "_resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.11.0.tgz",
  "_shasum": "b27a9389481d5bfd5bec76f7bb1eb3f8f4556589",
  "_shrinkwrap": null,
  "_spec": "escodegen",
  "_where": "C:\\Users\\Hood\\WebstormProjects\\Steenrod",
  "bin": {
    "esgenerate": "./bin/esgenerate.js",
    "escodegen": "./bin/escodegen.js"
  },
  "bugs": {
    "url": "https://github.com/estools/escodegen/issues"
  },
  "dependencies": {
    "esprima": "^3.1.3",
    "estraverse": "^4.2.0",
    "esutils": "^2.0.2",
    "optionator": "^0.8.1",
    "source-map": "~0.6.1"
  },
  "description": "ECMAScript code generator",
  "devDependencies": {
    "acorn": "^4.0.4",
    "bluebird": "^3.4.7",
    "bower-registry-client": "^1.0.0",
    "chai": "^3.5.0",
    "commonjs-everywhere": "^0.9.7",
    "gulp": "^3.8.10",
    "gulp-eslint": "^3.0.1",
    "gulp-mocha": "^3.0.1",
    "semver": "^5.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-IeMV45ReixHS53K/OmfKAIztN/igDHzTJUhZM3k1jMhIZWjk45SMwAtBsEXiJp3vSPmTcu6CXn7mDvFHRN66fw==",
    "shasum": "b27a9389481d5bfd5bec76f7bb1eb3f8f4556589",
    "tarball": "https://registry.npmjs.org/escodegen/-/escodegen-1.11.0.tgz",
    "fileCount": 6,
    "unpackedSize": 106127,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbSioFCRA9TVsSAnZWagAAK3YP/2FxhiCn16ZHrOPcHm/B\ncHz2/nkx3LigCezwo1/sHjwMelxas2Lq1AyJzwKCYYrPT8AtqqOu8uAPtCAo\nDrA8ZDTgva/yQe4onMA1IdWvyGiESxprZ6eZ/B5fgSS5/tyV8eOAc1172iQe\nyGdKAuaN0OUkPGeTxMCLQoHZHJv87I6S47D1GM1/xYNnQ69vb1Vves1bcpp4\nuFhtT9QtDEqus44ELJliiV7Efhkh4yVQGqG5xBo5dxlFL9l3LY/5Y+eNPo3O\nbcKSkHX4sxCF+SQ4B32aRKrTCzlfm6WSvMxNv6eJCidwTh7TKi6gTCBA/YK2\n6l5288G+L7oaewQIfjNfL8iRPT2MMGCw320Vv1Eu+S7uCJNUtq0Ufj/FdrKI\nN0AdkFoTZXcihaPoiO177iu3rm5SJR5HM+hTpcOtlrc2vcvNxIAdDU/Pc3Mw\nfOhF/WSKM8DhtcWeZqXCJ9xImNpRP9ld9YRV7+SZ5XK65YAtoROGOer6n3cW\nXwVfkV0V6l48SDjnAXI4PfALY5lZWR23OHZP/zwVXmOwSB42snMYuLWy1Z7V\nEcPB/MAt7QIN482wKTZ+wLeJ4XTzryWHG8qUV6ZUwwj/XpawjfomIbmXA6+m\nLm6Ifjv+F7ygAu21VbCxS/MruHVrYCk7JGwgTVyfgyZRZWVvmRFTWVey8rLi\ncRa2\r\n=XpG1\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0"
  },
  "files": [
    "LICENSE.BSD",
    "README.md",
    "bin",
    "escodegen.js",
    "package.json"
  ],
  "gitHead": "20a0d3748a25653eb463d9155bbaa3239883717a",
  "homepage": "http://github.com/estools/escodegen",
  "license": "BSD-2-Clause",
  "main": "escodegen.js",
  "maintainers": [
    {
      "name": "constellation",
      "email": "utatane.tea@gmail.com"
    },
    {
      "name": "michaelficarra",
      "email": "npm@michael.ficarra.me"
    }
  ],
  "name": "escodegen",
  "optionalDependencies": {
    "source-map": "~0.6.1"
  },
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/estools/escodegen.git"
  },
  "scripts": {
    "build": "cjsify -a path: tools/entry-point.js > escodegen.browser.js",
    "build-min": "cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js",
    "lint": "gulp lint",
    "release": "node tools/release.js",
    "test": "gulp travis",
    "unit-test": "gulp test"
  },
  "version": "1.11.0"
}

},{}],14:[function(require,module,exports){
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.esprima=t():e.esprima=t()}(this,function(){return function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={exports:{},id:s,loaded:!1};return e[s].call(r.exports,r,r.exports,i),r.loaded=!0,r.exports}return i.m=e,i.c=t,i.p="",i(0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(1),r=i(3),n=i(8),a=i(15);function o(e,t,i){var a=null,o=function(e,t){i&&i(e,t),a&&a.visit(e,t)},u="function"==typeof i?o:null,h=!1;if(t){h="boolean"==typeof t.comment&&t.comment;var c="boolean"==typeof t.attachComment&&t.attachComment;(h||c)&&((a=new s.CommentHandler).attach=c,t.comment=!0,u=o)}var l,p=!1;t&&"string"==typeof t.sourceType&&(p="module"===t.sourceType),l=t&&"boolean"==typeof t.jsx&&t.jsx?new r.JSXParser(e,t,u):new n.Parser(e,t,u);var d=p?l.parseModule():l.parseScript();return h&&a&&(d.comments=a.comments),l.config.tokens&&(d.tokens=l.tokens),l.config.tolerant&&(d.errors=l.errorHandler.errors),d}t.parse=o,t.parseModule=function(e,t,i){var s=t||{};return s.sourceType="module",o(e,s,i)},t.parseScript=function(e,t,i){var s=t||{};return s.sourceType="script",o(e,s,i)},t.tokenize=function(e,t,i){var s,r=new a.Tokenizer(e,t);s=[];try{for(;;){var n=r.getNextToken();if(!n)break;i&&(n=i(n)),s.push(n)}}catch(e){r.errorHandler.tolerate(e)}return r.errorHandler.tolerant&&(s.errors=r.errors()),s};var u=i(2);t.Syntax=u.Syntax,t.version="4.0.1"},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(2),r=function(){function e(){this.attach=!1,this.comments=[],this.stack=[],this.leading=[],this.trailing=[]}return e.prototype.insertInnerComments=function(e,t){if(e.type===s.Syntax.BlockStatement&&0===e.body.length){for(var i=[],r=this.leading.length-1;r>=0;--r){var n=this.leading[r];t.end.offset>=n.start&&(i.unshift(n.comment),this.leading.splice(r,1),this.trailing.splice(r,1))}i.length&&(e.innerComments=i)}},e.prototype.findTrailingComments=function(e){var t=[];if(this.trailing.length>0){for(var i=this.trailing.length-1;i>=0;--i){var s=this.trailing[i];s.start>=e.end.offset&&t.unshift(s.comment)}return this.trailing.length=0,t}var r=this.stack[this.stack.length-1];if(r&&r.node.trailingComments){var n=r.node.trailingComments[0];n&&n.range[0]>=e.end.offset&&(t=r.node.trailingComments,delete r.node.trailingComments)}return t},e.prototype.findLeadingComments=function(e){for(var t,i=[];this.stack.length>0;){if(!((n=this.stack[this.stack.length-1])&&n.start>=e.start.offset))break;t=n.node,this.stack.pop()}if(t){for(var s=(t.leadingComments?t.leadingComments.length:0)-1;s>=0;--s){var r=t.leadingComments[s];r.range[1]<=e.start.offset&&(i.unshift(r),t.leadingComments.splice(s,1))}return t.leadingComments&&0===t.leadingComments.length&&delete t.leadingComments,i}for(s=this.leading.length-1;s>=0;--s){var n;(n=this.leading[s]).start<=e.start.offset&&(i.unshift(n.comment),this.leading.splice(s,1))}return i},e.prototype.visitNode=function(e,t){if(!(e.type===s.Syntax.Program&&e.body.length>0)){this.insertInnerComments(e,t);var i=this.findTrailingComments(t),r=this.findLeadingComments(t);r.length>0&&(e.leadingComments=r),i.length>0&&(e.trailingComments=i),this.stack.push({node:e,start:t.start.offset})}},e.prototype.visitComment=function(e,t){var i="L"===e.type[0]?"Line":"Block",s={type:i,value:e.value};if(e.range&&(s.range=e.range),e.loc&&(s.loc=e.loc),this.comments.push(s),this.attach){var r={comment:{type:i,value:e.value,range:[t.start.offset,t.end.offset]},start:t.start.offset};e.loc&&(r.comment.loc=e.loc),e.type=i,this.leading.push(r),this.trailing.push(r)}},e.prototype.visit=function(e,t){"LineComment"===e.type?this.visitComment(e,t):"BlockComment"===e.type?this.visitComment(e,t):this.attach&&this.visitNode(e,t)},e}();t.CommentHandler=r},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForOfStatement:"ForOfStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"}},function(e,t,i){"use strict";var s,r=this&&this.__extends||(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});Object.defineProperty(t,"__esModule",{value:!0});var n=i(4),a=i(5),o=i(6),u=i(7),h=i(8),c=i(13),l=i(14);function p(e){var t;switch(e.type){case o.JSXSyntax.JSXIdentifier:t=e.name;break;case o.JSXSyntax.JSXNamespacedName:var i=e;t=p(i.namespace)+":"+p(i.name);break;case o.JSXSyntax.JSXMemberExpression:var s=e;t=p(s.object)+"."+p(s.property)}return t}c.TokenName[100]="JSXIdentifier",c.TokenName[101]="JSXText";var d=function(e){function t(t,i,s){return e.call(this,t,i,s)||this}return r(t,e),t.prototype.parsePrimaryExpression=function(){return this.match("<")?this.parseJSXRoot():e.prototype.parsePrimaryExpression.call(this)},t.prototype.startJSX=function(){this.scanner.index=this.startMarker.index,this.scanner.lineNumber=this.startMarker.line,this.scanner.lineStart=this.startMarker.index-this.startMarker.column},t.prototype.finishJSX=function(){this.nextToken()},t.prototype.reenterJSX=function(){this.startJSX(),this.expectJSX("}"),this.config.tokens&&this.tokens.pop()},t.prototype.createJSXNode=function(){return this.collectComments(),{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.scanXHTMLEntity=function(e){for(var t="&",i=!0,s=!1,r=!1,a=!1;!this.scanner.eof()&&i&&!s;){var o=this.scanner.source[this.scanner.index];if(o===e)break;if(s=";"===o,t+=o,++this.scanner.index,!s)switch(t.length){case 2:r="#"===o;break;case 3:r&&(i=(a="x"===o)||n.Character.isDecimalDigit(o.charCodeAt(0)),r=r&&!a);break;default:i=(i=i&&!(r&&!n.Character.isDecimalDigit(o.charCodeAt(0))))&&!(a&&!n.Character.isHexDigit(o.charCodeAt(0)))}}if(i&&s&&t.length>2){var u=t.substr(1,t.length-2);r&&u.length>1?t=String.fromCharCode(parseInt(u.substr(1),10)):a&&u.length>2?t=String.fromCharCode(parseInt("0"+u.substr(1),16)):r||a||!l.XHTMLEntities[u]||(t=l.XHTMLEntities[u])}return t},t.prototype.lexJSX=function(){var e=this.scanner.source.charCodeAt(this.scanner.index);if(60===e||62===e||47===e||58===e||61===e||123===e||125===e)return{type:7,value:o=this.scanner.source[this.scanner.index++],lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};if(34===e||39===e){for(var t=this.scanner.index,i=this.scanner.source[this.scanner.index++],s="";!this.scanner.eof();){if((u=this.scanner.source[this.scanner.index++])===i)break;s+="&"===u?this.scanXHTMLEntity(i):u}return{type:8,value:s,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(46===e){var r=this.scanner.source.charCodeAt(this.scanner.index+1),a=this.scanner.source.charCodeAt(this.scanner.index+2),o=46===r&&46===a?"...":".";t=this.scanner.index;return this.scanner.index+=o.length,{type:7,value:o,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(96===e)return{type:10,value:"",lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};if(n.Character.isIdentifierStart(e)&&92!==e){t=this.scanner.index;for(++this.scanner.index;!this.scanner.eof();){var u=this.scanner.source.charCodeAt(this.scanner.index);if(n.Character.isIdentifierPart(u)&&92!==u)++this.scanner.index;else{if(45!==u)break;++this.scanner.index}}return{type:100,value:this.scanner.source.slice(t,this.scanner.index),lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}return this.scanner.lex()},t.prototype.nextJSXToken=function(){this.collectComments(),this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;var e=this.lexJSX();return this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.config.tokens&&this.tokens.push(this.convertToken(e)),e},t.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;for(var e=this.scanner.index,t="";!this.scanner.eof();){var i=this.scanner.source[this.scanner.index];if("{"===i||"<"===i)break;++this.scanner.index,t+=i,n.Character.isLineTerminator(i.charCodeAt(0))&&(++this.scanner.lineNumber,"\r"===i&&"\n"===this.scanner.source[this.scanner.index]&&++this.scanner.index,this.scanner.lineStart=this.scanner.index)}this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var s={type:101,value:t,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:e,end:this.scanner.index};return t.length>0&&this.config.tokens&&this.tokens.push(this.convertToken(s)),s},t.prototype.peekJSXToken=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.lexJSX();return this.scanner.restoreState(e),t},t.prototype.expectJSX=function(e){var t=this.nextJSXToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},t.prototype.matchJSX=function(e){var t=this.peekJSXToken();return 7===t.type&&t.value===e},t.prototype.parseJSXIdentifier=function(){var e=this.createJSXNode(),t=this.nextJSXToken();return 100!==t.type&&this.throwUnexpectedToken(t),this.finalize(e,new a.JSXIdentifier(t.value))},t.prototype.parseJSXElementName=function(){var e=this.createJSXNode(),t=this.parseJSXIdentifier();if(this.matchJSX(":")){var i=t;this.expectJSX(":");var s=this.parseJSXIdentifier();t=this.finalize(e,new a.JSXNamespacedName(i,s))}else if(this.matchJSX("."))for(;this.matchJSX(".");){var r=t;this.expectJSX(".");var n=this.parseJSXIdentifier();t=this.finalize(e,new a.JSXMemberExpression(r,n))}return t},t.prototype.parseJSXAttributeName=function(){var e,t=this.createJSXNode(),i=this.parseJSXIdentifier();if(this.matchJSX(":")){var s=i;this.expectJSX(":");var r=this.parseJSXIdentifier();e=this.finalize(t,new a.JSXNamespacedName(s,r))}else e=i;return e},t.prototype.parseJSXStringLiteralAttribute=function(){var e=this.createJSXNode(),t=this.nextJSXToken();8!==t.type&&this.throwUnexpectedToken(t);var i=this.getTokenRaw(t);return this.finalize(e,new u.Literal(t.value,i))},t.prototype.parseJSXExpressionAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.finishJSX(),this.match("}")&&this.tolerateError("JSX attributes must only be assigned a non-empty expression");var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new a.JSXExpressionContainer(t))},t.prototype.parseJSXAttributeValue=function(){return this.matchJSX("{")?this.parseJSXExpressionAttribute():this.matchJSX("<")?this.parseJSXElement():this.parseJSXStringLiteralAttribute()},t.prototype.parseJSXNameValueAttribute=function(){var e=this.createJSXNode(),t=this.parseJSXAttributeName(),i=null;return this.matchJSX("=")&&(this.expectJSX("="),i=this.parseJSXAttributeValue()),this.finalize(e,new a.JSXAttribute(t,i))},t.prototype.parseJSXSpreadAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.expectJSX("..."),this.finishJSX();var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new a.JSXSpreadAttribute(t))},t.prototype.parseJSXAttributes=function(){for(var e=[];!this.matchJSX("/")&&!this.matchJSX(">");){var t=this.matchJSX("{")?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();e.push(t)}return e},t.prototype.parseJSXOpeningElement=function(){var e=this.createJSXNode();this.expectJSX("<");var t=this.parseJSXElementName(),i=this.parseJSXAttributes(),s=this.matchJSX("/");return s&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new a.JSXOpeningElement(t,s,i))},t.prototype.parseJSXBoundaryElement=function(){var e=this.createJSXNode();if(this.expectJSX("<"),this.matchJSX("/")){this.expectJSX("/");var t=this.parseJSXElementName();return this.expectJSX(">"),this.finalize(e,new a.JSXClosingElement(t))}var i=this.parseJSXElementName(),s=this.parseJSXAttributes(),r=this.matchJSX("/");return r&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new a.JSXOpeningElement(i,r,s))},t.prototype.parseJSXEmptyExpression=function(){var e=this.createJSXChildNode();return this.collectComments(),this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.finalize(e,new a.JSXEmptyExpression)},t.prototype.parseJSXExpressionContainer=function(){var e,t=this.createJSXNode();return this.expectJSX("{"),this.matchJSX("}")?(e=this.parseJSXEmptyExpression(),this.expectJSX("}")):(this.finishJSX(),e=this.parseAssignmentExpression(),this.reenterJSX()),this.finalize(t,new a.JSXExpressionContainer(e))},t.prototype.parseJSXChildren=function(){for(var e=[];!this.scanner.eof();){var t=this.createJSXChildNode(),i=this.nextJSXText();if(i.start<i.end){var s=this.getTokenRaw(i),r=this.finalize(t,new a.JSXText(i.value,s));e.push(r)}if("{"!==this.scanner.source[this.scanner.index])break;var n=this.parseJSXExpressionContainer();e.push(n)}return e},t.prototype.parseComplexJSXElement=function(e){for(var t=[];!this.scanner.eof();){e.children=e.children.concat(this.parseJSXChildren());var i=this.createJSXChildNode(),s=this.parseJSXBoundaryElement();if(s.type===o.JSXSyntax.JSXOpeningElement){var r=s;if(r.selfClosing){var n=this.finalize(i,new a.JSXElement(r,[],null));e.children.push(n)}else t.push(e),e={node:i,opening:r,closing:null,children:[]}}if(s.type===o.JSXSyntax.JSXClosingElement){e.closing=s;var u=p(e.opening.name);if(u!==p(e.closing.name)&&this.tolerateError("Expected corresponding JSX closing tag for %0",u),!(t.length>0))break;n=this.finalize(e.node,new a.JSXElement(e.opening,e.children,e.closing));(e=t[t.length-1]).children.push(n),t.pop()}}return e},t.prototype.parseJSXElement=function(){var e=this.createJSXNode(),t=this.parseJSXOpeningElement(),i=[],s=null;if(!t.selfClosing){var r=this.parseComplexJSXElement({node:e,opening:t,closing:s,children:i});i=r.children,s=r.closing}return this.finalize(e,new a.JSXElement(t,i,s))},t.prototype.parseJSXRoot=function(){this.config.tokens&&this.tokens.pop(),this.startJSX();var e=this.parseJSXElement();return this.finishJSX(),e},t.prototype.isStartOfExpression=function(){return e.prototype.isStartOfExpression.call(this)||this.match("<")},t}(h.Parser);t.JSXParser=d},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};t.Character={fromCodePoint:function(e){return e<65536?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10))+String.fromCharCode(56320+(e-65536&1023))},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&i.NonAsciiIdentifierStart.test(t.Character.fromCodePoint(e))},isIdentifierPart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&i.NonAsciiIdentifierPart.test(t.Character.fromCodePoint(e))},isDecimalDigit:function(e){return e>=48&&e<=57},isHexDigit:function(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102},isOctalDigit:function(e){return e>=48&&e<=55}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(6),r=function(){return function(e){this.type=s.JSXSyntax.JSXClosingElement,this.name=e}}();t.JSXClosingElement=r;var n=function(){return function(e,t,i){this.type=s.JSXSyntax.JSXElement,this.openingElement=e,this.children=t,this.closingElement=i}}();t.JSXElement=n;var a=function(){return function(){this.type=s.JSXSyntax.JSXEmptyExpression}}();t.JSXEmptyExpression=a;var o=function(){return function(e){this.type=s.JSXSyntax.JSXExpressionContainer,this.expression=e}}();t.JSXExpressionContainer=o;var u=function(){return function(e){this.type=s.JSXSyntax.JSXIdentifier,this.name=e}}();t.JSXIdentifier=u;var h=function(){return function(e,t){this.type=s.JSXSyntax.JSXMemberExpression,this.object=e,this.property=t}}();t.JSXMemberExpression=h;var c=function(){return function(e,t){this.type=s.JSXSyntax.JSXAttribute,this.name=e,this.value=t}}();t.JSXAttribute=c;var l=function(){return function(e,t){this.type=s.JSXSyntax.JSXNamespacedName,this.namespace=e,this.name=t}}();t.JSXNamespacedName=l;var p=function(){return function(e,t,i){this.type=s.JSXSyntax.JSXOpeningElement,this.name=e,this.selfClosing=t,this.attributes=i}}();t.JSXOpeningElement=p;var d=function(){return function(e){this.type=s.JSXSyntax.JSXSpreadAttribute,this.argument=e}}();t.JSXSpreadAttribute=d;var m=function(){return function(e,t){this.type=s.JSXSyntax.JSXText,this.value=e,this.raw=t}}();t.JSXText=m},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JSXSyntax={JSXAttribute:"JSXAttribute",JSXClosingElement:"JSXClosingElement",JSXElement:"JSXElement",JSXEmptyExpression:"JSXEmptyExpression",JSXExpressionContainer:"JSXExpressionContainer",JSXIdentifier:"JSXIdentifier",JSXMemberExpression:"JSXMemberExpression",JSXNamespacedName:"JSXNamespacedName",JSXOpeningElement:"JSXOpeningElement",JSXSpreadAttribute:"JSXSpreadAttribute",JSXText:"JSXText"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(2),r=function(){return function(e){this.type=s.Syntax.ArrayExpression,this.elements=e}}();t.ArrayExpression=r;var n=function(){return function(e){this.type=s.Syntax.ArrayPattern,this.elements=e}}();t.ArrayPattern=n;var a=function(){return function(e,t,i){this.type=s.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=i,this.async=!1}}();t.ArrowFunctionExpression=a;var o=function(){return function(e,t,i){this.type=s.Syntax.AssignmentExpression,this.operator=e,this.left=t,this.right=i}}();t.AssignmentExpression=o;var u=function(){return function(e,t){this.type=s.Syntax.AssignmentPattern,this.left=e,this.right=t}}();t.AssignmentPattern=u;var h=function(){return function(e,t,i){this.type=s.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=i,this.async=!0}}();t.AsyncArrowFunctionExpression=h;var c=function(){return function(e,t,i){this.type=s.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=i,this.generator=!1,this.expression=!1,this.async=!0}}();t.AsyncFunctionDeclaration=c;var l=function(){return function(e,t,i){this.type=s.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=i,this.generator=!1,this.expression=!1,this.async=!0}}();t.AsyncFunctionExpression=l;var p=function(){return function(e){this.type=s.Syntax.AwaitExpression,this.argument=e}}();t.AwaitExpression=p;var d=function(){return function(e,t,i){var r="||"===e||"&&"===e;this.type=r?s.Syntax.LogicalExpression:s.Syntax.BinaryExpression,this.operator=e,this.left=t,this.right=i}}();t.BinaryExpression=d;var m=function(){return function(e){this.type=s.Syntax.BlockStatement,this.body=e}}();t.BlockStatement=m;var x=function(){return function(e){this.type=s.Syntax.BreakStatement,this.label=e}}();t.BreakStatement=x;var D=function(){return function(e,t){this.type=s.Syntax.CallExpression,this.callee=e,this.arguments=t}}();t.CallExpression=D;var f=function(){return function(e,t){this.type=s.Syntax.CatchClause,this.param=e,this.body=t}}();t.CatchClause=f;var E=function(){return function(e){this.type=s.Syntax.ClassBody,this.body=e}}();t.ClassBody=E;var y=function(){return function(e,t,i){this.type=s.Syntax.ClassDeclaration,this.id=e,this.superClass=t,this.body=i}}();t.ClassDeclaration=y;var C=function(){return function(e,t,i){this.type=s.Syntax.ClassExpression,this.id=e,this.superClass=t,this.body=i}}();t.ClassExpression=C;var A=function(){return function(e,t){this.type=s.Syntax.MemberExpression,this.computed=!0,this.object=e,this.property=t}}();t.ComputedMemberExpression=A;var v=function(){return function(e,t,i){this.type=s.Syntax.ConditionalExpression,this.test=e,this.consequent=t,this.alternate=i}}();t.ConditionalExpression=v;var S=function(){return function(e){this.type=s.Syntax.ContinueStatement,this.label=e}}();t.ContinueStatement=S;var F=function(){return function(){this.type=s.Syntax.DebuggerStatement}}();t.DebuggerStatement=F;var g=function(){return function(e,t){this.type=s.Syntax.ExpressionStatement,this.expression=e,this.directive=t}}();t.Directive=g;var k=function(){return function(e,t){this.type=s.Syntax.DoWhileStatement,this.body=e,this.test=t}}();t.DoWhileStatement=k;var w=function(){return function(){this.type=s.Syntax.EmptyStatement}}();t.EmptyStatement=w;var B=function(){return function(e){this.type=s.Syntax.ExportAllDeclaration,this.source=e}}();t.ExportAllDeclaration=B;var b=function(){return function(e){this.type=s.Syntax.ExportDefaultDeclaration,this.declaration=e}}();t.ExportDefaultDeclaration=b;var T=function(){return function(e,t,i){this.type=s.Syntax.ExportNamedDeclaration,this.declaration=e,this.specifiers=t,this.source=i}}();t.ExportNamedDeclaration=T;var N=function(){return function(e,t){this.type=s.Syntax.ExportSpecifier,this.exported=t,this.local=e}}();t.ExportSpecifier=N;var I=function(){return function(e){this.type=s.Syntax.ExpressionStatement,this.expression=e}}();t.ExpressionStatement=I;var M=function(){return function(e,t,i){this.type=s.Syntax.ForInStatement,this.left=e,this.right=t,this.body=i,this.each=!1}}();t.ForInStatement=M;var P=function(){return function(e,t,i){this.type=s.Syntax.ForOfStatement,this.left=e,this.right=t,this.body=i}}();t.ForOfStatement=P;var X=function(){return function(e,t,i,r){this.type=s.Syntax.ForStatement,this.init=e,this.test=t,this.update=i,this.body=r}}();t.ForStatement=X;var J=function(){return function(e,t,i,r){this.type=s.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=i,this.generator=r,this.expression=!1,this.async=!1}}();t.FunctionDeclaration=J;var U=function(){return function(e,t,i,r){this.type=s.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=i,this.generator=r,this.expression=!1,this.async=!1}}();t.FunctionExpression=U;var L=function(){return function(e){this.type=s.Syntax.Identifier,this.name=e}}();t.Identifier=L;var z=function(){return function(e,t,i){this.type=s.Syntax.IfStatement,this.test=e,this.consequent=t,this.alternate=i}}();t.IfStatement=z;var O=function(){return function(e,t){this.type=s.Syntax.ImportDeclaration,this.specifiers=e,this.source=t}}();t.ImportDeclaration=O;var R=function(){return function(e){this.type=s.Syntax.ImportDefaultSpecifier,this.local=e}}();t.ImportDefaultSpecifier=R;var K=function(){return function(e){this.type=s.Syntax.ImportNamespaceSpecifier,this.local=e}}();t.ImportNamespaceSpecifier=K;var H=function(){return function(e,t){this.type=s.Syntax.ImportSpecifier,this.local=e,this.imported=t}}();t.ImportSpecifier=H;var j=function(){return function(e,t){this.type=s.Syntax.LabeledStatement,this.label=e,this.body=t}}();t.LabeledStatement=j;var W=function(){return function(e,t){this.type=s.Syntax.Literal,this.value=e,this.raw=t}}();t.Literal=W;var G=function(){return function(e,t){this.type=s.Syntax.MetaProperty,this.meta=e,this.property=t}}();t.MetaProperty=G;var _=function(){return function(e,t,i,r,n){this.type=s.Syntax.MethodDefinition,this.key=e,this.computed=t,this.value=i,this.kind=r,this.static=n}}();t.MethodDefinition=_;var Y=function(){return function(e){this.type=s.Syntax.Program,this.body=e,this.sourceType="module"}}();t.Module=Y;var V=function(){return function(e,t){this.type=s.Syntax.NewExpression,this.callee=e,this.arguments=t}}();t.NewExpression=V;var q=function(){return function(e){this.type=s.Syntax.ObjectExpression,this.properties=e}}();t.ObjectExpression=q;var $=function(){return function(e){this.type=s.Syntax.ObjectPattern,this.properties=e}}();t.ObjectPattern=$;var Z=function(){return function(e,t,i,r,n,a){this.type=s.Syntax.Property,this.key=t,this.computed=i,this.value=r,this.kind=e,this.method=n,this.shorthand=a}}();t.Property=Z;var Q=function(){return function(e,t,i,r){this.type=s.Syntax.Literal,this.value=e,this.raw=t,this.regex={pattern:i,flags:r}}}();t.RegexLiteral=Q;var ee=function(){return function(e){this.type=s.Syntax.RestElement,this.argument=e}}();t.RestElement=ee;var te=function(){return function(e){this.type=s.Syntax.ReturnStatement,this.argument=e}}();t.ReturnStatement=te;var ie=function(){return function(e){this.type=s.Syntax.Program,this.body=e,this.sourceType="script"}}();t.Script=ie;var se=function(){return function(e){this.type=s.Syntax.SequenceExpression,this.expressions=e}}();t.SequenceExpression=se;var re=function(){return function(e){this.type=s.Syntax.SpreadElement,this.argument=e}}();t.SpreadElement=re;var ne=function(){return function(e,t){this.type=s.Syntax.MemberExpression,this.computed=!1,this.object=e,this.property=t}}();t.StaticMemberExpression=ne;var ae=function(){return function(){this.type=s.Syntax.Super}}();t.Super=ae;var oe=function(){return function(e,t){this.type=s.Syntax.SwitchCase,this.test=e,this.consequent=t}}();t.SwitchCase=oe;var ue=function(){return function(e,t){this.type=s.Syntax.SwitchStatement,this.discriminant=e,this.cases=t}}();t.SwitchStatement=ue;var he=function(){return function(e,t){this.type=s.Syntax.TaggedTemplateExpression,this.tag=e,this.quasi=t}}();t.TaggedTemplateExpression=he;var ce=function(){return function(e,t){this.type=s.Syntax.TemplateElement,this.value=e,this.tail=t}}();t.TemplateElement=ce;var le=function(){return function(e,t){this.type=s.Syntax.TemplateLiteral,this.quasis=e,this.expressions=t}}();t.TemplateLiteral=le;var pe=function(){return function(){this.type=s.Syntax.ThisExpression}}();t.ThisExpression=pe;var de=function(){return function(e){this.type=s.Syntax.ThrowStatement,this.argument=e}}();t.ThrowStatement=de;var me=function(){return function(e,t,i){this.type=s.Syntax.TryStatement,this.block=e,this.handler=t,this.finalizer=i}}();t.TryStatement=me;var xe=function(){return function(e,t){this.type=s.Syntax.UnaryExpression,this.operator=e,this.argument=t,this.prefix=!0}}();t.UnaryExpression=xe;var De=function(){return function(e,t,i){this.type=s.Syntax.UpdateExpression,this.operator=e,this.argument=t,this.prefix=i}}();t.UpdateExpression=De;var fe=function(){return function(e,t){this.type=s.Syntax.VariableDeclaration,this.declarations=e,this.kind=t}}();t.VariableDeclaration=fe;var Ee=function(){return function(e,t){this.type=s.Syntax.VariableDeclarator,this.id=e,this.init=t}}();t.VariableDeclarator=Ee;var ye=function(){return function(e,t){this.type=s.Syntax.WhileStatement,this.test=e,this.body=t}}();t.WhileStatement=ye;var Ce=function(){return function(e,t){this.type=s.Syntax.WithStatement,this.object=e,this.body=t}}();t.WithStatement=Ce;var Ae=function(){return function(e,t){this.type=s.Syntax.YieldExpression,this.argument=e,this.delegate=t}}();t.YieldExpression=Ae},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(9),r=i(10),n=i(11),a=i(7),o=i(12),u=i(2),h=i(13),c=function(){function e(e,t,i){void 0===t&&(t={}),this.config={range:"boolean"==typeof t.range&&t.range,loc:"boolean"==typeof t.loc&&t.loc,source:null,tokens:"boolean"==typeof t.tokens&&t.tokens,comment:"boolean"==typeof t.comment&&t.comment,tolerant:"boolean"==typeof t.tolerant&&t.tolerant},this.config.loc&&t.source&&null!==t.source&&(this.config.source=String(t.source)),this.delegate=i,this.errorHandler=new r.ErrorHandler,this.errorHandler.tolerant=this.config.tolerant,this.scanner=new o.Scanner(e,this.errorHandler),this.scanner.trackComment=this.config.comment,this.operatorPrecedence={")":0,";":0,",":0,"=":0,"]":0,"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":11,"/":11,"%":11},this.lookahead={type:2,value:"",lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0},this.hasLineTerminator=!1,this.context={isModule:!1,await:!1,allowIn:!0,allowStrictDirective:!0,allowYield:!0,firstCoverInitializedNameError:null,isAssignmentTarget:!1,isBindingElement:!1,inFunctionBody:!1,inIteration:!1,inSwitch:!1,labelSet:{},strict:!1},this.tokens=[],this.startMarker={index:0,line:this.scanner.lineNumber,column:0},this.lastMarker={index:0,line:this.scanner.lineNumber,column:0},this.nextToken(),this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}return e.prototype.throwError=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var r=Array.prototype.slice.call(arguments,1),n=e.replace(/%(\d)/g,function(e,t){return s.assert(t<r.length,"Message reference must be in range"),r[t]}),a=this.lastMarker.index,o=this.lastMarker.line,u=this.lastMarker.column+1;throw this.errorHandler.createError(a,o,u,n)},e.prototype.tolerateError=function(e){for(var t=[],i=1;i<arguments.length;i++)t[i-1]=arguments[i];var r=Array.prototype.slice.call(arguments,1),n=e.replace(/%(\d)/g,function(e,t){return s.assert(t<r.length,"Message reference must be in range"),r[t]}),a=this.lastMarker.index,o=this.scanner.lineNumber,u=this.lastMarker.column+1;this.errorHandler.tolerateError(a,o,u,n)},e.prototype.unexpectedTokenError=function(e,t){var i,s=t||n.Messages.UnexpectedToken;if(e?(t||(s=2===e.type?n.Messages.UnexpectedEOS:3===e.type?n.Messages.UnexpectedIdentifier:6===e.type?n.Messages.UnexpectedNumber:8===e.type?n.Messages.UnexpectedString:10===e.type?n.Messages.UnexpectedTemplate:n.Messages.UnexpectedToken,4===e.type&&(this.scanner.isFutureReservedWord(e.value)?s=n.Messages.UnexpectedReserved:this.context.strict&&this.scanner.isStrictModeReservedWord(e.value)&&(s=n.Messages.StrictReservedWord))),i=e.value):i="ILLEGAL",s=s.replace("%0",i),e&&"number"==typeof e.lineNumber){var r=e.start,a=e.lineNumber,o=this.lastMarker.index-this.lastMarker.column,u=e.start-o+1;return this.errorHandler.createError(r,a,u,s)}r=this.lastMarker.index,a=this.lastMarker.line,u=this.lastMarker.column+1;return this.errorHandler.createError(r,a,u,s)},e.prototype.throwUnexpectedToken=function(e,t){throw this.unexpectedTokenError(e,t)},e.prototype.tolerateUnexpectedToken=function(e,t){this.errorHandler.tolerate(this.unexpectedTokenError(e,t))},e.prototype.collectComments=function(){if(this.config.comment){var e=this.scanner.scanComments();if(e.length>0&&this.delegate)for(var t=0;t<e.length;++t){var i=e[t],s=void 0;s={type:i.multiLine?"BlockComment":"LineComment",value:this.scanner.source.slice(i.slice[0],i.slice[1])},this.config.range&&(s.range=i.range),this.config.loc&&(s.loc=i.loc);var r={start:{line:i.loc.start.line,column:i.loc.start.column,offset:i.range[0]},end:{line:i.loc.end.line,column:i.loc.end.column,offset:i.range[1]}};this.delegate(s,r)}}else this.scanner.scanComments()},e.prototype.getTokenRaw=function(e){return this.scanner.source.slice(e.start,e.end)},e.prototype.convertToken=function(e){var t={type:h.TokenName[e.type],value:this.getTokenRaw(e)};if(this.config.range&&(t.range=[e.start,e.end]),this.config.loc&&(t.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}),9===e.type){var i=e.pattern,s=e.flags;t.regex={pattern:i,flags:s}}return t},e.prototype.nextToken=function(){var e=this.lookahead;this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.collectComments(),this.scanner.index!==this.startMarker.index&&(this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart);var t=this.scanner.lex();return this.hasLineTerminator=e.lineNumber!==t.lineNumber,t&&this.context.strict&&3===t.type&&this.scanner.isStrictModeReservedWord(t.value)&&(t.type=4),this.lookahead=t,this.config.tokens&&2!==t.type&&this.tokens.push(this.convertToken(t)),e},e.prototype.nextRegexToken=function(){this.collectComments();var e=this.scanner.scanRegExp();return this.config.tokens&&(this.tokens.pop(),this.tokens.push(this.convertToken(e))),this.lookahead=e,this.nextToken(),e},e.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column}},e.prototype.startNode=function(e,t){void 0===t&&(t=0);var i=e.start-e.lineStart,s=e.lineNumber;return i<0&&(i+=t,s--),{index:e.start,line:s,column:i}},e.prototype.finalize=function(e,t){if(this.config.range&&(t.range=[e.index,this.lastMarker.index]),this.config.loc&&(t.loc={start:{line:e.line,column:e.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}},this.config.source&&(t.loc.source=this.config.source)),this.delegate){var i={start:{line:e.line,column:e.column,offset:e.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(t,i)}return t},e.prototype.expect=function(e){var t=this.nextToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var e=this.lookahead;7===e.type&&","===e.value?this.nextToken():7===e.type&&";"===e.value?(this.nextToken(),this.tolerateUnexpectedToken(e)):this.tolerateUnexpectedToken(e,n.Messages.UnexpectedToken)}else this.expect(",")},e.prototype.expectKeyword=function(e){var t=this.nextToken();4===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.match=function(e){return 7===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchKeyword=function(e){return 4===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchContextualKeyword=function(e){return 3===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchAssign=function(){if(7!==this.lookahead.type)return!1;var e=this.lookahead.value;return"="===e||"*="===e||"**="===e||"/="===e||"%="===e||"+="===e||"-="===e||"<<="===e||">>="===e||">>>="===e||"&="===e||"^="===e||"|="===e},e.prototype.isolateCoverGrammar=function(e){var t=this.context.isBindingElement,i=this.context.isAssignmentTarget,s=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var r=e.call(this);return null!==this.context.firstCoverInitializedNameError&&this.throwUnexpectedToken(this.context.firstCoverInitializedNameError),this.context.isBindingElement=t,this.context.isAssignmentTarget=i,this.context.firstCoverInitializedNameError=s,r},e.prototype.inheritCoverGrammar=function(e){var t=this.context.isBindingElement,i=this.context.isAssignmentTarget,s=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var r=e.call(this);return this.context.isBindingElement=this.context.isBindingElement&&t,this.context.isAssignmentTarget=this.context.isAssignmentTarget&&i,this.context.firstCoverInitializedNameError=s||this.context.firstCoverInitializedNameError,r},e.prototype.consumeSemicolon=function(){this.match(";")?this.nextToken():this.hasLineTerminator||(2===this.lookahead.type||this.match("}")||this.throwUnexpectedToken(this.lookahead),this.lastMarker.index=this.startMarker.index,this.lastMarker.line=this.startMarker.line,this.lastMarker.column=this.startMarker.column)},e.prototype.parsePrimaryExpression=function(){var e,t,i,s=this.createNode();switch(this.lookahead.type){case 3:(this.context.isModule||this.context.await)&&"await"===this.lookahead.value&&this.tolerateUnexpectedToken(this.lookahead),e=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(s,new a.Identifier(this.nextToken().value));break;case 6:case 8:this.context.strict&&this.lookahead.octal&&this.tolerateUnexpectedToken(this.lookahead,n.Messages.StrictOctalLiteral),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.Literal(t.value,i));break;case 1:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.Literal("true"===t.value,i));break;case 5:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.Literal(null,i));break;case 10:e=this.parseTemplateLiteral();break;case 7:switch(this.lookahead.value){case"(":this.context.isBindingElement=!1,e=this.inheritCoverGrammar(this.parseGroupExpression);break;case"[":e=this.inheritCoverGrammar(this.parseArrayInitializer);break;case"{":e=this.inheritCoverGrammar(this.parseObjectInitializer);break;case"/":case"/=":this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.scanner.index=this.startMarker.index,t=this.nextRegexToken(),i=this.getTokenRaw(t),e=this.finalize(s,new a.RegexLiteral(t.regex,i,t.pattern,t.flags));break;default:e=this.throwUnexpectedToken(this.nextToken())}break;case 4:!this.context.strict&&this.context.allowYield&&this.matchKeyword("yield")?e=this.parseIdentifierName():!this.context.strict&&this.matchKeyword("let")?e=this.finalize(s,new a.Identifier(this.nextToken().value)):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.matchKeyword("function")?e=this.parseFunctionExpression():this.matchKeyword("this")?(this.nextToken(),e=this.finalize(s,new a.ThisExpression)):e=this.matchKeyword("class")?this.parseClassExpression():this.throwUnexpectedToken(this.nextToken()));break;default:e=this.throwUnexpectedToken(this.nextToken())}return e},e.prototype.parseSpreadElement=function(){var e=this.createNode();this.expect("...");var t=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(e,new a.SpreadElement(t))},e.prototype.parseArrayInitializer=function(){var e=this.createNode(),t=[];for(this.expect("[");!this.match("]");)if(this.match(","))this.nextToken(),t.push(null);else if(this.match("...")){var i=this.parseSpreadElement();this.match("]")||(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.expect(",")),t.push(i)}else t.push(this.inheritCoverGrammar(this.parseAssignmentExpression)),this.match("]")||this.expect(",");return this.expect("]"),this.finalize(e,new a.ArrayExpression(t))},e.prototype.parsePropertyMethod=function(e){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var t=this.context.strict,i=this.context.allowStrictDirective;this.context.allowStrictDirective=e.simple;var s=this.isolateCoverGrammar(this.parseFunctionSourceElements);return this.context.strict&&e.firstRestricted&&this.tolerateUnexpectedToken(e.firstRestricted,e.message),this.context.strict&&e.stricted&&this.tolerateUnexpectedToken(e.stricted,e.message),this.context.strict=t,this.context.allowStrictDirective=i,s},e.prototype.parsePropertyMethodFunction=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters(),s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!1))},e.prototype.parsePropertyMethodAsyncFunction=function(){var e=this.createNode(),t=this.context.allowYield,i=this.context.await;this.context.allowYield=!1,this.context.await=!0;var s=this.parseFormalParameters(),r=this.parsePropertyMethod(s);return this.context.allowYield=t,this.context.await=i,this.finalize(e,new a.AsyncFunctionExpression(null,s.params,r))},e.prototype.parseObjectPropertyKey=function(){var e,t=this.createNode(),i=this.nextToken();switch(i.type){case 8:case 6:this.context.strict&&i.octal&&this.tolerateUnexpectedToken(i,n.Messages.StrictOctalLiteral);var s=this.getTokenRaw(i);e=this.finalize(t,new a.Literal(i.value,s));break;case 3:case 1:case 5:case 4:e=this.finalize(t,new a.Identifier(i.value));break;case 7:"["===i.value?(e=this.isolateCoverGrammar(this.parseAssignmentExpression),this.expect("]")):e=this.throwUnexpectedToken(i);break;default:e=this.throwUnexpectedToken(i)}return e},e.prototype.isPropertyKey=function(e,t){return e.type===u.Syntax.Identifier&&e.name===t||e.type===u.Syntax.Literal&&e.value===t},e.prototype.parseObjectProperty=function(e){var t,i=this.createNode(),s=this.lookahead,r=null,o=null,u=!1,h=!1,c=!1,l=!1;if(3===s.type){var p=s.value;this.nextToken(),u=this.match("["),r=(l=!(this.hasLineTerminator||"async"!==p||this.match(":")||this.match("(")||this.match("*")||this.match(",")))?this.parseObjectPropertyKey():this.finalize(i,new a.Identifier(p))}else this.match("*")?this.nextToken():(u=this.match("["),r=this.parseObjectPropertyKey());var d=this.qualifiedPropertyName(this.lookahead);if(3===s.type&&!l&&"get"===s.value&&d)t="get",u=this.match("["),r=this.parseObjectPropertyKey(),this.context.allowYield=!1,o=this.parseGetterMethod();else if(3===s.type&&!l&&"set"===s.value&&d)t="set",u=this.match("["),r=this.parseObjectPropertyKey(),o=this.parseSetterMethod();else if(7===s.type&&"*"===s.value&&d)t="init",u=this.match("["),r=this.parseObjectPropertyKey(),o=this.parseGeneratorMethod(),h=!0;else if(r||this.throwUnexpectedToken(this.lookahead),t="init",this.match(":")&&!l)!u&&this.isPropertyKey(r,"__proto__")&&(e.value&&this.tolerateError(n.Messages.DuplicateProtoProperty),e.value=!0),this.nextToken(),o=this.inheritCoverGrammar(this.parseAssignmentExpression);else if(this.match("("))o=l?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),h=!0;else if(3===s.type){p=this.finalize(i,new a.Identifier(s.value));if(this.match("=")){this.context.firstCoverInitializedNameError=this.lookahead,this.nextToken(),c=!0;var m=this.isolateCoverGrammar(this.parseAssignmentExpression);o=this.finalize(i,new a.AssignmentPattern(p,m))}else c=!0,o=p}else this.throwUnexpectedToken(this.nextToken());return this.finalize(i,new a.Property(t,r,u,o,h,c))},e.prototype.parseObjectInitializer=function(){var e=this.createNode();this.expect("{");for(var t=[],i={value:!1};!this.match("}");)t.push(this.parseObjectProperty(i)),this.match("}")||this.expectCommaSeparator();return this.expect("}"),this.finalize(e,new a.ObjectExpression(t))},e.prototype.parseTemplateHead=function(){s.assert(this.lookahead.head,"Template literal must start with a template head");var e=this.createNode(),t=this.nextToken(),i=t.value,r=t.cooked;return this.finalize(e,new a.TemplateElement({raw:i,cooked:r},t.tail))},e.prototype.parseTemplateElement=function(){10!==this.lookahead.type&&this.throwUnexpectedToken();var e=this.createNode(),t=this.nextToken(),i=t.value,s=t.cooked;return this.finalize(e,new a.TemplateElement({raw:i,cooked:s},t.tail))},e.prototype.parseTemplateLiteral=function(){var e=this.createNode(),t=[],i=[],s=this.parseTemplateHead();for(i.push(s);!s.tail;)t.push(this.parseExpression()),s=this.parseTemplateElement(),i.push(s);return this.finalize(e,new a.TemplateLiteral(i,t))},e.prototype.reinterpretExpressionAsPattern=function(e){switch(e.type){case u.Syntax.Identifier:case u.Syntax.MemberExpression:case u.Syntax.RestElement:case u.Syntax.AssignmentPattern:break;case u.Syntax.SpreadElement:e.type=u.Syntax.RestElement,this.reinterpretExpressionAsPattern(e.argument);break;case u.Syntax.ArrayExpression:e.type=u.Syntax.ArrayPattern;for(var t=0;t<e.elements.length;t++)null!==e.elements[t]&&this.reinterpretExpressionAsPattern(e.elements[t]);break;case u.Syntax.ObjectExpression:e.type=u.Syntax.ObjectPattern;for(t=0;t<e.properties.length;t++)this.reinterpretExpressionAsPattern(e.properties[t].value);break;case u.Syntax.AssignmentExpression:e.type=u.Syntax.AssignmentPattern,delete e.operator,this.reinterpretExpressionAsPattern(e.left)}},e.prototype.parseGroupExpression=function(){var e;if(this.expect("("),this.match(")"))this.nextToken(),this.match("=>")||this.expect("=>"),e={type:"ArrowParameterPlaceHolder",params:[],async:!1};else{var t=this.lookahead,i=[];if(this.match("..."))e=this.parseRestElement(i),this.expect(")"),this.match("=>")||this.expect("=>"),e={type:"ArrowParameterPlaceHolder",params:[e],async:!1};else{var s=!1;if(this.context.isBindingElement=!0,e=this.inheritCoverGrammar(this.parseAssignmentExpression),this.match(",")){var r=[];for(this.context.isAssignmentTarget=!1,r.push(e);2!==this.lookahead.type&&this.match(",");){if(this.nextToken(),this.match(")")){this.nextToken();for(var n=0;n<r.length;n++)this.reinterpretExpressionAsPattern(r[n]);s=!0,e={type:"ArrowParameterPlaceHolder",params:r,async:!1}}else if(this.match("...")){this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),r.push(this.parseRestElement(i)),this.expect(")"),this.match("=>")||this.expect("=>"),this.context.isBindingElement=!1;for(n=0;n<r.length;n++)this.reinterpretExpressionAsPattern(r[n]);s=!0,e={type:"ArrowParameterPlaceHolder",params:r,async:!1}}else r.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(s)break}s||(e=this.finalize(this.startNode(t),new a.SequenceExpression(r)))}if(!s){if(this.expect(")"),this.match("=>")&&(e.type===u.Syntax.Identifier&&"yield"===e.name&&(s=!0,e={type:"ArrowParameterPlaceHolder",params:[e],async:!1}),!s)){if(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),e.type===u.Syntax.SequenceExpression)for(n=0;n<e.expressions.length;n++)this.reinterpretExpressionAsPattern(e.expressions[n]);else this.reinterpretExpressionAsPattern(e);e={type:"ArrowParameterPlaceHolder",params:e.type===u.Syntax.SequenceExpression?e.expressions:[e],async:!1}}this.context.isBindingElement=!1}}}return e},e.prototype.parseArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.isIdentifierName=function(e){return 3===e.type||4===e.type||1===e.type||5===e.type},e.prototype.parseIdentifierName=function(){var e=this.createNode(),t=this.nextToken();return this.isIdentifierName(t)||this.throwUnexpectedToken(t),this.finalize(e,new a.Identifier(t.value))},e.prototype.parseNewExpression=function(){var e,t=this.createNode(),i=this.parseIdentifierName();if(s.assert("new"===i.name,"New expression must start with `new`"),this.match("."))if(this.nextToken(),3===this.lookahead.type&&this.context.inFunctionBody&&"target"===this.lookahead.value){var r=this.parseIdentifierName();e=new a.MetaProperty(i,r)}else this.throwUnexpectedToken(this.lookahead);else{var n=this.isolateCoverGrammar(this.parseLeftHandSideExpression),o=this.match("(")?this.parseArguments():[];e=new a.NewExpression(n,o),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return this.finalize(t,e)},e.prototype.parseAsyncArgument=function(){var e=this.parseAssignmentExpression();return this.context.firstCoverInitializedNameError=null,e},e.prototype.parseAsyncArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.parseLeftHandSideExpressionAllowCall=function(){var e,t=this.lookahead,i=this.matchContextualKeyword("async"),s=this.context.allowIn;for(this.context.allowIn=!0,this.matchKeyword("super")&&this.context.inFunctionBody?(e=this.createNode(),this.nextToken(),e=this.finalize(e,new a.Super),this.match("(")||this.match(".")||this.match("[")||this.throwUnexpectedToken(this.lookahead)):e=this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(".")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(".");var r=this.parseIdentifierName();e=this.finalize(this.startNode(t),new a.StaticMemberExpression(e,r))}else if(this.match("(")){var n=i&&t.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=!1,this.context.isAssignmentTarget=!1;var o=n?this.parseAsyncArguments():this.parseArguments();if(e=this.finalize(this.startNode(t),new a.CallExpression(e,o)),n&&this.match("=>")){for(var u=0;u<o.length;++u)this.reinterpretExpressionAsPattern(o[u]);e={type:"ArrowParameterPlaceHolder",params:o,async:!0}}}else if(this.match("[")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("[");r=this.isolateCoverGrammar(this.parseExpression);this.expect("]"),e=this.finalize(this.startNode(t),new a.ComputedMemberExpression(e,r))}else{if(10!==this.lookahead.type||!this.lookahead.head)break;var h=this.parseTemplateLiteral();e=this.finalize(this.startNode(t),new a.TaggedTemplateExpression(e,h))}return this.context.allowIn=s,e},e.prototype.parseSuper=function(){var e=this.createNode();return this.expectKeyword("super"),this.match("[")||this.match(".")||this.throwUnexpectedToken(this.lookahead),this.finalize(e,new a.Super)},e.prototype.parseLeftHandSideExpression=function(){s.assert(this.context.allowIn,"callee of new expression always allow in keyword.");for(var e=this.startNode(this.lookahead),t=this.matchKeyword("super")&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match("[")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("[");var i=this.isolateCoverGrammar(this.parseExpression);this.expect("]"),t=this.finalize(e,new a.ComputedMemberExpression(t,i))}else if(this.match(".")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(".");i=this.parseIdentifierName();t=this.finalize(e,new a.StaticMemberExpression(t,i))}else{if(10!==this.lookahead.type||!this.lookahead.head)break;var r=this.parseTemplateLiteral();t=this.finalize(e,new a.TaggedTemplateExpression(t,r))}return t},e.prototype.parseUpdateExpression=function(){var e,t=this.lookahead;if(this.match("++")||this.match("--")){var i=this.startNode(t),s=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(n.Messages.StrictLHSPrefix),this.context.isAssignmentTarget||this.tolerateError(n.Messages.InvalidLHSInAssignment);var r=!0;e=this.finalize(i,new a.UpdateExpression(s.value,e,r)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else if(e=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall),!this.hasLineTerminator&&7===this.lookahead.type&&(this.match("++")||this.match("--"))){this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(n.Messages.StrictLHSPostfix),this.context.isAssignmentTarget||this.tolerateError(n.Messages.InvalidLHSInAssignment),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var o=this.nextToken().value;r=!1;e=this.finalize(this.startNode(t),new a.UpdateExpression(o,e,r))}return e},e.prototype.parseAwaitExpression=function(){var e=this.createNode();this.nextToken();var t=this.parseUnaryExpression();return this.finalize(e,new a.AwaitExpression(t))},e.prototype.parseUnaryExpression=function(){var e;if(this.match("+")||this.match("-")||this.match("~")||this.match("!")||this.matchKeyword("delete")||this.matchKeyword("void")||this.matchKeyword("typeof")){var t=this.startNode(this.lookahead),i=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),e=this.finalize(t,new a.UnaryExpression(i.value,e)),this.context.strict&&"delete"===e.operator&&e.argument.type===u.Syntax.Identifier&&this.tolerateError(n.Messages.StrictDelete),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else e=this.context.await&&this.matchContextualKeyword("await")?this.parseAwaitExpression():this.parseUpdateExpression();return e},e.prototype.parseExponentiationExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseUnaryExpression);if(t.type!==u.Syntax.UnaryExpression&&this.match("**")){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var i=t,s=this.isolateCoverGrammar(this.parseExponentiationExpression);t=this.finalize(this.startNode(e),new a.BinaryExpression("**",i,s))}return t},e.prototype.binaryPrecedence=function(e){var t=e.value;return 7===e.type?this.operatorPrecedence[t]||0:4===e.type&&("instanceof"===t||this.context.allowIn&&"in"===t)?7:0},e.prototype.parseBinaryExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseExponentiationExpression),i=this.lookahead,s=this.binaryPrecedence(i);if(s>0){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;for(var r=[e,this.lookahead],n=t,o=this.isolateCoverGrammar(this.parseExponentiationExpression),u=[n,i.value,o],h=[s];!((s=this.binaryPrecedence(this.lookahead))<=0);){for(;u.length>2&&s<=h[h.length-1];){o=u.pop();var c=u.pop();h.pop(),n=u.pop(),r.pop();var l=this.startNode(r[r.length-1]);u.push(this.finalize(l,new a.BinaryExpression(c,n,o)))}u.push(this.nextToken().value),h.push(s),r.push(this.lookahead),u.push(this.isolateCoverGrammar(this.parseExponentiationExpression))}var p=u.length-1;t=u[p];for(var d=r.pop();p>1;){var m=r.pop(),x=d&&d.lineStart;l=this.startNode(m,x),c=u[p-1];t=this.finalize(l,new a.BinaryExpression(c,u[p-2],t)),p-=2,d=m}}return t},e.prototype.parseConditionalExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match("?")){this.nextToken();var i=this.context.allowIn;this.context.allowIn=!0;var s=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=i,this.expect(":");var r=this.isolateCoverGrammar(this.parseAssignmentExpression);t=this.finalize(this.startNode(e),new a.ConditionalExpression(t,s,r)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return t},e.prototype.checkPatternParam=function(e,t){switch(t.type){case u.Syntax.Identifier:this.validateParam(e,t,t.name);break;case u.Syntax.RestElement:this.checkPatternParam(e,t.argument);break;case u.Syntax.AssignmentPattern:this.checkPatternParam(e,t.left);break;case u.Syntax.ArrayPattern:for(var i=0;i<t.elements.length;i++)null!==t.elements[i]&&this.checkPatternParam(e,t.elements[i]);break;case u.Syntax.ObjectPattern:for(i=0;i<t.properties.length;i++)this.checkPatternParam(e,t.properties[i].value)}e.simple=e.simple&&t instanceof a.Identifier},e.prototype.reinterpretAsCoverFormalsList=function(e){var t,i=[e],s=!1;switch(e.type){case u.Syntax.Identifier:break;case"ArrowParameterPlaceHolder":i=e.params,s=e.async;break;default:return null}t={simple:!0,paramSet:{}};for(var r=0;r<i.length;++r){(a=i[r]).type===u.Syntax.AssignmentPattern?a.right.type===u.Syntax.YieldExpression&&(a.right.argument&&this.throwUnexpectedToken(this.lookahead),a.right.type=u.Syntax.Identifier,a.right.name="yield",delete a.right.argument,delete a.right.delegate):s&&a.type===u.Syntax.Identifier&&"await"===a.name&&this.throwUnexpectedToken(this.lookahead),this.checkPatternParam(t,a),i[r]=a}if(this.context.strict||!this.context.allowYield)for(r=0;r<i.length;++r){var a;(a=i[r]).type===u.Syntax.YieldExpression&&this.throwUnexpectedToken(this.lookahead)}if(t.message===n.Messages.StrictParamDupe){var o=this.context.strict?t.stricted:t.firstRestricted;this.throwUnexpectedToken(o,t.message)}return{simple:t.simple,params:i,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.parseAssignmentExpression=function(){var e;if(!this.context.allowYield&&this.matchKeyword("yield"))e=this.parseYieldExpression();else{var t=this.lookahead,i=t;if(e=this.parseConditionalExpression(),3===i.type&&i.lineNumber===this.lookahead.lineNumber&&"async"===i.value&&(3===this.lookahead.type||this.matchKeyword("yield"))){var s=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(s),e={type:"ArrowParameterPlaceHolder",params:[s],async:!0}}if("ArrowParameterPlaceHolder"===e.type||this.match("=>")){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var r=e.async,o=this.reinterpretAsCoverFormalsList(e);if(o){this.hasLineTerminator&&this.tolerateUnexpectedToken(this.lookahead),this.context.firstCoverInitializedNameError=null;var h=this.context.strict,c=this.context.allowStrictDirective;this.context.allowStrictDirective=o.simple;var l=this.context.allowYield,p=this.context.await;this.context.allowYield=!0,this.context.await=r;var d=this.startNode(t);this.expect("=>");var m=void 0;if(this.match("{")){var x=this.context.allowIn;this.context.allowIn=!0,m=this.parseFunctionSourceElements(),this.context.allowIn=x}else m=this.isolateCoverGrammar(this.parseAssignmentExpression);var D=m.type!==u.Syntax.BlockStatement;this.context.strict&&o.firstRestricted&&this.throwUnexpectedToken(o.firstRestricted,o.message),this.context.strict&&o.stricted&&this.tolerateUnexpectedToken(o.stricted,o.message),e=r?this.finalize(d,new a.AsyncArrowFunctionExpression(o.params,m,D)):this.finalize(d,new a.ArrowFunctionExpression(o.params,m,D)),this.context.strict=h,this.context.allowStrictDirective=c,this.context.allowYield=l,this.context.await=p}}else if(this.matchAssign()){if(this.context.isAssignmentTarget||this.tolerateError(n.Messages.InvalidLHSInAssignment),this.context.strict&&e.type===u.Syntax.Identifier){var f=e;this.scanner.isRestrictedWord(f.name)&&this.tolerateUnexpectedToken(i,n.Messages.StrictLHSAssignment),this.scanner.isStrictModeReservedWord(f.name)&&this.tolerateUnexpectedToken(i,n.Messages.StrictReservedWord)}this.match("=")?this.reinterpretExpressionAsPattern(e):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1);var E=(i=this.nextToken()).value,y=this.isolateCoverGrammar(this.parseAssignmentExpression);e=this.finalize(this.startNode(t),new a.AssignmentExpression(E,e,y)),this.context.firstCoverInitializedNameError=null}}return e},e.prototype.parseExpression=function(){var e=this.lookahead,t=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(",")){var i=[];for(i.push(t);2!==this.lookahead.type&&this.match(",");)this.nextToken(),i.push(this.isolateCoverGrammar(this.parseAssignmentExpression));t=this.finalize(this.startNode(e),new a.SequenceExpression(i))}return t},e.prototype.parseStatementListItem=function(){var e;if(this.context.isAssignmentTarget=!0,this.context.isBindingElement=!0,4===this.lookahead.type)switch(this.lookahead.value){case"export":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,n.Messages.IllegalExportDeclaration),e=this.parseExportDeclaration();break;case"import":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,n.Messages.IllegalImportDeclaration),e=this.parseImportDeclaration();break;case"const":e=this.parseLexicalDeclaration({inFor:!1});break;case"function":e=this.parseFunctionDeclaration();break;case"class":e=this.parseClassDeclaration();break;case"let":e=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:!1}):this.parseStatement();break;default:e=this.parseStatement()}else e=this.parseStatement();return e},e.prototype.parseBlock=function(){var e=this.createNode();this.expect("{");for(var t=[];!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.finalize(e,new a.BlockStatement(t))},e.prototype.parseLexicalBinding=function(e,t){var i=this.createNode(),s=this.parsePattern([],e);this.context.strict&&s.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(s.name)&&this.tolerateError(n.Messages.StrictVarName);var r=null;return"const"===e?this.matchKeyword("in")||this.matchContextualKeyword("of")||(this.match("=")?(this.nextToken(),r=this.isolateCoverGrammar(this.parseAssignmentExpression)):this.throwError(n.Messages.DeclarationMissingInitializer,"const")):(!t.inFor&&s.type!==u.Syntax.Identifier||this.match("="))&&(this.expect("="),r=this.isolateCoverGrammar(this.parseAssignmentExpression)),this.finalize(i,new a.VariableDeclarator(s,r))},e.prototype.parseBindingList=function(e,t){for(var i=[this.parseLexicalBinding(e,t)];this.match(",");)this.nextToken(),i.push(this.parseLexicalBinding(e,t));return i},e.prototype.isLexicalDeclaration=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.scanner.lex();return this.scanner.restoreState(e),3===t.type||7===t.type&&"["===t.value||7===t.type&&"{"===t.value||4===t.type&&"let"===t.value||4===t.type&&"yield"===t.value},e.prototype.parseLexicalDeclaration=function(e){var t=this.createNode(),i=this.nextToken().value;s.assert("let"===i||"const"===i,"Lexical declaration must be either let or const");var r=this.parseBindingList(i,e);return this.consumeSemicolon(),this.finalize(t,new a.VariableDeclaration(r,i))},e.prototype.parseBindingRestElement=function(e,t){var i=this.createNode();this.expect("...");var s=this.parsePattern(e,t);return this.finalize(i,new a.RestElement(s))},e.prototype.parseArrayPattern=function(e,t){var i=this.createNode();this.expect("[");for(var s=[];!this.match("]");)if(this.match(","))this.nextToken(),s.push(null);else{if(this.match("...")){s.push(this.parseBindingRestElement(e,t));break}s.push(this.parsePatternWithDefault(e,t)),this.match("]")||this.expect(",")}return this.expect("]"),this.finalize(i,new a.ArrayPattern(s))},e.prototype.parsePropertyPattern=function(e,t){var i,s,r=this.createNode(),n=!1,o=!1;if(3===this.lookahead.type){var u=this.lookahead;i=this.parseVariableIdentifier();var h=this.finalize(r,new a.Identifier(u.value));if(this.match("=")){e.push(u),o=!0,this.nextToken();var c=this.parseAssignmentExpression();s=this.finalize(this.startNode(u),new a.AssignmentPattern(h,c))}else this.match(":")?(this.expect(":"),s=this.parsePatternWithDefault(e,t)):(e.push(u),o=!0,s=h)}else n=this.match("["),i=this.parseObjectPropertyKey(),this.expect(":"),s=this.parsePatternWithDefault(e,t);return this.finalize(r,new a.Property("init",i,n,s,!1,o))},e.prototype.parseObjectPattern=function(e,t){var i=this.createNode(),s=[];for(this.expect("{");!this.match("}");)s.push(this.parsePropertyPattern(e,t)),this.match("}")||this.expect(",");return this.expect("}"),this.finalize(i,new a.ObjectPattern(s))},e.prototype.parsePattern=function(e,t){var i;return this.match("[")?i=this.parseArrayPattern(e,t):this.match("{")?i=this.parseObjectPattern(e,t):(!this.matchKeyword("let")||"const"!==t&&"let"!==t||this.tolerateUnexpectedToken(this.lookahead,n.Messages.LetInLexicalBinding),e.push(this.lookahead),i=this.parseVariableIdentifier(t)),i},e.prototype.parsePatternWithDefault=function(e,t){var i=this.lookahead,s=this.parsePattern(e,t);if(this.match("=")){this.nextToken();var r=this.context.allowYield;this.context.allowYield=!0;var n=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=r,s=this.finalize(this.startNode(i),new a.AssignmentPattern(s,n))}return s},e.prototype.parseVariableIdentifier=function(e){var t=this.createNode(),i=this.nextToken();return 4===i.type&&"yield"===i.value?this.context.strict?this.tolerateUnexpectedToken(i,n.Messages.StrictReservedWord):this.context.allowYield||this.throwUnexpectedToken(i):3!==i.type?this.context.strict&&4===i.type&&this.scanner.isStrictModeReservedWord(i.value)?this.tolerateUnexpectedToken(i,n.Messages.StrictReservedWord):(this.context.strict||"let"!==i.value||"var"!==e)&&this.throwUnexpectedToken(i):(this.context.isModule||this.context.await)&&3===i.type&&"await"===i.value&&this.tolerateUnexpectedToken(i),this.finalize(t,new a.Identifier(i.value))},e.prototype.parseVariableDeclaration=function(e){var t=this.createNode(),i=this.parsePattern([],"var");this.context.strict&&i.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(n.Messages.StrictVarName);var s=null;return this.match("=")?(this.nextToken(),s=this.isolateCoverGrammar(this.parseAssignmentExpression)):i.type===u.Syntax.Identifier||e.inFor||this.expect("="),this.finalize(t,new a.VariableDeclarator(i,s))},e.prototype.parseVariableDeclarationList=function(e){var t={inFor:e.inFor},i=[];for(i.push(this.parseVariableDeclaration(t));this.match(",");)this.nextToken(),i.push(this.parseVariableDeclaration(t));return i},e.prototype.parseVariableStatement=function(){var e=this.createNode();this.expectKeyword("var");var t=this.parseVariableDeclarationList({inFor:!1});return this.consumeSemicolon(),this.finalize(e,new a.VariableDeclaration(t,"var"))},e.prototype.parseEmptyStatement=function(){var e=this.createNode();return this.expect(";"),this.finalize(e,new a.EmptyStatement)},e.prototype.parseExpressionStatement=function(){var e=this.createNode(),t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ExpressionStatement(t))},e.prototype.parseIfClause=function(){return this.context.strict&&this.matchKeyword("function")&&this.tolerateError(n.Messages.StrictFunction),this.parseStatement()},e.prototype.parseIfStatement=function(){var e,t=this.createNode(),i=null;this.expectKeyword("if"),this.expect("(");var s=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement)):(this.expect(")"),e=this.parseIfClause(),this.matchKeyword("else")&&(this.nextToken(),i=this.parseIfClause())),this.finalize(t,new a.IfStatement(s,e,i))},e.prototype.parseDoWhileStatement=function(){var e=this.createNode();this.expectKeyword("do");var t=this.context.inIteration;this.context.inIteration=!0;var i=this.parseStatement();this.context.inIteration=t,this.expectKeyword("while"),this.expect("(");var s=this.parseExpression();return!this.match(")")&&this.config.tolerant?this.tolerateUnexpectedToken(this.nextToken()):(this.expect(")"),this.match(";")&&this.nextToken()),this.finalize(e,new a.DoWhileStatement(i,s))},e.prototype.parseWhileStatement=function(){var e,t=this.createNode();this.expectKeyword("while"),this.expect("(");var i=this.parseExpression();if(!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement);else{this.expect(")");var s=this.context.inIteration;this.context.inIteration=!0,e=this.parseStatement(),this.context.inIteration=s}return this.finalize(t,new a.WhileStatement(i,e))},e.prototype.parseForStatement=function(){var e,t,i,s=null,r=null,o=null,h=!0,c=this.createNode();if(this.expectKeyword("for"),this.expect("("),this.match(";"))this.nextToken();else if(this.matchKeyword("var")){s=this.createNode(),this.nextToken();var l=this.context.allowIn;this.context.allowIn=!1;var p=this.parseVariableDeclarationList({inFor:!0});if(this.context.allowIn=l,1===p.length&&this.matchKeyword("in")){var d=p[0];d.init&&(d.id.type===u.Syntax.ArrayPattern||d.id.type===u.Syntax.ObjectPattern||this.context.strict)&&this.tolerateError(n.Messages.ForInOfLoopInitializer,"for-in"),s=this.finalize(s,new a.VariableDeclaration(p,"var")),this.nextToken(),e=s,t=this.parseExpression(),s=null}else 1===p.length&&null===p[0].init&&this.matchContextualKeyword("of")?(s=this.finalize(s,new a.VariableDeclaration(p,"var")),this.nextToken(),e=s,t=this.parseAssignmentExpression(),s=null,h=!1):(s=this.finalize(s,new a.VariableDeclaration(p,"var")),this.expect(";"))}else if(this.matchKeyword("const")||this.matchKeyword("let")){s=this.createNode();var m=this.nextToken().value;if(this.context.strict||"in"!==this.lookahead.value){l=this.context.allowIn;this.context.allowIn=!1;p=this.parseBindingList(m,{inFor:!0});this.context.allowIn=l,1===p.length&&null===p[0].init&&this.matchKeyword("in")?(s=this.finalize(s,new a.VariableDeclaration(p,m)),this.nextToken(),e=s,t=this.parseExpression(),s=null):1===p.length&&null===p[0].init&&this.matchContextualKeyword("of")?(s=this.finalize(s,new a.VariableDeclaration(p,m)),this.nextToken(),e=s,t=this.parseAssignmentExpression(),s=null,h=!1):(this.consumeSemicolon(),s=this.finalize(s,new a.VariableDeclaration(p,m)))}else s=this.finalize(s,new a.Identifier(m)),this.nextToken(),e=s,t=this.parseExpression(),s=null}else{var x=this.lookahead;l=this.context.allowIn;if(this.context.allowIn=!1,s=this.inheritCoverGrammar(this.parseAssignmentExpression),this.context.allowIn=l,this.matchKeyword("in"))this.context.isAssignmentTarget&&s.type!==u.Syntax.AssignmentExpression||this.tolerateError(n.Messages.InvalidLHSInForIn),this.nextToken(),this.reinterpretExpressionAsPattern(s),e=s,t=this.parseExpression(),s=null;else if(this.matchContextualKeyword("of"))this.context.isAssignmentTarget&&s.type!==u.Syntax.AssignmentExpression||this.tolerateError(n.Messages.InvalidLHSInForLoop),this.nextToken(),this.reinterpretExpressionAsPattern(s),e=s,t=this.parseAssignmentExpression(),s=null,h=!1;else{if(this.match(",")){for(var D=[s];this.match(",");)this.nextToken(),D.push(this.isolateCoverGrammar(this.parseAssignmentExpression));s=this.finalize(this.startNode(x),new a.SequenceExpression(D))}this.expect(";")}}if(void 0===e&&(this.match(";")||(r=this.parseExpression()),this.expect(";"),this.match(")")||(o=this.parseExpression())),!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),i=this.finalize(this.createNode(),new a.EmptyStatement);else{this.expect(")");var f=this.context.inIteration;this.context.inIteration=!0,i=this.isolateCoverGrammar(this.parseStatement),this.context.inIteration=f}return void 0===e?this.finalize(c,new a.ForStatement(s,r,o,i)):h?this.finalize(c,new a.ForInStatement(e,t,i)):this.finalize(c,new a.ForOfStatement(e,t,i))},e.prototype.parseContinueStatement=function(){var e=this.createNode();this.expectKeyword("continue");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var i=this.parseVariableIdentifier();t=i;var s="$"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,s)||this.throwError(n.Messages.UnknownLabel,i.name)}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.throwError(n.Messages.IllegalContinue),this.finalize(e,new a.ContinueStatement(t))},e.prototype.parseBreakStatement=function(){var e=this.createNode();this.expectKeyword("break");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var i=this.parseVariableIdentifier(),s="$"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,s)||this.throwError(n.Messages.UnknownLabel,i.name),t=i}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.context.inSwitch||this.throwError(n.Messages.IllegalBreak),this.finalize(e,new a.BreakStatement(t))},e.prototype.parseReturnStatement=function(){this.context.inFunctionBody||this.tolerateError(n.Messages.IllegalReturn);var e=this.createNode();this.expectKeyword("return");var t=!this.match(";")&&!this.match("}")&&!this.hasLineTerminator&&2!==this.lookahead.type||8===this.lookahead.type||10===this.lookahead.type?this.parseExpression():null;return this.consumeSemicolon(),this.finalize(e,new a.ReturnStatement(t))},e.prototype.parseWithStatement=function(){this.context.strict&&this.tolerateError(n.Messages.StrictModeWith);var e,t=this.createNode();this.expectKeyword("with"),this.expect("(");var i=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new a.EmptyStatement)):(this.expect(")"),e=this.parseStatement()),this.finalize(t,new a.WithStatement(i,e))},e.prototype.parseSwitchCase=function(){var e,t=this.createNode();this.matchKeyword("default")?(this.nextToken(),e=null):(this.expectKeyword("case"),e=this.parseExpression()),this.expect(":");for(var i=[];!(this.match("}")||this.matchKeyword("default")||this.matchKeyword("case"));)i.push(this.parseStatementListItem());return this.finalize(t,new a.SwitchCase(e,i))},e.prototype.parseSwitchStatement=function(){var e=this.createNode();this.expectKeyword("switch"),this.expect("(");var t=this.parseExpression();this.expect(")");var i=this.context.inSwitch;this.context.inSwitch=!0;var s=[],r=!1;for(this.expect("{");!this.match("}");){var o=this.parseSwitchCase();null===o.test&&(r&&this.throwError(n.Messages.MultipleDefaultsInSwitch),r=!0),s.push(o)}return this.expect("}"),this.context.inSwitch=i,this.finalize(e,new a.SwitchStatement(t,s))},e.prototype.parseLabelledStatement=function(){var e,t=this.createNode(),i=this.parseExpression();if(i.type===u.Syntax.Identifier&&this.match(":")){this.nextToken();var s=i,r="$"+s.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,r)&&this.throwError(n.Messages.Redeclaration,"Label",s.name),this.context.labelSet[r]=!0;var o=void 0;if(this.matchKeyword("class"))this.tolerateUnexpectedToken(this.lookahead),o=this.parseClassDeclaration();else if(this.matchKeyword("function")){var h=this.lookahead,c=this.parseFunctionDeclaration();this.context.strict?this.tolerateUnexpectedToken(h,n.Messages.StrictFunction):c.generator&&this.tolerateUnexpectedToken(h,n.Messages.GeneratorInLegacyContext),o=c}else o=this.parseStatement();delete this.context.labelSet[r],e=new a.LabeledStatement(s,o)}else this.consumeSemicolon(),e=new a.ExpressionStatement(i);return this.finalize(t,e)},e.prototype.parseThrowStatement=function(){var e=this.createNode();this.expectKeyword("throw"),this.hasLineTerminator&&this.throwError(n.Messages.NewlineAfterThrow);var t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new a.ThrowStatement(t))},e.prototype.parseCatchClause=function(){var e=this.createNode();this.expectKeyword("catch"),this.expect("("),this.match(")")&&this.throwUnexpectedToken(this.lookahead);for(var t=[],i=this.parsePattern(t),s={},r=0;r<t.length;r++){var o="$"+t[r].value;Object.prototype.hasOwnProperty.call(s,o)&&this.tolerateError(n.Messages.DuplicateBinding,t[r].value),s[o]=!0}this.context.strict&&i.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(n.Messages.StrictCatchVariable),this.expect(")");var h=this.parseBlock();return this.finalize(e,new a.CatchClause(i,h))},e.prototype.parseFinallyClause=function(){return this.expectKeyword("finally"),this.parseBlock()},e.prototype.parseTryStatement=function(){var e=this.createNode();this.expectKeyword("try");var t=this.parseBlock(),i=this.matchKeyword("catch")?this.parseCatchClause():null,s=this.matchKeyword("finally")?this.parseFinallyClause():null;return i||s||this.throwError(n.Messages.NoCatchOrFinally),this.finalize(e,new a.TryStatement(t,i,s))},e.prototype.parseDebuggerStatement=function(){var e=this.createNode();return this.expectKeyword("debugger"),this.consumeSemicolon(),this.finalize(e,new a.DebuggerStatement)},e.prototype.parseStatement=function(){var e;switch(this.lookahead.type){case 1:case 5:case 6:case 8:case 10:case 9:e=this.parseExpressionStatement();break;case 7:var t=this.lookahead.value;e="{"===t?this.parseBlock():"("===t?this.parseExpressionStatement():";"===t?this.parseEmptyStatement():this.parseExpressionStatement();break;case 3:e=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4:switch(this.lookahead.value){case"break":e=this.parseBreakStatement();break;case"continue":e=this.parseContinueStatement();break;case"debugger":e=this.parseDebuggerStatement();break;case"do":e=this.parseDoWhileStatement();break;case"for":e=this.parseForStatement();break;case"function":e=this.parseFunctionDeclaration();break;case"if":e=this.parseIfStatement();break;case"return":e=this.parseReturnStatement();break;case"switch":e=this.parseSwitchStatement();break;case"throw":e=this.parseThrowStatement();break;case"try":e=this.parseTryStatement();break;case"var":e=this.parseVariableStatement();break;case"while":e=this.parseWhileStatement();break;case"with":e=this.parseWithStatement();break;default:e=this.parseExpressionStatement()}break;default:e=this.throwUnexpectedToken(this.lookahead)}return e},e.prototype.parseFunctionSourceElements=function(){var e=this.createNode();this.expect("{");var t=this.parseDirectivePrologues(),i=this.context.labelSet,s=this.context.inIteration,r=this.context.inSwitch,n=this.context.inFunctionBody;for(this.context.labelSet={},this.context.inIteration=!1,this.context.inSwitch=!1,this.context.inFunctionBody=!0;2!==this.lookahead.type&&!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.context.labelSet=i,this.context.inIteration=s,this.context.inSwitch=r,this.context.inFunctionBody=n,this.finalize(e,new a.BlockStatement(t))},e.prototype.validateParam=function(e,t,i){var s="$"+i;this.context.strict?(this.scanner.isRestrictedWord(i)&&(e.stricted=t,e.message=n.Messages.StrictParamName),Object.prototype.hasOwnProperty.call(e.paramSet,s)&&(e.stricted=t,e.message=n.Messages.StrictParamDupe)):e.firstRestricted||(this.scanner.isRestrictedWord(i)?(e.firstRestricted=t,e.message=n.Messages.StrictParamName):this.scanner.isStrictModeReservedWord(i)?(e.firstRestricted=t,e.message=n.Messages.StrictReservedWord):Object.prototype.hasOwnProperty.call(e.paramSet,s)&&(e.stricted=t,e.message=n.Messages.StrictParamDupe)),"function"==typeof Object.defineProperty?Object.defineProperty(e.paramSet,s,{value:!0,enumerable:!0,writable:!0,configurable:!0}):e.paramSet[s]=!0},e.prototype.parseRestElement=function(e){var t=this.createNode();this.expect("...");var i=this.parsePattern(e);return this.match("=")&&this.throwError(n.Messages.DefaultRestParameter),this.match(")")||this.throwError(n.Messages.ParameterAfterRestParameter),this.finalize(t,new a.RestElement(i))},e.prototype.parseFormalParameter=function(e){for(var t=[],i=this.match("...")?this.parseRestElement(t):this.parsePatternWithDefault(t),s=0;s<t.length;s++)this.validateParam(e,t[s],t[s].value);e.simple=e.simple&&i instanceof a.Identifier,e.params.push(i)},e.prototype.parseFormalParameters=function(e){var t;if(t={simple:!0,params:[],firstRestricted:e},this.expect("("),!this.match(")"))for(t.paramSet={};2!==this.lookahead.type&&(this.parseFormalParameter(t),!this.match(")"))&&(this.expect(","),!this.match(")")););return this.expect(")"),{simple:t.simple,params:t.params,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.matchAsyncFunction=function(){var e=this.matchContextualKeyword("async");if(e){var t=this.scanner.saveState();this.scanner.scanComments();var i=this.scanner.lex();this.scanner.restoreState(t),e=t.lineNumber===i.lineNumber&&4===i.type&&"function"===i.value}return e},e.prototype.parseFunctionDeclaration=function(e){var t=this.createNode(),i=this.matchContextualKeyword("async");i&&this.nextToken(),this.expectKeyword("function");var s,r=!i&&this.match("*");r&&this.nextToken();var o=null,u=null;if(!e||!this.match("(")){var h=this.lookahead;o=this.parseVariableIdentifier(),this.context.strict?this.scanner.isRestrictedWord(h.value)&&this.tolerateUnexpectedToken(h,n.Messages.StrictFunctionName):this.scanner.isRestrictedWord(h.value)?(u=h,s=n.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(h.value)&&(u=h,s=n.Messages.StrictReservedWord)}var c=this.context.await,l=this.context.allowYield;this.context.await=i,this.context.allowYield=!r;var p=this.parseFormalParameters(u),d=p.params,m=p.stricted;u=p.firstRestricted,p.message&&(s=p.message);var x=this.context.strict,D=this.context.allowStrictDirective;this.context.allowStrictDirective=p.simple;var f=this.parseFunctionSourceElements();return this.context.strict&&u&&this.throwUnexpectedToken(u,s),this.context.strict&&m&&this.tolerateUnexpectedToken(m,s),this.context.strict=x,this.context.allowStrictDirective=D,this.context.await=c,this.context.allowYield=l,i?this.finalize(t,new a.AsyncFunctionDeclaration(o,d,f)):this.finalize(t,new a.FunctionDeclaration(o,d,f,r))},e.prototype.parseFunctionExpression=function(){var e=this.createNode(),t=this.matchContextualKeyword("async");t&&this.nextToken(),this.expectKeyword("function");var i,s=!t&&this.match("*");s&&this.nextToken();var r,o=null,u=this.context.await,h=this.context.allowYield;if(this.context.await=t,this.context.allowYield=!s,!this.match("(")){var c=this.lookahead;o=this.context.strict||s||!this.matchKeyword("yield")?this.parseVariableIdentifier():this.parseIdentifierName(),this.context.strict?this.scanner.isRestrictedWord(c.value)&&this.tolerateUnexpectedToken(c,n.Messages.StrictFunctionName):this.scanner.isRestrictedWord(c.value)?(r=c,i=n.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(c.value)&&(r=c,i=n.Messages.StrictReservedWord)}var l=this.parseFormalParameters(r),p=l.params,d=l.stricted;r=l.firstRestricted,l.message&&(i=l.message);var m=this.context.strict,x=this.context.allowStrictDirective;this.context.allowStrictDirective=l.simple;var D=this.parseFunctionSourceElements();return this.context.strict&&r&&this.throwUnexpectedToken(r,i),this.context.strict&&d&&this.tolerateUnexpectedToken(d,i),this.context.strict=m,this.context.allowStrictDirective=x,this.context.await=u,this.context.allowYield=h,t?this.finalize(e,new a.AsyncFunctionExpression(o,p,D)):this.finalize(e,new a.FunctionExpression(o,p,D,s))},e.prototype.parseDirective=function(){var e=this.lookahead,t=this.createNode(),i=this.parseExpression(),s=i.type===u.Syntax.Literal?this.getTokenRaw(e).slice(1,-1):null;return this.consumeSemicolon(),this.finalize(t,s?new a.Directive(i,s):new a.ExpressionStatement(i))},e.prototype.parseDirectivePrologues=function(){for(var e=null,t=[];;){var i=this.lookahead;if(8!==i.type)break;var s=this.parseDirective();t.push(s);var r=s.directive;if("string"!=typeof r)break;"use strict"===r?(this.context.strict=!0,e&&this.tolerateUnexpectedToken(e,n.Messages.StrictOctalLiteral),this.context.allowStrictDirective||this.tolerateUnexpectedToken(i,n.Messages.IllegalLanguageModeDirective)):!e&&i.octal&&(e=i)}return t},e.prototype.qualifiedPropertyName=function(e){switch(e.type){case 3:case 8:case 1:case 5:case 6:case 4:return!0;case 7:return"["===e.value}return!1},e.prototype.parseGetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();i.params.length>0&&this.tolerateError(n.Messages.BadGetterArity);var s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!1))},e.prototype.parseSetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();1!==i.params.length?this.tolerateError(n.Messages.BadSetterArity):i.params[0]instanceof a.RestElement&&this.tolerateError(n.Messages.BadSetterRestParameter);var s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!1))},e.prototype.parseGeneratorMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var i=this.parseFormalParameters();this.context.allowYield=!1;var s=this.parsePropertyMethod(i);return this.context.allowYield=t,this.finalize(e,new a.FunctionExpression(null,i.params,s,!0))},e.prototype.isStartOfExpression=function(){var e=!0,t=this.lookahead.value;switch(this.lookahead.type){case 7:e="["===t||"("===t||"{"===t||"+"===t||"-"===t||"!"===t||"~"===t||"++"===t||"--"===t||"/"===t||"/="===t;break;case 4:e="class"===t||"delete"===t||"function"===t||"let"===t||"new"===t||"super"===t||"this"===t||"typeof"===t||"void"===t||"yield"===t}return e},e.prototype.parseYieldExpression=function(){var e=this.createNode();this.expectKeyword("yield");var t=null,i=!1;if(!this.hasLineTerminator){var s=this.context.allowYield;this.context.allowYield=!1,(i=this.match("*"))?(this.nextToken(),t=this.parseAssignmentExpression()):this.isStartOfExpression()&&(t=this.parseAssignmentExpression()),this.context.allowYield=s}return this.finalize(e,new a.YieldExpression(t,i))},e.prototype.parseClassElement=function(e){var t=this.lookahead,i=this.createNode(),s="",r=null,o=null,u=!1,h=!1,c=!1,l=!1;if(this.match("*"))this.nextToken();else if(u=this.match("["),"static"===(r=this.parseObjectPropertyKey()).name&&(this.qualifiedPropertyName(this.lookahead)||this.match("*"))&&(t=this.lookahead,c=!0,u=this.match("["),this.match("*")?this.nextToken():r=this.parseObjectPropertyKey()),3===t.type&&!this.hasLineTerminator&&"async"===t.value){var p=this.lookahead.value;":"!==p&&"("!==p&&"*"!==p&&(l=!0,t=this.lookahead,r=this.parseObjectPropertyKey(),3===t.type&&"constructor"===t.value&&this.tolerateUnexpectedToken(t,n.Messages.ConstructorIsAsync))}var d=this.qualifiedPropertyName(this.lookahead);return 3===t.type?"get"===t.value&&d?(s="get",u=this.match("["),r=this.parseObjectPropertyKey(),this.context.allowYield=!1,o=this.parseGetterMethod()):"set"===t.value&&d&&(s="set",u=this.match("["),r=this.parseObjectPropertyKey(),o=this.parseSetterMethod()):7===t.type&&"*"===t.value&&d&&(s="init",u=this.match("["),r=this.parseObjectPropertyKey(),o=this.parseGeneratorMethod(),h=!0),!s&&r&&this.match("(")&&(s="init",o=l?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),h=!0),s||this.throwUnexpectedToken(this.lookahead),"init"===s&&(s="method"),u||(c&&this.isPropertyKey(r,"prototype")&&this.throwUnexpectedToken(t,n.Messages.StaticPrototype),!c&&this.isPropertyKey(r,"constructor")&&(("method"!==s||!h||o&&o.generator)&&this.throwUnexpectedToken(t,n.Messages.ConstructorSpecialMethod),e.value?this.throwUnexpectedToken(t,n.Messages.DuplicateConstructor):e.value=!0,s="constructor")),this.finalize(i,new a.MethodDefinition(r,u,o,s,c))},e.prototype.parseClassElementList=function(){var e=[],t={value:!1};for(this.expect("{");!this.match("}");)this.match(";")?this.nextToken():e.push(this.parseClassElement(t));return this.expect("}"),e},e.prototype.parseClassBody=function(){var e=this.createNode(),t=this.parseClassElementList();return this.finalize(e,new a.ClassBody(t))},e.prototype.parseClassDeclaration=function(e){var t=this.createNode(),i=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var s=e&&3!==this.lookahead.type?null:this.parseVariableIdentifier(),r=null;this.matchKeyword("extends")&&(this.nextToken(),r=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var n=this.parseClassBody();return this.context.strict=i,this.finalize(t,new a.ClassDeclaration(s,r,n))},e.prototype.parseClassExpression=function(){var e=this.createNode(),t=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var i=3===this.lookahead.type?this.parseVariableIdentifier():null,s=null;this.matchKeyword("extends")&&(this.nextToken(),s=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var r=this.parseClassBody();return this.context.strict=t,this.finalize(e,new a.ClassExpression(i,s,r))},e.prototype.parseModule=function(){this.context.strict=!0,this.context.isModule=!0,this.scanner.isModule=!0;for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new a.Module(t))},e.prototype.parseScript=function(){for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new a.Script(t))},e.prototype.parseModuleSpecifier=function(){var e=this.createNode();8!==this.lookahead.type&&this.throwError(n.Messages.InvalidModuleSpecifier);var t=this.nextToken(),i=this.getTokenRaw(t);return this.finalize(e,new a.Literal(t.value,i))},e.prototype.parseImportSpecifier=function(){var e,t,i=this.createNode();return 3===this.lookahead.type?(t=e=this.parseVariableIdentifier(),this.matchContextualKeyword("as")&&(this.nextToken(),t=this.parseVariableIdentifier())):(t=e=this.parseIdentifierName(),this.matchContextualKeyword("as")?(this.nextToken(),t=this.parseVariableIdentifier()):this.throwUnexpectedToken(this.nextToken())),this.finalize(i,new a.ImportSpecifier(t,e))},e.prototype.parseNamedImports=function(){this.expect("{");for(var e=[];!this.match("}");)e.push(this.parseImportSpecifier()),this.match("}")||this.expect(",");return this.expect("}"),e},e.prototype.parseImportDefaultSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName();return this.finalize(e,new a.ImportDefaultSpecifier(t))},e.prototype.parseImportNamespaceSpecifier=function(){var e=this.createNode();this.expect("*"),this.matchContextualKeyword("as")||this.throwError(n.Messages.NoAsAfterImportNamespace),this.nextToken();var t=this.parseIdentifierName();return this.finalize(e,new a.ImportNamespaceSpecifier(t))},e.prototype.parseImportDeclaration=function(){this.context.inFunctionBody&&this.throwError(n.Messages.IllegalImportDeclaration);var e,t=this.createNode();this.expectKeyword("import");var i=[];if(8===this.lookahead.type)e=this.parseModuleSpecifier();else{if(this.match("{")?i=i.concat(this.parseNamedImports()):this.match("*")?i.push(this.parseImportNamespaceSpecifier()):this.isIdentifierName(this.lookahead)&&!this.matchKeyword("default")?(i.push(this.parseImportDefaultSpecifier()),this.match(",")&&(this.nextToken(),this.match("*")?i.push(this.parseImportNamespaceSpecifier()):this.match("{")?i=i.concat(this.parseNamedImports()):this.throwUnexpectedToken(this.lookahead))):this.throwUnexpectedToken(this.nextToken()),!this.matchContextualKeyword("from")){var s=this.lookahead.value?n.Messages.UnexpectedToken:n.Messages.MissingFromClause;this.throwError(s,this.lookahead.value)}this.nextToken(),e=this.parseModuleSpecifier()}return this.consumeSemicolon(),this.finalize(t,new a.ImportDeclaration(i,e))},e.prototype.parseExportSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName(),i=t;return this.matchContextualKeyword("as")&&(this.nextToken(),i=this.parseIdentifierName()),this.finalize(e,new a.ExportSpecifier(t,i))},e.prototype.parseExportDeclaration=function(){this.context.inFunctionBody&&this.throwError(n.Messages.IllegalExportDeclaration);var e,t=this.createNode();if(this.expectKeyword("export"),this.matchKeyword("default"))if(this.nextToken(),this.matchKeyword("function")){var i=this.parseFunctionDeclaration(!0);e=this.finalize(t,new a.ExportDefaultDeclaration(i))}else if(this.matchKeyword("class")){i=this.parseClassDeclaration(!0);e=this.finalize(t,new a.ExportDefaultDeclaration(i))}else if(this.matchContextualKeyword("async")){i=this.matchAsyncFunction()?this.parseFunctionDeclaration(!0):this.parseAssignmentExpression();e=this.finalize(t,new a.ExportDefaultDeclaration(i))}else{this.matchContextualKeyword("from")&&this.throwError(n.Messages.UnexpectedToken,this.lookahead.value);i=this.match("{")?this.parseObjectInitializer():this.match("[")?this.parseArrayInitializer():this.parseAssignmentExpression();this.consumeSemicolon(),e=this.finalize(t,new a.ExportDefaultDeclaration(i))}else if(this.match("*")){if(this.nextToken(),!this.matchContextualKeyword("from")){var s=this.lookahead.value?n.Messages.UnexpectedToken:n.Messages.MissingFromClause;this.throwError(s,this.lookahead.value)}this.nextToken();var r=this.parseModuleSpecifier();this.consumeSemicolon(),e=this.finalize(t,new a.ExportAllDeclaration(r))}else if(4===this.lookahead.type){i=void 0;switch(this.lookahead.value){case"let":case"const":i=this.parseLexicalDeclaration({inFor:!1});break;case"var":case"class":case"function":i=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead)}e=this.finalize(t,new a.ExportNamedDeclaration(i,[],null))}else if(this.matchAsyncFunction()){i=this.parseFunctionDeclaration();e=this.finalize(t,new a.ExportNamedDeclaration(i,[],null))}else{var o=[],u=null,h=!1;for(this.expect("{");!this.match("}");)h=h||this.matchKeyword("default"),o.push(this.parseExportSpecifier()),this.match("}")||this.expect(",");if(this.expect("}"),this.matchContextualKeyword("from"))this.nextToken(),u=this.parseModuleSpecifier(),this.consumeSemicolon();else if(h){s=this.lookahead.value?n.Messages.UnexpectedToken:n.Messages.MissingFromClause;this.throwError(s,this.lookahead.value)}else this.consumeSemicolon();e=this.finalize(t,new a.ExportNamedDeclaration(null,o,u))}return e},e}();t.Parser=c},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=function(e,t){if(!e)throw new Error("ASSERT: "+t)}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(){this.errors=[],this.tolerant=!1}return e.prototype.recordError=function(e){this.errors.push(e)},e.prototype.tolerate=function(e){if(!this.tolerant)throw e;this.recordError(e)},e.prototype.constructError=function(e,t){var i=new Error(e);try{throw i}catch(e){Object.create&&Object.defineProperty&&(i=Object.create(e),Object.defineProperty(i,"column",{value:t}))}return i},e.prototype.createError=function(e,t,i,s){var r="Line "+t+": "+s,n=this.constructError(r,i);return n.index=e,n.lineNumber=t,n.description=s,n},e.prototype.throwError=function(e,t,i,s){throw this.createError(e,t,i,s)},e.prototype.tolerateError=function(e,t,i,s){var r=this.createError(e,t,i,s);if(!this.tolerant)throw r;this.recordError(r)},e}();t.ErrorHandler=i},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Messages={BadGetterArity:"Getter must not have any formal parameters",BadSetterArity:"Setter must have exactly one formal parameter",BadSetterRestParameter:"Setter function argument must not be a rest parameter",ConstructorIsAsync:"Class constructor may not be an async method",ConstructorSpecialMethod:"Class constructor may not be an accessor",DeclarationMissingInitializer:"Missing initializer in %0 declaration",DefaultRestParameter:"Unexpected token =",DuplicateBinding:"Duplicate binding %0",DuplicateConstructor:"A class may only have one constructor",DuplicateProtoProperty:"Duplicate __proto__ fields are not allowed in object literals",ForInOfLoopInitializer:"%0 loop variable declaration may not have an initializer",GeneratorInLegacyContext:"Generator declarations are not allowed in legacy contexts",IllegalBreak:"Illegal break statement",IllegalContinue:"Illegal continue statement",IllegalExportDeclaration:"Unexpected token",IllegalImportDeclaration:"Unexpected token",IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list",IllegalReturn:"Illegal return statement",InvalidEscapedReservedWord:"Keyword must not contain escaped characters",InvalidHexEscapeSequence:"Invalid hexadecimal escape sequence",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",InvalidLHSInForLoop:"Invalid left-hand side in for-loop",InvalidModuleSpecifier:"Unexpected token",InvalidRegExp:"Invalid regular expression",LetInLexicalBinding:"let is disallowed as a lexically bound name",MissingFromClause:"Unexpected token",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NewlineAfterThrow:"Illegal newline after throw",NoAsAfterImportNamespace:"Unexpected token",NoCatchOrFinally:"Missing catch or finally after try",ParameterAfterRestParameter:"Rest parameter must be last formal parameter",Redeclaration:"%0 '%1' has already been declared",StaticPrototype:"Classes may not have static property named prototype",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictModeWith:"Strict mode code may not include a with statement",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictReservedWord:"Use of future reserved word in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",TemplateOctalLiteral:"Octal literals are not allowed in template strings.",UnexpectedEOS:"Unexpected end of input",UnexpectedIdentifier:"Unexpected identifier",UnexpectedNumber:"Unexpected number",UnexpectedReserved:"Unexpected reserved word",UnexpectedString:"Unexpected string",UnexpectedTemplate:"Unexpected quasi %0",UnexpectedToken:"Unexpected token %0",UnexpectedTokenIllegal:"Unexpected token ILLEGAL",UnknownLabel:"Undefined label '%0'",UnterminatedRegExp:"Invalid regular expression: missing /"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(9),r=i(4),n=i(11);function a(e){return"0123456789abcdef".indexOf(e.toLowerCase())}function o(e){return"01234567".indexOf(e)}var u=function(){function e(e,t){this.source=e,this.errorHandler=t,this.trackComment=!1,this.isModule=!1,this.length=e.length,this.index=0,this.lineNumber=e.length>0?1:0,this.lineStart=0,this.curlyStack=[]}return e.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart}},e.prototype.restoreState=function(e){this.index=e.index,this.lineNumber=e.lineNumber,this.lineStart=e.lineStart},e.prototype.eof=function(){return this.index>=this.length},e.prototype.throwUnexpectedToken=function(e){return void 0===e&&(e=n.Messages.UnexpectedTokenIllegal),this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.tolerateUnexpectedToken=function(e){void 0===e&&(e=n.Messages.UnexpectedTokenIllegal),this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.skipSingleLineComment=function(e){var t,i,s=[];for(this.trackComment&&(s=[],t=this.index-e,i={start:{line:this.lineNumber,column:this.index-this.lineStart-e},end:{}});!this.eof();){var n=this.source.charCodeAt(this.index);if(++this.index,r.Character.isLineTerminator(n)){if(this.trackComment){i.end={line:this.lineNumber,column:this.index-this.lineStart-1};var a={multiLine:!1,slice:[t+e,this.index-1],range:[t,this.index-1],loc:i};s.push(a)}return 13===n&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,s}}if(this.trackComment){i.end={line:this.lineNumber,column:this.index-this.lineStart};a={multiLine:!1,slice:[t+e,this.index],range:[t,this.index],loc:i};s.push(a)}return s},e.prototype.skipMultiLineComment=function(){var e,t,i=[];for(this.trackComment&&(i=[],e=this.index-2,t={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){var s=this.source.charCodeAt(this.index);if(r.Character.isLineTerminator(s))13===s&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===s){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart};var n={multiLine:!0,slice:[e+2,this.index-2],range:[e,this.index],loc:t};i.push(n)}return i}++this.index}else++this.index}if(this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart};n={multiLine:!0,slice:[e+2,this.index],range:[e,this.index],loc:t};i.push(n)}return this.tolerateUnexpectedToken(),i},e.prototype.scanComments=function(){var e;this.trackComment&&(e=[]);for(var t=0===this.index;!this.eof();){var i=this.source.charCodeAt(this.index);if(r.Character.isWhiteSpace(i))++this.index;else if(r.Character.isLineTerminator(i))++this.index,13===i&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,t=!0;else if(47===i)if(47===(i=this.source.charCodeAt(this.index+1))){this.index+=2;var s=this.skipSingleLineComment(2);this.trackComment&&(e=e.concat(s)),t=!0}else{if(42!==i)break;this.index+=2;s=this.skipMultiLineComment();this.trackComment&&(e=e.concat(s))}else if(t&&45===i){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;this.index+=3;s=this.skipSingleLineComment(3);this.trackComment&&(e=e.concat(s))}else{if(60!==i||this.isModule)break;if("!--"!==this.source.slice(this.index+1,this.index+4))break;this.index+=4;s=this.skipSingleLineComment(4);this.trackComment&&(e=e.concat(s))}}return e},e.prototype.isFutureReservedWord=function(e){switch(e){case"enum":case"export":case"import":case"super":return!0;default:return!1}},e.prototype.isStrictModeReservedWord=function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}},e.prototype.isRestrictedWord=function(e){return"eval"===e||"arguments"===e},e.prototype.isKeyword=function(e){switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}},e.prototype.codePointAt=function(e){var t=this.source.charCodeAt(e);if(t>=55296&&t<=56319){var i=this.source.charCodeAt(e+1);if(i>=56320&&i<=57343)t=1024*(t-55296)+i-56320+65536}return t},e.prototype.scanHexEscape=function(e){for(var t="u"===e?4:2,i=0,s=0;s<t;++s){if(this.eof()||!r.Character.isHexDigit(this.source.charCodeAt(this.index)))return null;i=16*i+a(this.source[this.index++])}return String.fromCharCode(i)},e.prototype.scanUnicodeCodePointEscape=function(){var e=this.source[this.index],t=0;for("}"===e&&this.throwUnexpectedToken();!this.eof()&&(e=this.source[this.index++],r.Character.isHexDigit(e.charCodeAt(0)));)t=16*t+a(e);return(t>1114111||"}"!==e)&&this.throwUnexpectedToken(),r.Character.fromCodePoint(t)},e.prototype.getIdentifier=function(){for(var e=this.index++;!this.eof();){var t=this.source.charCodeAt(this.index);if(92===t)return this.index=e,this.getComplexIdentifier();if(t>=55296&&t<57343)return this.index=e,this.getComplexIdentifier();if(!r.Character.isIdentifierPart(t))break;++this.index}return this.source.slice(e,this.index)},e.prototype.getComplexIdentifier=function(){var e,t=this.codePointAt(this.index),i=r.Character.fromCodePoint(t);for(this.index+=i.length,92===t&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&r.Character.isIdentifierStart(e.charCodeAt(0))||this.throwUnexpectedToken(),i=e);!this.eof()&&(t=this.codePointAt(this.index),r.Character.isIdentifierPart(t));)i+=e=r.Character.fromCodePoint(t),this.index+=e.length,92===t&&(i=i.substr(0,i.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&r.Character.isIdentifierPart(e.charCodeAt(0))||this.throwUnexpectedToken(),i+=e);return i},e.prototype.octalToDecimal=function(e){var t="0"!==e,i=o(e);return!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(t=!0,i=8*i+o(this.source[this.index++]),"0123".indexOf(e)>=0&&!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(i=8*i+o(this.source[this.index++]))),{code:i,octal:t}},e.prototype.scanIdentifier=function(){var e,t=this.index,i=92===this.source.charCodeAt(t)?this.getComplexIdentifier():this.getIdentifier();if(3!==(e=1===i.length?3:this.isKeyword(i)?4:"null"===i?5:"true"===i||"false"===i?1:3)&&t+i.length!==this.index){var s=this.index;this.index=t,this.tolerateUnexpectedToken(n.Messages.InvalidEscapedReservedWord),this.index=s}return{type:e,value:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.scanPunctuator=function(){var e=this.index,t=this.source[this.index];switch(t){case"(":case"{":"{"===t&&this.curlyStack.push("{"),++this.index;break;case".":++this.index,"."===this.source[this.index]&&"."===this.source[this.index+1]&&(this.index+=2,t="...");break;case"}":++this.index,this.curlyStack.pop();break;case")":case";":case",":case"[":case"]":case":":case"?":case"~":++this.index;break;default:">>>="===(t=this.source.substr(this.index,4))?this.index+=4:"==="===(t=t.substr(0,3))||"!=="===t||">>>"===t||"<<="===t||">>="===t||"**="===t?this.index+=3:"&&"===(t=t.substr(0,2))||"||"===t||"=="===t||"!="===t||"+="===t||"-="===t||"*="===t||"/="===t||"++"===t||"--"===t||"<<"===t||">>"===t||"&="===t||"|="===t||"^="===t||"%="===t||"<="===t||">="===t||"=>"===t||"**"===t?this.index+=2:(t=this.source[this.index],"<>=!+-*%&|^/".indexOf(t)>=0&&++this.index)}return this.index===e&&this.throwUnexpectedToken(),{type:7,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanHexLiteral=function(e){for(var t="";!this.eof()&&r.Character.isHexDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];return 0===t.length&&this.throwUnexpectedToken(),r.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt("0x"+t,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanBinaryLiteral=function(e){for(var t,i="";!this.eof()&&("0"===(t=this.source[this.index])||"1"===t);)i+=this.source[this.index++];return 0===i.length&&this.throwUnexpectedToken(),this.eof()||(t=this.source.charCodeAt(this.index),(r.Character.isIdentifierStart(t)||r.Character.isDecimalDigit(t))&&this.throwUnexpectedToken()),{type:6,value:parseInt(i,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanOctalLiteral=function(e,t){var i="",s=!1;for(r.Character.isOctalDigit(e.charCodeAt(0))?(s=!0,i="0"+this.source[this.index++]):++this.index;!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];return s||0!==i.length||this.throwUnexpectedToken(),(r.Character.isIdentifierStart(this.source.charCodeAt(this.index))||r.Character.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(i,8),octal:s,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.isImplicitOctalLiteral=function(){for(var e=this.index+1;e<this.length;++e){var t=this.source[e];if("8"===t||"9"===t)return!1;if(!r.Character.isOctalDigit(t.charCodeAt(0)))return!0}return!0},e.prototype.scanNumericLiteral=function(){var e=this.index,t=this.source[e];s.assert(r.Character.isDecimalDigit(t.charCodeAt(0))||"."===t,"Numeric literal must start with a decimal digit or a decimal point");var i="";if("."!==t){if(i=this.source[this.index++],t=this.source[this.index],"0"===i){if("x"===t||"X"===t)return++this.index,this.scanHexLiteral(e);if("b"===t||"B"===t)return++this.index,this.scanBinaryLiteral(e);if("o"===t||"O"===t)return this.scanOctalLiteral(t,e);if(t&&r.Character.isOctalDigit(t.charCodeAt(0))&&this.isImplicitOctalLiteral())return this.scanOctalLiteral(t,e)}for(;r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];t=this.source[this.index]}if("."===t){for(i+=this.source[this.index++];r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];t=this.source[this.index]}if("e"===t||"E"===t)if(i+=this.source[this.index++],"+"!==(t=this.source[this.index])&&"-"!==t||(i+=this.source[this.index++]),r.Character.isDecimalDigit(this.source.charCodeAt(this.index)))for(;r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)i+=this.source[this.index++];else this.throwUnexpectedToken();return r.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanStringLiteral=function(){var e=this.index,t=this.source[e];s.assert("'"===t||'"'===t,"String literal must starts with a quote"),++this.index;for(var i=!1,a="";!this.eof();){var o=this.source[this.index++];if(o===t){t="";break}if("\\"===o)if((o=this.source[this.index++])&&r.Character.isLineTerminator(o.charCodeAt(0)))++this.lineNumber,"\r"===o&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(o){case"u":if("{"===this.source[this.index])++this.index,a+=this.scanUnicodeCodePointEscape();else{var u=this.scanHexEscape(o);null===u&&this.throwUnexpectedToken(),a+=u}break;case"x":var h=this.scanHexEscape(o);null===h&&this.throwUnexpectedToken(n.Messages.InvalidHexEscapeSequence),a+=h;break;case"n":a+="\n";break;case"r":a+="\r";break;case"t":a+="\t";break;case"b":a+="\b";break;case"f":a+="\f";break;case"v":a+="\v";break;case"8":case"9":a+=o,this.tolerateUnexpectedToken();break;default:if(o&&r.Character.isOctalDigit(o.charCodeAt(0))){var c=this.octalToDecimal(o);i=c.octal||i,a+=String.fromCharCode(c.code)}else a+=o}else{if(r.Character.isLineTerminator(o.charCodeAt(0)))break;a+=o}}return""!==t&&(this.index=e,this.throwUnexpectedToken()),{type:8,value:a,octal:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanTemplate=function(){var e="",t=!1,i=this.index,s="`"===this.source[i],a=!1,o=2;for(++this.index;!this.eof();){var u=this.source[this.index++];if("`"===u){o=1,a=!0,t=!0;break}if("$"===u){if("{"===this.source[this.index]){this.curlyStack.push("${"),++this.index,t=!0;break}e+=u}else if("\\"===u)if(u=this.source[this.index++],r.Character.isLineTerminator(u.charCodeAt(0)))++this.lineNumber,"\r"===u&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(u){case"n":e+="\n";break;case"r":e+="\r";break;case"t":e+="\t";break;case"u":if("{"===this.source[this.index])++this.index,e+=this.scanUnicodeCodePointEscape();else{var h=this.index,c=this.scanHexEscape(u);null!==c?e+=c:(this.index=h,e+=u)}break;case"x":var l=this.scanHexEscape(u);null===l&&this.throwUnexpectedToken(n.Messages.InvalidHexEscapeSequence),e+=l;break;case"b":e+="\b";break;case"f":e+="\f";break;case"v":e+="\v";break;default:"0"===u?(r.Character.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(n.Messages.TemplateOctalLiteral),e+="\0"):r.Character.isOctalDigit(u.charCodeAt(0))?this.throwUnexpectedToken(n.Messages.TemplateOctalLiteral):e+=u}else r.Character.isLineTerminator(u.charCodeAt(0))?(++this.lineNumber,"\r"===u&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index,e+="\n"):e+=u}return t||this.throwUnexpectedToken(),s||this.curlyStack.pop(),{type:10,value:this.source.slice(i+1,this.index-o),cooked:e,head:s,tail:a,lineNumber:this.lineNumber,lineStart:this.lineStart,start:i,end:this.index}},e.prototype.testRegExp=function(e,t){var i=e,s=this;t.indexOf("u")>=0&&(i=i.replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,function(e,t,i){var r=parseInt(t||i,16);return r>1114111&&s.throwUnexpectedToken(n.Messages.InvalidRegExp),r<=65535?String.fromCharCode(r):"￿"}).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"￿"));try{RegExp(i)}catch(e){this.throwUnexpectedToken(n.Messages.InvalidRegExp)}try{return new RegExp(e,t)}catch(e){return null}},e.prototype.scanRegExpBody=function(){var e=this.source[this.index];s.assert("/"===e,"Regular expression literal must start with a slash");for(var t=this.source[this.index++],i=!1,a=!1;!this.eof();)if(t+=e=this.source[this.index++],"\\"===e)e=this.source[this.index++],r.Character.isLineTerminator(e.charCodeAt(0))&&this.throwUnexpectedToken(n.Messages.UnterminatedRegExp),t+=e;else if(r.Character.isLineTerminator(e.charCodeAt(0)))this.throwUnexpectedToken(n.Messages.UnterminatedRegExp);else if(i)"]"===e&&(i=!1);else{if("/"===e){a=!0;break}"["===e&&(i=!0)}return a||this.throwUnexpectedToken(n.Messages.UnterminatedRegExp),t.substr(1,t.length-2)},e.prototype.scanRegExpFlags=function(){for(var e="";!this.eof();){var t=this.source[this.index];if(!r.Character.isIdentifierPart(t.charCodeAt(0)))break;if(++this.index,"\\"!==t||this.eof())e+=t,t;else if("u"===(t=this.source[this.index])){++this.index;var i=this.index,s=this.scanHexEscape("u");if(null!==s)for(e+=s,"\\u";i<this.index;++i)this.source[i];else this.index=i,e+="u","\\u";this.tolerateUnexpectedToken()}else"\\",this.tolerateUnexpectedToken()}return e},e.prototype.scanRegExp=function(){var e=this.index,t=this.scanRegExpBody(),i=this.scanRegExpFlags();return{type:9,value:"",pattern:t,flags:i,regex:this.testRegExp(t,i),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.lex=function(){if(this.eof())return{type:2,value:"",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};var e=this.source.charCodeAt(this.index);return r.Character.isIdentifierStart(e)?this.scanIdentifier():40===e||41===e||59===e?this.scanPunctuator():39===e||34===e?this.scanStringLiteral():46===e?r.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():r.Character.isDecimalDigit(e)?this.scanNumericLiteral():96===e||125===e&&"${"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():e>=55296&&e<57343&&r.Character.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()},e}();t.Scanner=u},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenName={},t.TokenName[1]="Boolean",t.TokenName[2]="<end>",t.TokenName[3]="Identifier",t.TokenName[4]="Keyword",t.TokenName[5]="Null",t.TokenName[6]="Numeric",t.TokenName[7]="Punctuator",t.TokenName[8]="String",t.TokenName[9]="RegularExpression",t.TokenName[10]="Template"},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.XHTMLEntities={quot:'"',amp:"&",apos:"'",gt:">",nbsp:" ",iexcl:"¡",cent:"¢",pound:"£",curren:"¤",yen:"¥",brvbar:"¦",sect:"§",uml:"¨",copy:"©",ordf:"ª",laquo:"«",not:"¬",shy:"­",reg:"®",macr:"¯",deg:"°",plusmn:"±",sup2:"²",sup3:"³",acute:"´",micro:"µ",para:"¶",middot:"·",cedil:"¸",sup1:"¹",ordm:"º",raquo:"»",frac14:"¼",frac12:"½",frac34:"¾",iquest:"¿",Agrave:"À",Aacute:"Á",Acirc:"Â",Atilde:"Ã",Auml:"Ä",Aring:"Å",AElig:"Æ",Ccedil:"Ç",Egrave:"È",Eacute:"É",Ecirc:"Ê",Euml:"Ë",Igrave:"Ì",Iacute:"Í",Icirc:"Î",Iuml:"Ï",ETH:"Ð",Ntilde:"Ñ",Ograve:"Ò",Oacute:"Ó",Ocirc:"Ô",Otilde:"Õ",Ouml:"Ö",times:"×",Oslash:"Ø",Ugrave:"Ù",Uacute:"Ú",Ucirc:"Û",Uuml:"Ü",Yacute:"Ý",THORN:"Þ",szlig:"ß",agrave:"à",aacute:"á",acirc:"â",atilde:"ã",auml:"ä",aring:"å",aelig:"æ",ccedil:"ç",egrave:"è",eacute:"é",ecirc:"ê",euml:"ë",igrave:"ì",iacute:"í",icirc:"î",iuml:"ï",eth:"ð",ntilde:"ñ",ograve:"ò",oacute:"ó",ocirc:"ô",otilde:"õ",ouml:"ö",divide:"÷",oslash:"ø",ugrave:"ù",uacute:"ú",ucirc:"û",uuml:"ü",yacute:"ý",thorn:"þ",yuml:"ÿ",OElig:"Œ",oelig:"œ",Scaron:"Š",scaron:"š",Yuml:"Ÿ",fnof:"ƒ",circ:"ˆ",tilde:"˜",Alpha:"Α",Beta:"Β",Gamma:"Γ",Delta:"Δ",Epsilon:"Ε",Zeta:"Ζ",Eta:"Η",Theta:"Θ",Iota:"Ι",Kappa:"Κ",Lambda:"Λ",Mu:"Μ",Nu:"Ν",Xi:"Ξ",Omicron:"Ο",Pi:"Π",Rho:"Ρ",Sigma:"Σ",Tau:"Τ",Upsilon:"Υ",Phi:"Φ",Chi:"Χ",Psi:"Ψ",Omega:"Ω",alpha:"α",beta:"β",gamma:"γ",delta:"δ",epsilon:"ε",zeta:"ζ",eta:"η",theta:"θ",iota:"ι",kappa:"κ",lambda:"λ",mu:"μ",nu:"ν",xi:"ξ",omicron:"ο",pi:"π",rho:"ρ",sigmaf:"ς",sigma:"σ",tau:"τ",upsilon:"υ",phi:"φ",chi:"χ",psi:"ψ",omega:"ω",thetasym:"ϑ",upsih:"ϒ",piv:"ϖ",ensp:" ",emsp:" ",thinsp:" ",zwnj:"‌",zwj:"‍",lrm:"‎",rlm:"‏",ndash:"–",mdash:"—",lsquo:"‘",rsquo:"’",sbquo:"‚",ldquo:"“",rdquo:"”",bdquo:"„",dagger:"†",Dagger:"‡",bull:"•",hellip:"…",permil:"‰",prime:"′",Prime:"″",lsaquo:"‹",rsaquo:"›",oline:"‾",frasl:"⁄",euro:"€",image:"ℑ",weierp:"℘",real:"ℜ",trade:"™",alefsym:"ℵ",larr:"←",uarr:"↑",rarr:"→",darr:"↓",harr:"↔",crarr:"↵",lArr:"⇐",uArr:"⇑",rArr:"⇒",dArr:"⇓",hArr:"⇔",forall:"∀",part:"∂",exist:"∃",empty:"∅",nabla:"∇",isin:"∈",notin:"∉",ni:"∋",prod:"∏",sum:"∑",minus:"−",lowast:"∗",radic:"√",prop:"∝",infin:"∞",ang:"∠",and:"∧",or:"∨",cap:"∩",cup:"∪",int:"∫",there4:"∴",sim:"∼",cong:"≅",asymp:"≈",ne:"≠",equiv:"≡",le:"≤",ge:"≥",sub:"⊂",sup:"⊃",nsub:"⊄",sube:"⊆",supe:"⊇",oplus:"⊕",otimes:"⊗",perp:"⊥",sdot:"⋅",lceil:"⌈",rceil:"⌉",lfloor:"⌊",rfloor:"⌋",loz:"◊",spades:"♠",clubs:"♣",hearts:"♥",diams:"♦",lang:"⟨",rang:"⟩"}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=i(10),r=i(12),n=i(13),a=function(){function e(){this.values=[],this.curly=this.paren=-1}return e.prototype.beforeFunctionExpression=function(e){return["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","**","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="].indexOf(e)>=0},e.prototype.isRegexStart=function(){var e=this.values[this.values.length-1],t=null!==e;switch(e){case"this":case"]":t=!1;break;case")":var i=this.values[this.paren-1];t="if"===i||"while"===i||"for"===i||"with"===i;break;case"}":if(t=!1,"function"===this.values[this.curly-3])t=!!(s=this.values[this.curly-4])&&!this.beforeFunctionExpression(s);else if("function"===this.values[this.curly-4]){var s;t=!(s=this.values[this.curly-5])||!this.beforeFunctionExpression(s)}}return t},e.prototype.push=function(e){7===e.type||4===e.type?("{"===e.value?this.curly=this.values.length:"("===e.value&&(this.paren=this.values.length),this.values.push(e.value)):this.values.push(null)},e}(),o=function(){function e(e,t){this.errorHandler=new s.ErrorHandler,this.errorHandler.tolerant=!!t&&("boolean"==typeof t.tolerant&&t.tolerant),this.scanner=new r.Scanner(e,this.errorHandler),this.scanner.trackComment=!!t&&("boolean"==typeof t.comment&&t.comment),this.trackRange=!!t&&("boolean"==typeof t.range&&t.range),this.trackLoc=!!t&&("boolean"==typeof t.loc&&t.loc),this.buffer=[],this.reader=new a}return e.prototype.errors=function(){return this.errorHandler.errors},e.prototype.getNextToken=function(){if(0===this.buffer.length){var e=this.scanner.scanComments();if(this.scanner.trackComment)for(var t=0;t<e.length;++t){var i=e[t],s=this.scanner.source.slice(i.slice[0],i.slice[1]),r={type:i.multiLine?"BlockComment":"LineComment",value:s};this.trackRange&&(r.range=i.range),this.trackLoc&&(r.loc=i.loc),this.buffer.push(r)}if(!this.scanner.eof()){var a=void 0;this.trackLoc&&(a={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});var o="/"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(o);var u={type:n.TokenName[o.type],value:this.scanner.source.slice(o.start,o.end)};if(this.trackRange&&(u.range=[o.start,o.end]),this.trackLoc&&(a.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},u.loc=a),9===o.type){var h=o.pattern,c=o.flags;u.regex={pattern:h,flags:c}}this.buffer.push(u)}}return this.buffer.shift()},e}();t.Tokenizer=o}])});

},{}],15:[function(require,module,exports){
!function e(t){"use strict";var n,r,i,o,a,s,l,p,c;function u(e){var t,n,r={};for(t in e)e.hasOwnProperty(t)&&(n=e[t],r[t]="object"==typeof n&&null!==n?u(n):n);return r}function f(e,t){this.parent=e,this.key=t}function h(e,t,n,r){this.node=e,this.path=t,this.wrap=n,this.ref=r}function m(){}function d(e){return null!=e&&("object"==typeof e&&"string"==typeof e.type)}function y(e,t){return(e===n.ObjectExpression||e===n.ObjectPattern)&&"properties"===t}function _(e,t){return(new m).traverse(e,t)}function x(e,t){var n;return n=function(e,t){var n,r,i,o;for(r=e.length,i=0;r;)t(e[o=i+(n=r>>>1)])?r=n:(i=o+1,r-=n+1);return i}(t,function(t){return t.range[0]>e.range[0]}),e.extendedRange=[e.range[0],e.range[1]],n!==t.length&&(e.extendedRange[1]=t[n].range[0]),(n-=1)>=0&&(e.extendedRange[0]=t[n].range[1]),e}return(r=Array.isArray)||(r=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),a=Object.create||function(){function e(){}return function(t){return e.prototype=t,new e}}(),s=Object.keys||function(e){var t,n=[];for(t in e)n.push(t);return n},n={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ComprehensionBlock:"ComprehensionBlock",ComprehensionExpression:"ComprehensionExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DebuggerStatement:"DebuggerStatement",DirectiveStatement:"DirectiveStatement",DoWhileStatement:"DoWhileStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",ForOfStatement:"ForOfStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",GeneratorExpression:"GeneratorExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",ModuleSpecifier:"ModuleSpecifier",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"},o={AssignmentExpression:["left","right"],AssignmentPattern:["left","right"],ArrayExpression:["elements"],ArrayPattern:["elements"],ArrowFunctionExpression:["params","body"],AwaitExpression:["argument"],BlockStatement:["body"],BinaryExpression:["left","right"],BreakStatement:["label"],CallExpression:["callee","arguments"],CatchClause:["param","body"],ClassBody:["body"],ClassDeclaration:["id","superClass","body"],ClassExpression:["id","superClass","body"],ComprehensionBlock:["left","right"],ComprehensionExpression:["blocks","filter","body"],ConditionalExpression:["test","consequent","alternate"],ContinueStatement:["label"],DebuggerStatement:[],DirectiveStatement:[],DoWhileStatement:["body","test"],EmptyStatement:[],ExportAllDeclaration:["source"],ExportDefaultDeclaration:["declaration"],ExportNamedDeclaration:["declaration","specifiers","source"],ExportSpecifier:["exported","local"],ExpressionStatement:["expression"],ForStatement:["init","test","update","body"],ForInStatement:["left","right","body"],ForOfStatement:["left","right","body"],FunctionDeclaration:["id","params","body"],FunctionExpression:["id","params","body"],GeneratorExpression:["blocks","filter","body"],Identifier:[],IfStatement:["test","consequent","alternate"],ImportDeclaration:["specifiers","source"],ImportDefaultSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportSpecifier:["imported","local"],Literal:[],LabeledStatement:["label","body"],LogicalExpression:["left","right"],MemberExpression:["object","property"],MetaProperty:["meta","property"],MethodDefinition:["key","value"],ModuleSpecifier:[],NewExpression:["callee","arguments"],ObjectExpression:["properties"],ObjectPattern:["properties"],Program:["body"],Property:["key","value"],RestElement:["argument"],ReturnStatement:["argument"],SequenceExpression:["expressions"],SpreadElement:["argument"],Super:[],SwitchStatement:["discriminant","cases"],SwitchCase:["test","consequent"],TaggedTemplateExpression:["tag","quasi"],TemplateElement:[],TemplateLiteral:["quasis","expressions"],ThisExpression:[],ThrowStatement:["argument"],TryStatement:["block","handler","finalizer"],UnaryExpression:["argument"],UpdateExpression:["argument"],VariableDeclaration:["declarations"],VariableDeclarator:["id","init"],WhileStatement:["test","body"],WithStatement:["object","body"],YieldExpression:["argument"]},i={Break:l={},Skip:p={},Remove:c={}},f.prototype.replace=function(e){this.parent[this.key]=e},f.prototype.remove=function(){return r(this.parent)?(this.parent.splice(this.key,1),!0):(this.replace(null),!1)},m.prototype.path=function(){var e,t,n,i,o;function a(e,t){if(r(t))for(n=0,i=t.length;n<i;++n)e.push(t[n]);else e.push(t)}if(!this.__current.path)return null;for(o=[],e=2,t=this.__leavelist.length;e<t;++e)a(o,this.__leavelist[e].path);return a(o,this.__current.path),o},m.prototype.type=function(){return this.current().type||this.__current.wrap},m.prototype.parents=function(){var e,t,n;for(n=[],e=1,t=this.__leavelist.length;e<t;++e)n.push(this.__leavelist[e].node);return n},m.prototype.current=function(){return this.__current.node},m.prototype.__execute=function(e,t){var n,r;return r=void 0,n=this.__current,this.__current=t,this.__state=null,e&&(r=e.call(this,t.node,this.__leavelist[this.__leavelist.length-1].node)),this.__current=n,r},m.prototype.notify=function(e){this.__state=e},m.prototype.skip=function(){this.notify(p)},m.prototype.break=function(){this.notify(l)},m.prototype.remove=function(){this.notify(c)},m.prototype.__initialize=function(e,t){this.visitor=t,this.root=e,this.__worklist=[],this.__leavelist=[],this.__current=null,this.__state=null,this.__fallback=null,"iteration"===t.fallback?this.__fallback=s:"function"==typeof t.fallback&&(this.__fallback=t.fallback),this.__keys=o,t.keys&&(this.__keys=function(e,t){var n,r,i,o=s(t);for(r=0,i=o.length;r<i;r+=1)e[n=o[r]]=t[n];return e}(a(this.__keys),t.keys))},m.prototype.traverse=function(e,t){var n,i,o,a,s,c,u,f,m,_,x,g;for(this.__initialize(e,t),g={},n=this.__worklist,i=this.__leavelist,n.push(new h(e,null,null,null)),i.push(new h(null,null,null,null));n.length;)if((o=n.pop())!==g){if(o.node){if(c=this.__execute(t.enter,o),this.__state===l||c===l)return;if(n.push(g),i.push(o),this.__state===p||c===p)continue;if(s=(a=o.node).type||o.wrap,!(_=this.__keys[s])){if(!this.__fallback)throw new Error("Unknown node type "+s+".");_=this.__fallback(a)}for(f=_.length;(f-=1)>=0;)if(x=a[u=_[f]])if(r(x)){for(m=x.length;(m-=1)>=0;)if(x[m]){if(y(s,_[f]))o=new h(x[m],[u,m],"Property",null);else{if(!d(x[m]))continue;o=new h(x[m],[u,m],null,null)}n.push(o)}}else d(x)&&n.push(new h(x,u,null,null))}}else if(o=i.pop(),c=this.__execute(t.leave,o),this.__state===l||c===l)return},m.prototype.replace=function(e,t){var n,i,o,a,s,u,m,_,x,g,E,S,b;function k(e){var t,r,i,o;if(e.ref.remove())for(r=e.ref.key,o=e.ref.parent,t=n.length;t--;)if((i=n[t]).ref&&i.ref.parent===o){if(i.ref.key<r)break;--i.ref.key}}for(this.__initialize(e,t),E={},n=this.__worklist,i=this.__leavelist,u=new h(e,null,null,new f(S={root:e},"root")),n.push(u),i.push(u);n.length;)if((u=n.pop())!==E){if(void 0!==(s=this.__execute(t.enter,u))&&s!==l&&s!==p&&s!==c&&(u.ref.replace(s),u.node=s),this.__state!==c&&s!==c||(k(u),u.node=null),this.__state===l||s===l)return S.root;if((o=u.node)&&(n.push(E),i.push(u),this.__state!==p&&s!==p)){if(a=o.type||u.wrap,!(x=this.__keys[a])){if(!this.__fallback)throw new Error("Unknown node type "+a+".");x=this.__fallback(o)}for(m=x.length;(m-=1)>=0;)if(g=o[b=x[m]])if(r(g)){for(_=g.length;(_-=1)>=0;)if(g[_]){if(y(a,x[m]))u=new h(g[_],[b,_],"Property",new f(g,_));else{if(!d(g[_]))continue;u=new h(g[_],[b,_],null,new f(g,_))}n.push(u)}}else d(g)&&n.push(new h(g,b,null,new f(o,b)))}}else if(u=i.pop(),void 0!==(s=this.__execute(t.leave,u))&&s!==l&&s!==p&&s!==c&&u.ref.replace(s),this.__state!==c&&s!==c||k(u),this.__state===l||s===l)return S.root;return S.root},t.version=require("./package.json").version,t.Syntax=n,t.traverse=_,t.replace=function(e,t){return(new m).replace(e,t)},t.attachComments=function(e,t,n){var r,o,a,s,l=[];if(!e.range)throw new Error("attachComments needs range information");if(!n.length){if(t.length){for(a=0,o=t.length;a<o;a+=1)(r=u(t[a])).extendedRange=[0,e.range[0]],l.push(r);e.leadingComments=l}return e}for(a=0,o=t.length;a<o;a+=1)l.push(x(u(t[a]),n));return s=0,_(e,{enter:function(e){for(var t;s<l.length&&!((t=l[s]).extendedRange[1]>e.range[0]);)t.extendedRange[1]===e.range[0]?(e.leadingComments||(e.leadingComments=[]),e.leadingComments.push(t),l.splice(s,1)):s+=1;return s===l.length?i.Break:l[s].extendedRange[0]>e.range[1]?i.Skip:void 0}}),s=0,_(e,{leave:function(e){for(var t;s<l.length&&(t=l[s],!(e.range[1]<t.extendedRange[0]));)e.range[1]===t.extendedRange[0]?(e.trailingComments||(e.trailingComments=[]),e.trailingComments.push(t),l.splice(s,1)):s+=1;return s===l.length?i.Break:l[s].extendedRange[0]>e.range[1]?i.Skip:void 0}}),e},t.VisitorKeys=o,t.VisitorOption=i,t.Controller=m,t.cloneEnvironment=function(){return e({})},t}(exports);

},{"./package.json":16}],16:[function(require,module,exports){
module.exports={
  "_args": [
    [
      {
        "raw": "estraverse",
        "scope": null,
        "escapedName": "estraverse",
        "name": "estraverse",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Hood\\WebstormProjects\\Steenrod"
    ]
  ],
  "_from": "estraverse@latest",
  "_id": "estraverse@4.2.0",
  "_inCache": true,
  "_location": "/estraverse",
  "_nodeVersion": "0.12.9",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/estraverse-4.2.0.tgz_1457646738925_0.7118953282479197"
  },
  "_npmUser": {
    "name": "nzakas",
    "email": "nicholas@nczconsulting.com"
  },
  "_npmVersion": "2.14.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "estraverse",
    "scope": null,
    "escapedName": "estraverse",
    "name": "estraverse",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/escodegen"
  ],
  "_resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
  "_shasum": "0dee3fed31fcd469618ce7342099fc1afa0bdb13",
  "_shrinkwrap": null,
  "_spec": "estraverse",
  "_where": "C:\\Users\\Hood\\WebstormProjects\\Steenrod",
  "bugs": {
    "url": "https://github.com/estools/estraverse/issues"
  },
  "dependencies": {},
  "description": "ECMAScript JS AST traversal functions",
  "devDependencies": {
    "babel-preset-es2015": "^6.3.13",
    "babel-register": "^6.3.13",
    "chai": "^2.1.1",
    "espree": "^1.11.0",
    "gulp": "^3.8.10",
    "gulp-bump": "^0.2.2",
    "gulp-filter": "^2.0.0",
    "gulp-git": "^1.0.1",
    "gulp-tag-version": "^1.2.1",
    "jshint": "^2.5.6",
    "mocha": "^2.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0dee3fed31fcd469618ce7342099fc1afa0bdb13",
    "tarball": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "6f6a4e99653908e859c7c10d04d9518bf4844ede",
  "homepage": "https://github.com/estools/estraverse",
  "license": "BSD-2-Clause",
  "main": "estraverse.js",
  "maintainers": [
    {
      "name": "constellation",
      "email": "utatane.tea@gmail.com"
    },
    {
      "name": "michaelficarra",
      "email": "npm@michael.ficarra.me"
    },
    {
      "name": "nzakas",
      "email": "nicholas@nczconsulting.com"
    }
  ],
  "name": "estraverse",
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/estools/estraverse.git"
  },
  "scripts": {
    "lint": "jshint estraverse.js",
    "test": "npm run-script lint && npm run-script unit-test",
    "unit-test": "mocha --compilers js:babel-register"
  },
  "version": "4.2.0"
}

},{}],17:[function(require,module,exports){
!function(){"use strict";function e(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function t(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}module.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:e,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(t){return e(t)||null!=t&&"FunctionDeclaration"===t.type},isProblematicIfStatement:function(e){var n;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;n=e.consequent;do{if("IfStatement"===n.type&&null==n.alternate)return!0;n=t(n)}while(n);return!1},trailingStatement:t}}();

},{}],18:[function(require,module,exports){
!function(){"use strict";var u,D,A,F,C,E;function B(u){return u<=65535?String.fromCharCode(u):String.fromCharCode(Math.floor((u-65536)/1024)+55296)+String.fromCharCode((u-65536)%1024+56320)}for(D={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},u={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},A=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],F=new Array(128),E=0;E<128;++E)F[E]=E>=97&&E<=122||E>=65&&E<=90||36===E||95===E;for(C=new Array(128),E=0;E<128;++E)C[E]=E>=97&&E<=122||E>=65&&E<=90||E>=48&&E<=57||36===E||95===E;module.exports={isDecimalDigit:function(u){return 48<=u&&u<=57},isHexDigit:function(u){return 48<=u&&u<=57||97<=u&&u<=102||65<=u&&u<=70},isOctalDigit:function(u){return u>=48&&u<=55},isWhiteSpace:function(u){return 32===u||9===u||11===u||12===u||160===u||u>=5760&&A.indexOf(u)>=0},isLineTerminator:function(u){return 10===u||13===u||8232===u||8233===u},isIdentifierStartES5:function(u){return u<128?F[u]:D.NonAsciiIdentifierStart.test(B(u))},isIdentifierPartES5:function(u){return u<128?C[u]:D.NonAsciiIdentifierPart.test(B(u))},isIdentifierStartES6:function(D){return D<128?F[D]:u.NonAsciiIdentifierStart.test(B(D))},isIdentifierPartES6:function(D){return D<128?C[D]:u.NonAsciiIdentifierPart.test(B(D))}}}();

},{}],19:[function(require,module,exports){
!function(){"use strict";var e=require("./code");function r(e,r){return!(!r&&"yield"===e)&&t(e,r)}function t(e,r){if(r&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function n(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function i(e,r){return"null"===e||"true"===e||"false"===e||t(e,r)}function u(r){var t,n,i;if(0===r.length)return!1;if(i=r.charCodeAt(0),!e.isIdentifierStartES5(i))return!1;for(t=1,n=r.length;t<n;++t)if(i=r.charCodeAt(t),!e.isIdentifierPartES5(i))return!1;return!0}function s(r){var t,n,i,u,s;if(0===r.length)return!1;for(s=e.isIdentifierStartES6,t=0,n=r.length;t<n;++t){if(55296<=(i=r.charCodeAt(t))&&i<=56319){if(++t>=n)return!1;if(!(56320<=(u=r.charCodeAt(t))&&u<=57343))return!1;i=1024*(i-55296)+(u-56320)+65536}if(!s(i))return!1;s=e.isIdentifierPartES6}return!0}module.exports={isKeywordES5:r,isKeywordES6:t,isReservedWordES5:n,isReservedWordES6:i,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:u,isIdentifierNameES6:s,isIdentifierES5:function(e,r){return u(e)&&!n(e,r)},isIdentifierES6:function(e,r){return s(e)&&!i(e,r)}}}();

},{"./code":18}],20:[function(require,module,exports){
!function(){"use strict";exports.ast=require("./ast"),exports.code=require("./code"),exports.keyword=require("./keyword")}();

},{"./ast":17,"./code":18,"./keyword":19}],21:[function(require,module,exports){
function stringify(n,r){r=r||{};var t=JSON.stringify([1],null,get(r,"indent",2)).slice(2,-3),i=get(r,"margins",!1),e=""===t?1/0:get(r,"maxLength",80);return function n(r,f,u){r&&"function"==typeof r.toJSON&&(r=r.toJSON());var g=JSON.stringify(r);if(void 0===g)return g;var o=e-f.length-u;if(g.length<=o){var a=prettify(g,i);if(a.length<=o)return a}if("object"==typeof r&&null!==r){var l,s=f+t,c=[],h=function(n,r){return r===n.length-1?0:1};if(Array.isArray(r)){for(var y=0;y<r.length;y++)c.push(n(r[y],s,h(r,y))||"null");l="[]"}else Object.keys(r).forEach(function(t,i,e){var f=JSON.stringify(t)+": ",u=n(r[t],s,f.length+h(e,i));void 0!==u&&c.push(f+u)}),l="{}";if(c.length>0)return[l[0],t+c.join(",\n"+s),l[1]].join("\n"+f)}return g}(n,"",0)}var stringOrChar=/("(?:[^\\"]|\\.)*")|[:,\][}{]/g;function prettify(n,r){var t=r?" ":"",i={"{":"{"+t,"[":"["+t,"}":t+"}","]":t+"]",",":", ",":":": "};return n.replace(stringOrChar,function(n,r){return r?n:i[n]})}function get(n,r,t){return r in n?n[r]:t}module.exports=stringify;

},{}],22:[function(require,module,exports){
let Vector=require("./vector.js"),error=require("./errors.js"),combinatorics=require("./combinatorics.js"),multinomial=combinatorics.multinomial;function find_next_milnor_matrix(e,t,r,i){let n,l=e.length+1,o=t.length+1;for(let t=1;!n&&t<l;t++){let l=r[t][0];for(let s=1;!n&&s<o;s++){let a=Math.pow(i,s);if(l>=a){let i=0;for(let e=0;e<t;e++)i+=r[e][s];if(0!==i){n=!0;for(let i=1;i<t;i++){r[i][0]=e[i-1];for(let e=1;e<o;e++)r[0][e]=r[0][e]+r[i][e],r[i][e]=0}for(let e=1;e<s;e++)r[0][e]=r[0][e]+r[t][e],r[t][e]=0;r[0][s]=r[0][s]-1,r[t][s]=r[t][s]+1,r[t][0]=l-a}else l+=r[t][s]*a}else l+=r[t][s]*a}}return n}function milnor_multiplication_even(e,t,r){let i=new MilnorBasis(r),n=e.length+1,l=t.length+1,o=e.length+t.length,s=Array(n).fill().map(()=>Array(l).fill(0));for(let e=1;e<l;e++)s[0][e]=t[e-1];for(let t=1;t<n;t++)s[t][0]=e[t-1];do{let e=1,t=Array(o).fill(0);for(let i=1;i<=o;i++){let o=[];for(let e=Math.max(0,i-l+1);e<Math.min(1+i,n);e++)o.push(s[e][i-e]);if(0===(e*=multinomial(o,r)))break;t[i-1]=o.reduce((e,t)=>e+t)}if(0!==e){let r=o-1;for(;r>=0&&0==t[r];)r--;let n=t.slice(0,r+1);i.addTerm(n,e)}}while(find_next_milnor_matrix(e,t,s,r));return i}function milnor_multiplication_full(e,t,r){let i,n=t[0],l=t[1],o=new MilnorBasis(r);o.set(e,1);for(let e of n){let t=o;o=new MilnorBasis(r);for(let i of t.keys())for(let n=0;n<1+i[1].length;n++)if(!i[0].includes(e+n)&&(0===n||Math.pow(r,e)<=i[1][n-1])){let l,s=new Set(i[0]),a=-((l=(s=[...s]).length>0?s.filter(t=>e+n<=t&&t<=Math.max(...s)).length:0)%2*2-1)*t.get(i),f=i[0].slice();0===l?f.push(e+n):f.splice(f.length-l,0,e+n),s=f;let h=i[1].slice();for(n>0&&(h[n-1]=h[n-1]-Math.pow(r,e));h.length>0&&0===h[h.length-1];)h.pop();o.set([s,h],(a%r+r)%r)}}if(0===l.length)i=o;else{i=new MilnorBasis(r);for(const[e,t]of o.keys()){let n=o.get([e,t]),s=milnor_multiplication_even(t,l,r);for(let t of s.keys())i.addTerm([e,t],n*s.get(t))}}return i}function milnor_multiplication(e,t,r){return 2===r?milnor_multiplication_even(e,t,r):milnor_multiplication_full(e,t,r)}class MilnorBasis extends Vector{constructor(e){super(e)}static unit(e){let t=new MilnorBasis(e);return 2===e?t.set([],1):t.set([[],[]],1),t}static Q(e,t){let r=new MilnorBasis(t);if(Array.isArray(e)){for(let t of e)error.checkNonnegativeInteger("Q",e,t);if(e.length>1)return e.map(e=>MilnorBasis.Q(e,t)).reduce((e,t)=>e.mult(t),MilnorBasis.unit(t));e=e[0]}if(error.checkNonnegativeInteger("Q",[e],e),2===t){let t=Array(e+1).fill(0);t[e]=1,r.set(t,1)}else r.set([[e],[]],1);return r}static Sq(e,t){let r=new MilnorBasis(t);Array.isArray(e)||(e=[e]);for(let t of e)error.checkNonnegativeInteger("Sq",e,t);if(2!==t)throw"Error";return r.set(e,1),r}static P(e,t){let r=new MilnorBasis(t);Array.isArray(e)||(e=[e]);for(let t of e)error.checkNonnegativeInteger("P",e,t);return 2===t?r.set(e.map(e=>2*e),1):r.set([[],e],1),r}static bP(e,t){let r=new MilnorBasis(t);Array.isArray(e)||(e=[e]);for(let t of e)error.checkNonnegativeInteger("bP",e,t);return 2===t?milnor_multiplication_even([1],e.map(e=>2*e),2):(r.set([[1],e],1),r)}static b(e){let t=new MilnorBasis(e);return 2===e?t.set([1]):t.set([[0],[]],1),t}static pst(e,t){let r=e[0],i=e[1];error.checkNonnegativeInteger("pst",e,r),error.checkNonnegativeInteger("pst",e,i);let n=Array(i).fill(0);return n[i-1]=Math.pow(t,r),2===t?MilnorBasis.Sq(n,t):MilnorBasis.P(n,t)}mult(e){return e.constructor===Number?this.scale(e):super.mult((e,t)=>milnor_multiplication(e,t,this.p),e)}homogenousQ(){if(void 0!==this.homogenous)return this.homgenous;let e=new Set,t=0;for(let[r,i]of this){if(t=0,2===this.p)for(let e=0;e<r.length;e++)t+=(Math.pow(2,e+1)-1)*r[e];else{let e=r[0],i=r[1];for(let r=0;r<e.length;r++)e[r]>0&&(t+=2*Math.pow(this.p,r)-1);for(let e=0;e<i.length;e++)t+=(2*Math.pow(p,e+1)-2)*i[e]}e.add(t)}return this.homgenous=e.size<=1,e.size<=1&&(this.deg=t),this.homgenous}degree(){if(this.homogenousQ())return this.deg;throw new Error("Inhomogenous element")}excess(){let e=Number.MAX_SAFE_INTEGER;for(let[t,r]of this){let r;(r=2===this.p?t.reduce((e,t)=>e+t):t[0].reduce((e,t)=>e+t)+2*t[1].reduce((e,t)=>e+t))<e&&(e=r)}return e}toLatex(){let e=[];if(2===this.p)for(let[t,r]of this){let r=t.map(e=>`Sq^{${e}}`).join("");e.push(r)}else for(let[t,r]of this){let i=t.map((e,t)=>t%2==0?1===e?"b":"":`P^{${e}}`).join("");1!==r&&(i=r+i),e.push(i)}return e.join(" + ")}toString(){let e=[];if(2===this.p)for(let[t,r]of this){let r=`Sq(${t.join(", ")})`;e.push(r)}else for(let[t,r]of this){let i=[t[0].map(e=>`Q${e}`).join("*"),t[1].length>0?`P(${t[1].join(", ")})`:""].filter(e=>""!==e).join("*");1!==r&&(i=r+"*"+i),e.push(i)}return""===(e=e.join(" + "))&&(e=0),e}inspect(e,t){return this.toString()}toJSON(){return"1s@"+this.toString()+"@s1"}}module.exports=MilnorBasis;let Infinity=Number.MAX_SAFE_INTEGER;function milnor_basis_even(e,t,r,i){if(0===e)return[[]];let n=[];for(let l of combinatorics.WeightedIntegerVectors(e,combinatorics.xi_degrees(e,t,!0))){l.reverse();let e=l.slice();for(;e.length>0&&0===e[e.length-1];)e.pop();let o=!0;if(void 0!==r&&r.length>0)for(let n=0;n<e.length;n++){if(r.length>n&&e[n]>=Math.pow(t,r[n])){o=!1;break}if(r.length<=n&&i<Infinity&&e[n]>=Math.pow(t,i)){o=!1;break}}else o=!i||i===Infinity;o&&n.push(e)}return n}function milnor_basis(e,t=2,r,i={}){if(r=r||2!==t,0===e)return r?[[[],[]]]:[[]];let n=i.profile,l=i.truncation_type;void 0===l&&(l=void 0!==n?0:Infinity);let o=[];if(!r)return milnor_basis_even(e,2,n,l);for(let r=0;r<e/(2*(t-1))+1;r++){let i,s=e-2*r*(t-1),a=combinatorics.xi_degrees(Math.floor((s-1)/(2*(t-1))),t).map(e=>1+2*(t-1)*e);a.push(1);let f=a;if(a.reverse(),!(s%(2*(t-1))>a.length))for(let e of combinatorics.restricted_partitions(s,f,!0)){let s=[];for(let t=0;t<a.length;t++)e.includes(a[t])&&s.push(t);let f=!0;if(void 0!==n&&n[1].length>0)for(let e of s){if(n[1].length>e&&1===n[1][e]){f=!1;break}if(n[1].length<=e&&0===l){f=!1;break}}else f=l===Infinity;if(f){i||(i=(i=milnor_basis_even(r,t,n&&n[0],l)).map(e=>0===e.length?[0]:e));for(let e of i)o.push([s,e])}}}return o}MilnorBasis.basis=milnor_basis;

},{"./combinatorics.js":26,"./errors.js":27,"./vector.js":30}],23:[function(require,module,exports){
let error=require("./errors"),Vector=require("./vector.js"),binomial=require("./combinatorics.js").binomial,MilnorBasis=require("./MilnorBasis");function adem(e,r,t,s=2,i){void 0===i&&(i=2!==s);let n,o,a,l=new Vector(s);if(!i){if(0===r)return l.set([e],1),l;if(0===e)return l.set([r],1),l;if(e>=2*r)return l.set([e,r],1),l;for(let t=0;t<1+e/2;t++)1===binomial(r-t-1,e-2*t)&&(0===t?l.set([e+r],1):l.set([e+r-t,t],1));return l}if(0===e&&0===r)return l.set([t],1),l;if(0===t?(a=0,n=e,o=r):(n=e,o=t,a=r),0===n)return l.set([a,o,0],1),l;if(0===o)return l.set([0,n,a],1),l;if(n>=s*o+a)return l.set([0,n,a,o,0],1),l;for(let r=0;r<1+e/s;r++){let e=-((n+r)%2*2-1)*binomial((o-r)*(s-1)-1+a,n-s*r,s);(e=(e+s)%s)%s!=0&&(0===r?l.set([a,n+o,0],e):l.set([a,n+o-r,0,r,0],e))}if(0!==a)for(let r=0;r<1+(e-1)/s;r++){let e=-((n+r-1)%2*2-1)*binomial((o-r)*(s-1)-1,n-s*r-1,s);0!==(e=(e%s+s)%s)&&(0===r?l.set([0,n+o,1],e):l.set([0,n+o-r,1,r,0],e))}return l}function make_mono_admissible(e,r=2,t){void 0===t&&(t=2!==r);let s=new SerreCartanBasis(r);if(1===e.length)return s.set(e,1),s;if(!t&&2===e.length)return adem(...e);if(!t){let r,t=!0;for(r=0;r<e.length-1;r++)if(e[r]<2*e[r+1]){t=!1;break}if(t)return s.set(e,1),s;let i=adem(e[r],e[r+1]);for(let t of i.keys()){let n=e.slice(0,r).concat(t,e.slice(r+2));n=make_mono_admissible(n),s.addVector(n,i.get(t))}return s}let i,n=!0;for(i=1;i<e.length-2;i+=2)if(e[i]<e[i+1]+r*e[i+2]){n=!1;break}if(n)return s.set(e,1),s;let o=adem(...e.slice(i,i+3),r,!0);for(let t of o.keys()){let n=t.slice();if(n[0]=e[i-1]+t[0],e.length>=i+3&&(n[n.length-1]=e[i+3]+t[t.length-1]),n[0]<=1&&n[n.length-1]<=1){let a=e.slice(0,i-1).concat(n,e.slice(i+4));a=make_mono_admissible(a,r,!0),s.addVector(a,o.get(t))}}return s}class SerreCartanBasis extends Vector{constructor(e){super(e)}static Sq(e,r){if(Array.isArray(e)&&e.length>1)throw new Error("Use Milnor Basis for Sq with multiple arguments");Array.isArray(e)&&(e=e[0]),error.checkNonnegativeInteger("Sq",[e],e);let t=new SerreCartanBasis(r);return 2===r?t.set([e],1):t.set([e%2,Math.floor(e/2),0],1),t}static P(e,r){if(Array.isArray(e)&&e.length>1)throw new Error("Use Milnor Basis for P with multiple arguments");Array.isArray(e)&&(e=e[0]),error.checkNonnegativeInteger("P",[e],e);let t=new SerreCartanBasis(r);return 2===r?t.set([2*e],1):t.set([0,e,0],1),t}static bP(e,r){if(Array.isArray(e)&&e.length>1)throw new Error("Use Milnor Basis for bP with multiple arguments");Array.isArray(e)&&(e=e[0]),error.checkNonnegativeInteger("bP",[e],e);let t=new SerreCartanBasis(r);return 2===r?t.set([2*e+1],1):t.set([1,e,0],1),t}static b(e){let r=new SerreCartanBasis(e);return r.set([1],1),r}mult(e){return e.constructor===Number?this.scale(e):2===this.p?super.mult((e,r)=>make_mono_admissible(e.concat(r),this.p),e):super.mult((e,r)=>{if(1===e[e.length-1]&&1===r[0])return new SerreCartanBasis(p);return make_mono_admissible(e.slice(0,e.length-1).concat([e[e.length-1]+r[0]],r.slice(1)),this.p)},e)}homogenousQ(){let e=new Set,r=0;for(let[t,s]of this)r=t.reduce((e,r)=>e+r),e.add(r);return e.size<=1&&(this.deg=r),e.size<=1}degree(){if(this.homogenousQ())return this.deg;throw new Error("Inhomogenous element")}excess(){let e=Number.MAX_SAFE_INTEGER;for(let[r,t]of this){if(0===r.length)return 0;let t;(t=2===this.p?2*r[0]-r.reduce((e,r)=>e+r):2*r[0]+4*r[1]-r.map((e,r)=>((r+1)%2+1)*e).reduce((e,r)=>e+r))<e&&(e=t)}return e}inspect(e,r){return this.toString()}toLatex(){let e=[];if(2===this.p)for(let[r,t]of this){let t=r.map(e=>`Sq^{${e}}`).join("");e.push(t)}else for(let[r,t]of this){let s=r.map((e,r)=>r%2==0?1===e?"b":"":`P^{${e}}`).join("");1!==t&&(s=t+s),e.push(s)}return e.join(" + ")}toString(){let e=[];if(2===this.p)for(let[r,t]of this){let t=r.map(e=>`Sq${e}`).join("*");e.push(t)}else for(let[r,t]of this){let s=r.map((e,r)=>r%2==0?1===e?"b":"":`P${e}`).filter(e=>""!==e).join("*");1!==t&&(s=t+"*"+s),e.push(s)}return""===(e=e.join(" + "))&&(e=0),e}toJSON(){return"1s@"+this.toString()+"@s1"}}function serre_cartan_basis(e,r=2,t,s=1){if(0===e)return[[]];if(!(t=t||2!==r)){let r=[[e]];for(let t=s;t<1+Math.floor(e/3);t++)for(let s of serre_cartan_basis(e-t,2,!1,2*t))r.push([...s,t]);return r}let i;i=e%(2*(r-1))==0&&e/(2*(r-1))>=s?[[0,e/(2*(r-1))|0,0]]:1===e?[[1]]:[];for(let n=s;n<1+Math.floor(e/(2*(r-1)));n++)if(e-2*(r-1)*n>0)for(let s of serre_cartan_basis(e-2*(r-1)*n,r,t,r*n))i.push([...s,n,0]);1===s&&(s=0);for(let n=s+1;n<1+e/(2*(r-1))|0;n++){let s=serre_cartan_basis(e-2*(r-1)*n-1,r,t,r*n);for(let e of s)0===e.length&&(e=[0]),i.push([...e,n,1])}return i}module.exports=SerreCartanBasis,SerreCartanBasis.basis=serre_cartan_basis;

},{"./MilnorBasis":22,"./combinatorics.js":26,"./errors":27,"./vector.js":30}],24:[function(require,module,exports){
let SerreCartanBasis=require("./SerreCartanBasis"),MilnorBasis=require("./MilnorBasis");SerreCartanBasis.basis_to_milnor=function(r,e){let s=MilnorBasis.unit(e);if(2===e)for(let t of r)s=s.mult(MilnorBasis.Sq(t,e));else{let t=0;for(let a of r)++t%2==1?0!==a&&(s=s.mult(MilnorBasis.Q(0,e))):s=s.mult(MilnorBasis.P(a,e))}return s},SerreCartanBasis.prototype.toMilnor=function(){return this.map_on_basis(r=>SerreCartanBasis.basis_to_milnor(r,this.p),MilnorBasis)};let pad_array=function(r,e,s){return r.concat(Array(e).fill(s)).slice(0,e)};MilnorBasis.basis_to_serrecartan=function(r,e){let s;if(2===e){let t=Array(r.length);t[r.length-1]=r[r.length-1];for(let e=r.length-2;e>=0;e--)t[e]=r[e]+2*t[e+1];let a=SerreCartanBasis.basis_to_milnor(t,e);a.delete(r),(s=a.map_on_basis(r=>MilnorBasis.basis_to_serrecartan(r,e),SerreCartanBasis)).set(t,1)}else{let t=r[0],a=r[1],i=Math.max(a.length,...t);a=pad_array(a,i,0);let n=Array(2*i+1);n.fill(0);for(let r of t)n[2*r]=1;n[n.length-2]=a[a.length-1]+n[n.length-1];let l=n.length-2;for(let r=a.length-2;r>=0;r--)n[l-=2]=n[l+1]+a[r]+e*n[l+2];let o=SerreCartanBasis.basis_to_milnor(n,e);o.delete(r),o.scale(-1),(s=o.map_on_basis(r=>MilnorBasis.basis_to_serrecartan(r,e),SerreCartanBasis)).set(n,1)}let t=new SerreCartanBasis(e);for(let[r,e]of s)t.set(r,e);return t},MilnorBasis.prototype.toSerreCartan=function(){return this.map_on_basis(r=>MilnorBasis.basis_to_serrecartan(r,this.p),SerreCartanBasis)};class BasisWrapper{constructor(r,e){this.algebra=r,void 0!==e&&(e.constructor===MilnorBasis?this.milnor=e:e.constructor===SerreCartanBasis&&(this.serre_cartan=e))}get(r){if(r===SerreCartanBasis)return this.getSerreCartan();if(r===MilnorBasis)return this.getMilnor();throw new Error("Unknown basis")}getMilnor(){return this.milnor||(this.milnor=this.serre_cartan.toMilnor()),this.milnor}getSerreCartan(){return this.serre_cartan||(this.serre_cartan=this.milnor.toSerreCartan()),this.serre_cartan}degree(){return this.serre_cartan?this.serre_cartan.degree():this.milnor.degree()}excess(){return this.serre_cartan?this.serre_cartan.excess():this.milnor.excess()}antipode(){this.getSerreCartan();throw new Error("Not implemented")}add(r){if(this.algebra.p!==otherVector.algebra.p)throw new Error(`Vectors ${this} and ${r} belong to different algebras and can't be multiplied.`);let e=new BasisWrapper(this.algebra);return this.serre_cartan&&r.serre_cartan&&(e.serre_cartan=this.serre_cartan.add(r.serre_cartan)),this.milnor&&r.milnor&&(e.milnor=this.milnor.add(r.milnor)),e.serre_cartan||e.milnor||(e.serre_cartan=this.getSerreCartan().add(r.getSerreCartan())),e}mult(r){if(this.algebra.p!==r.algebra.p)throw new Error(`Vectors ${this} and ${r} belong to different algebras and can't be multiplied.`);let e=new BasisWrapper(this.algebra);return this.serre_cartan&&r.serre_cartan&&(console.log("sc: ",this.serre_cartan),console.log("sc: ",r.serre_cartan),e.serre_cartan=this.serre_cartan.mult(r.serre_cartan)),this.milnor&&r.milnor&&(e.milnor=this.milnor.mult(r.milnor)),e.serre_cartan||e.milnor||(e.serre_cartan=this.getSerreCartan().mult(r.getSerreCartan())),e}equal(r){return this.algebra.p===r.algebra.p&&(this.serre_cartan?this.serre_cartan.equal(r.getSerreCartan()):this.milnor.equal(r.getMilnor()))}toString(){return this.get(this.algebra.getBasis()).toString()}toJSON(){return"1s@"+this.toString()+"@s1"}}BasisWrapper.basis=SerreCartanBasis;class SteenrodAlgebra{constructor(r,e){this.p=r,this._generic=2!==this.p,this._basis=e}prime(){return this.p}one(){return this.basis(0)[0]}setBasis(r){this._basis=r}Sq(...r){return r.length>1?new BasisWrapper(this,MilnorBasis.Sq(r,this.p)):new BasisWrapper(this,this._basis.Sq(r,this.p))}b(){return new BasisWrapper(this,this._basis.b())}P(...r){return r.length>1?new BasisWrapper(this,MilnorBasis.P(r,this.p)):new BasisWrapper(this,this._basis.P(r,this.p))}bP(...r){return r.length>1?new BasisWrapper(this,MilnorBasis.bP(r,this.p)):new BasisWrapper(this,this._basis.bP(r,this.p))}Q(...r){return new BasisWrapper(this,MilnorBasis.Q(r,this.p))}pst(...r){return new BasisWrapper(this,MilnorBasis.pst(r,this.p))}getBasis(){return this._basis}basis(r){let e=[];for(let s of this._basis.basis(r,this.p,this.generic)){let r=new this._basis(this.p);r.set(s,1),e.push(new BasisWrapper(this,r))}return e}antipode_on_basis(r){this.prime();let e=this.one();if(!this._generic){for(let s of r)e=self(sum(SteenrodAlgebra().basis(s)))*e;return e}for(let s of r)0!==s&&(e=-self.Q(0)*e)}}module.exports=SteenrodAlgebra;

},{"./MilnorBasis":22,"./SerreCartanBasis":23}],25:[function(require,module,exports){
"use strict";function stdCatToString(t){if(void 0!==t)return void 0!==t.getStringifyingMapKey?t.getStringifyingMapKey():t.toString()}var StringifyingMap=function(){function t(t){void 0===t&&(t=stdCatToString),this.catToString=t,this.m=new Map,this.key_string_to_key_object=new Map}return t.prototype.set=function(t,e){let i=this.catToString(t);if(void 0===i)throw new Error("Key encoding undefined.");return this.key_string_to_key_object.set(i,t),this.m.set(i,e)},t.prototype.get=function(t){if(void 0!==this.catToString(t))return this.m.get(this.catToString(t))},t.prototype.delete=function(t){return this.key_string_to_key_object.delete(this.catToString(t)),this.m.delete(this.catToString(t))},t.prototype.has=function(t){return void 0!==t&&this.m.has(this.catToString(t))},t.prototype.getOrElse=function(t,e){return this.has(t)?this.get(t):e},t.prototype[Symbol.iterator]=function*(){for(let t of this.m)yield[this.key_string_to_key_object.get(t[0]),t[1]]},t.prototype.keys=function(){return this.key_string_to_key_object.values()},t.prototype.toString=function(){return this.m},Object.defineProperty(t.prototype,"size",{get:function(){return this.m.size},enumerable:!0,configurable:!0}),t}();module.exports=StringifyingMap;

},{}],26:[function(require,module,exports){
function padLeft(e,t){return(Array(t).join("0")+e).slice(-t)}function base_p_expansion(e,t,n=0){let r=[];for(;0!==e;)r.push(e%t),e=e/t|0;for(;r.length<n;)r.push(0);return r}function binomial(e,t){if("number"!=typeof e||"number"!=typeof t)return!1;let n=1;for(let r=e-t+1;r<=e;r++)n*=r;for(let e=1;e<=t;e++)n/=e;return n}function multinomial_mod_2(e){let t=e[0];for(let n=1;n<e.length;n++){for(let r=1;r<=Math.min(t,e[n]);r<<=1)if((r&t)===r&&0!=(r&e[n]))return 0;t+=e[n]}return 1}function binomial_mod2(e,t){return e<t?0:+!(0!=(e-t&t))}function multinomial_odd(e,t){let n=1,r=base_p_expansion(e.reduce((e,t)=>e+t),t),i=e.map(e=>base_p_expansion(e,t,r.length));for(let e=0;e<r.length;e++){let r=1,o=0;for(let t of i)e<t.length&&(r*=binomial(o+=+t[e],+t[e]));if(0==(n=n*r%t))return 0}return n}function binomial_modp(e,t,n){return e<t?0:multinomial_odd([e-t,t],n)}function multinomial(e,t=2){return 2===t?multinomial_mod_2(e):multinomial_odd(e,t)}function binomial_gen(e,t,n=2){return e<t||t<0?0:2===n?binomial_mod2(e,t):binomial_modp(e,t,n)}function restricted_partitions(e,t,n=!1){if(e<0)return[];if(0===e)return[[]];{let r,i=[];r=n?1:0;let o=0;for(let l of t){if(o!==l)for(let o of restricted_partitions(e-l,t.slice(r),n))i.push([l,...o]);r++,o=l}return i}}function xi_degrees(e,t=2,n=!0){if(e<=0)return[];let r=e*(t-1)+1,i=1;for(;r>0;)r=Math.floor(r/t),i++;let o=[];for(let e=1;e<i;e++)o.push((Math.pow(t,e)-1)/(t-1)|0);return n&&o.reverse(),o}function*WeightedIntegerVectors(e,t){if(e<0)return;if(!t)return void(0===e&&(yield[]));if(1===t.length)return void(e%t[0]==0&&(yield[Math.floor(e/t[0])]));let n=0,r=[Math.floor(e/t[n])+1],i=e-r[r.length-1]*t[n];for(;r.length>0;)r[r.length-1]--,0===(i+=t[n])?yield[...r,...Array(t.length-r.length).fill(0)]:r[r.length-1]<0||i<0?(i+=r.pop()*t[n],n--):t.length===r.length+1?i%t[t.length-1]==0&&(yield[...r,Math.floor(i/t[t.length-1])]):(n++,r.push(Math.floor(i/t[n])+1),i-=r[r.length-1]*t[n])}exports.multinomial=multinomial,exports.binomial=binomial_gen,exports.restricted_partitions=restricted_partitions,exports.xi_degrees=xi_degrees,exports.WeightedIntegerVectors=WeightedIntegerVectors;

},{}],27:[function(require,module,exports){
function invalidInput(n,e,t){return new Error(`Invalid input ${n}(${e.map(JSON.stringify).join(", ")}): ${t}`)}function inputNotNonnegativeInteger(n,e,t){return invalidInput(n,e,`${JSON.stringify(t)} is not a nonnegative integer`)}function checkNonnegativeInteger(n,e,t){if(!Number.isInteger(t)||t<0)throw inputNotNonnegativeInteger(n,e,t)}exports.invalidInput=invalidInput,exports.inputNotNonnegativeInteger=inputNotNonnegativeInteger,exports.checkNonnegativeInteger=checkNonnegativeInteger;

},{}],28:[function(require,module,exports){
let stringify=require("json-stringify-pretty-compact"),preprocess=require("./preprocessor"),SerreCartanBasis=require("./SerreCartanBasis"),MilnorBasis=require("./MilnorBasis"),SteenrodAlgebra=require("./SteenrodAlgebra"),algebra=new SteenrodAlgebra(2,SerreCartanBasis);function setPrime(e){context.algebra=new SteenrodAlgebra(e,context.algebra.basis)}function setBasis(e){bases[e]&&(e=bases[e]),context.algebra.setBasis(e)}function passToAlgebra(e){context[e]=function(...r){return context.algebra[e](...r)}}function run(code){let result=eval(preprocess(code));return result=stringify(result),result&&(result=result.replace(/"1s@/g,"").replace(/@s1"/g,"")),result}function range(e,r,t=1){return 1===arguments.length&&(e=1,r=arguments[0],t=1),Array(Math.ceil((r-e+t)/t)).fill(e).map((e,r)=>e+r*t)}context={},context.algebra=algebra,bases={Milnor:MilnorBasis,SerreCartan:SerreCartanBasis},setBasis(SerreCartanBasis),context.MULT=function(e,r){return e.mult?e.mult(r):r.mult?r.mult(e):e*r},context.ADD=function(e,r){return e.add?e.add(r):r.add?r.add(e):e+r},context.SUB=function(e,r){return e.add&&r.scale?e.add(r.scale(-1)):e-r},context.MINUS=function(e){return e.scale?e.scale(-1):-e},context.EQUAL=function(e,r){return e.equal?e.equal(r):!r.equal&&e==r},console.log(context.algebra.basis),["Sq","b","P","bP","Q","pst","basis"].forEach(passToAlgebra),console.log(run("basis(2)")),"undefined"!=typeof window&&(window.context=context,window.setPrime=setPrime,window.setBasis=setBasis,window.SteenrodAlgebra=SteenrodAlgebra,window.run=run,window.range=range);

},{"./MilnorBasis":22,"./SerreCartanBasis":23,"./SteenrodAlgebra":24,"./preprocessor":29,"json-stringify-pretty-compact":21}],29:[function(require,module,exports){
let esprima=require("esprima"),estraverse=require("estraverse"),escodegen=require("escodegen");function getContextMemberNode(e){let r={type:"MemberExpression",object:{type:"Identifier",name:"context"}};return r.property={type:"Identifier",name:e,member:!0},r}let binary_operator_to_fn_map={"+":"ADD","-":"SUB","*":"MULT","==":"EQUAL"},unary_operator_to_fn_map={"-":"MINUS"},type_to_enter_fn_map={BinaryExpression:function(e){if(binary_operator_to_fn_map.hasOwnProperty(e.operator))return e.type="CallExpression",e.callee=getContextMemberNode(binary_operator_to_fn_map[e.operator]),e.arguments=[e.left,e.right],e.left=null,e.right=null,e.operator=null,e},UnaryExpression:function(e){if(unary_operator_to_fn_map.hasOwnProperty(e.operator))return e.type="CallExpression",e.callee=getContextMemberNode(unary_operator_to_fn_map[e.operator]),e.arguments=[e.argument],e.prefix=null,e}},algebra_functions=new Set(["Sq","P","Q","bP","pst","basis"]),Sqn_re=/^(Sq|P|Q|bP)(\d+)$/;function preprocess(e){let r=esprima.parse(e);return estraverse.traverse(r,{enter:function(e){"MemberExpression"===e.type&&(e.property.member=!0),type_to_enter_fn_map[e.type]&&type_to_enter_fn_map[e.type](e)}}),escodegen.generate(r)}type_to_enter_fn_map.Identifier=function(e){if(e.member)return e;if(Sqn_re.test(e.name)){let r=Sqn_re.exec(e.name),t=r[1],n=r[2];e.type="CallExpression",e.callee=getContextMemberNode(t),e.arguments=[{type:"Literal",value:Number(n),raw:n}],e.name=null}else algebra_functions.has(e.name)?(Object.assign(e,getContextMemberNode(e.name)),e.identifier=null):"b"===e.name&&(e.type="CallExpression",e.callee=getContextMemberNode("b"),e.arguments=[],e.identifier=null,e.name=null);return e},module.exports=preprocess;

},{"escodegen":1,"esprima":14,"estraverse":15}],30:[function(require,module,exports){
let StringifyingMap=require("./StringifyingMap");class Vector extends StringifyingMap{constructor(t){super(JSON.stringify),this.p=t}copy(){let t=new this.constructor(this.p);for(const[r,s]of this)t.set(r,s);return t}addTerm(t,r){return this.has(t)&&(r+=this.get(t)),0===(r=(r%this.p+this.p)%this.p)?this.delete(t):this.set(t,r),this}addVector(t,r=1){for(const[s,e]of t)this.addTerm(s,r*e);return this}scale(t){for(const[r,s]of this)this.set(r,t*s);return this}add(t){let r=new this.constructor(this.p);for(const[t,s]of this)r.set(t,s);for(const[s,e]of t)r.addTerm(s,e);return r}mult(t,r){let s=new this.constructor(this.p);for(const[e,o]of this)for(const[i,n]of r){let r=t(e,i);s.addVector(r,o*n)}return s}equal(t){let r=new StringifyingMap;for(let[s,e]of this){if(this.get(s)!==t.get(s))return!1;r.set(s,1)}for(let[s,e]of t)if(!r.has(s))return!1;return!0}map_on_basis(t,r){void 0===r&&(r=this.constructor);let s=new r(this.p);for(const[r,e]of this)s.addVector(t(r),e);return s}}module.exports=Vector;

},{"./StringifyingMap":25}]},{},[28])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
